ARM GAS  /tmp/cctFgeLM.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_MspInit:
  26              	.LFB143:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
ARM GAS  /tmp/cctFgeLM.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.7
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x07) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
ARM GAS  /tmp/cctFgeLM.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
ARM GAS  /tmp/cctFgeLM.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  28              		.loc 1 198 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctFgeLM.s 			page 5


  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE143:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv5-sp-d16
  45              	HAL_MspDeInit:
  46              	.LFB144:
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  47              		.loc 1 209 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE144:
  56              		.section	.text.HAL_DeInit,"ax",%progbits
  57              		.align	1
  58              		.global	HAL_DeInit
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv5-sp-d16
  64              	HAL_DeInit:
  65              	.LFB142:
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 169 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  70              		.loc 1 169 0
  71 0000 10B5     		push	{r4, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  76              		.loc 1 171 0
  77 0002 094B     		ldr	r3, .L5
  78 0004 4FF0FF32 		mov	r2, #-1
ARM GAS  /tmp/cctFgeLM.s 			page 6


  79 0008 1A62     		str	r2, [r3, #32]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  80              		.loc 1 172 0
  81 000a 0024     		movs	r4, #0
  82 000c 1C62     		str	r4, [r3, #32]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  83              		.loc 1 174 0
  84 000e 5A62     		str	r2, [r3, #36]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  85              		.loc 1 175 0
  86 0010 5C62     		str	r4, [r3, #36]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  87              		.loc 1 177 0
  88 0012 1A61     		str	r2, [r3, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  89              		.loc 1 178 0
  90 0014 1C61     		str	r4, [r3, #16]
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  91              		.loc 1 180 0
  92 0016 5A61     		str	r2, [r3, #20]
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  93              		.loc 1 181 0
  94 0018 5C61     		str	r4, [r3, #20]
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  95              		.loc 1 183 0
  96 001a 9A61     		str	r2, [r3, #24]
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  97              		.loc 1 184 0
  98 001c 9C61     		str	r4, [r3, #24]
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
  99              		.loc 1 187 0
 100 001e FFF7FEFF 		bl	HAL_MspDeInit
 101              	.LVL0:
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 102              		.loc 1 191 0
 103 0022 2046     		mov	r0, r4
 104 0024 10BD     		pop	{r4, pc}
 105              	.L6:
 106 0026 00BF     		.align	2
 107              	.L5:
 108 0028 00380240 		.word	1073887232
 109              		.cfi_endproc
 110              	.LFE142:
 112              		.section	.text.HAL_InitTick,"ax",%progbits
 113              		.align	1
 114              		.weak	HAL_InitTick
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv5-sp-d16
 120              	HAL_InitTick:
 121              	.LFB145:
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/cctFgeLM.s 			page 7


 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 122              		.loc 1 232 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL1:
 127 0000 10B5     		push	{r4, lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132 0002 0446     		mov	r4, r0
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 133              		.loc 1 234 0
 134 0004 0E4B     		ldr	r3, .L13
 135 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 136              	.LVL2:
 137 0008 4FF47A73 		mov	r3, #1000
 138 000c B3FBF0F3 		udiv	r3, r3, r0
 139 0010 0C4A     		ldr	r2, .L13+4
 140 0012 1068     		ldr	r0, [r2]
 141 0014 B0FBF3F0 		udiv	r0, r0, r3
 142 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 143              	.LVL3:
 144 001c 68B9     		cbnz	r0, .L9
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 145              		.loc 1 240 0
 146 001e 0F2C     		cmp	r4, #15
 147 0020 01D9     		bls	.L12
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
ARM GAS  /tmp/cctFgeLM.s 			page 8


 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 148              		.loc 1 247 0
 149 0022 0120     		movs	r0, #1
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 150              		.loc 1 252 0
 151 0024 10BD     		pop	{r4, pc}
 152              	.LVL4:
 153              	.L12:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 154              		.loc 1 242 0
 155 0026 0022     		movs	r2, #0
 156 0028 2146     		mov	r1, r4
 157 002a 4FF0FF30 		mov	r0, #-1
 158 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 159              	.LVL5:
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 160              		.loc 1 243 0
 161 0032 054B     		ldr	r3, .L13+8
 162 0034 1C60     		str	r4, [r3]
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 163              		.loc 1 251 0
 164 0036 0020     		movs	r0, #0
 165 0038 10BD     		pop	{r4, pc}
 166              	.LVL6:
 167              	.L9:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 168              		.loc 1 236 0
 169 003a 0120     		movs	r0, #1
 170 003c 10BD     		pop	{r4, pc}
 171              	.LVL7:
 172              	.L14:
 173 003e 00BF     		.align	2
 174              	.L13:
 175 0040 00000000 		.word	.LANCHOR0
 176 0044 00000000 		.word	SystemCoreClock
 177 0048 00000000 		.word	.LANCHOR1
 178              		.cfi_endproc
 179              	.LFE145:
 181              		.section	.text.HAL_Init,"ax",%progbits
 182              		.align	1
 183              		.global	HAL_Init
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-sp-d16
 189              	HAL_Init:
 190              	.LFB141:
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 191              		.loc 1 139 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctFgeLM.s 			page 9


 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 200              		.loc 1 151 0
 201 0002 0320     		movs	r0, #3
 202 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 203              	.LVL8:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 204              		.loc 1 154 0
 205 0008 0020     		movs	r0, #0
 206 000a FFF7FEFF 		bl	HAL_InitTick
 207              	.LVL9:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 208              		.loc 1 157 0
 209 000e FFF7FEFF 		bl	HAL_MspInit
 210              	.LVL10:
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 211              		.loc 1 161 0
 212 0012 0020     		movs	r0, #0
 213 0014 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE141:
 217              		.section	.text.HAL_IncTick,"ax",%progbits
 218              		.align	1
 219              		.weak	HAL_IncTick
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-sp-d16
 225              	HAL_IncTick:
 226              	.LFB146:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
ARM GAS  /tmp/cctFgeLM.s 			page 10


 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 227              		.loc 1 291 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 232              		.loc 1 292 0
 233 0000 034A     		ldr	r2, .L18
 234 0002 1168     		ldr	r1, [r2]
 235 0004 034B     		ldr	r3, .L18+4
 236 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237 0008 0B44     		add	r3, r3, r1
 238 000a 1360     		str	r3, [r2]
 239 000c 7047     		bx	lr
 240              	.L19:
 241 000e 00BF     		.align	2
 242              	.L18:
 243 0010 00000000 		.word	uwTick
 244 0014 00000000 		.word	.LANCHOR0
 245              		.cfi_endproc
 246              	.LFE146:
 248              		.section	.text.HAL_GetTick,"ax",%progbits
 249              		.align	1
 250              		.weak	HAL_GetTick
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv5-sp-d16
 256              	HAL_GetTick:
 257              	.LFB147:
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 258              		.loc 1 302 0
ARM GAS  /tmp/cctFgeLM.s 			page 11


 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 263              		.loc 1 303 0
 264 0000 014B     		ldr	r3, .L21
 265 0002 1868     		ldr	r0, [r3]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 266              		.loc 1 304 0
 267 0004 7047     		bx	lr
 268              	.L22:
 269 0006 00BF     		.align	2
 270              	.L21:
 271 0008 00000000 		.word	uwTick
 272              		.cfi_endproc
 273              	.LFE147:
 275              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 276              		.align	1
 277              		.global	HAL_GetTickPrio
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv5-sp-d16
 283              	HAL_GetTickPrio:
 284              	.LFB148:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 285              		.loc 1 311 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 290              		.loc 1 313 0
 291 0000 014B     		ldr	r3, .L24
 292 0002 1868     		ldr	r0, [r3]
 293 0004 7047     		bx	lr
 294              	.L25:
 295 0006 00BF     		.align	2
 296              	.L24:
 297 0008 00000000 		.word	.LANCHOR1
 298              		.cfi_endproc
 299              	.LFE148:
 301              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 302              		.align	1
 303              		.global	HAL_SetTickFreq
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cctFgeLM.s 			page 12


 309              	HAL_SetTickFreq:
 310              	.LFB149:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 311              		.loc 1 320 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              	.LVL11:
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI3:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
 321              	.LVL12:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 322              		.loc 1 324 0
 323 0002 064B     		ldr	r3, .L30
 324 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 325 0006 8342     		cmp	r3, r0
 326 0008 06D0     		beq	.L28
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 327              		.loc 1 326 0
 328 000a 044B     		ldr	r3, .L30
 329 000c 1870     		strb	r0, [r3]
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 330              		.loc 1 329 0
 331 000e 044B     		ldr	r3, .L30+4
 332 0010 1868     		ldr	r0, [r3]
 333              	.LVL13:
 334 0012 FFF7FEFF 		bl	HAL_InitTick
 335              	.LVL14:
 336 0016 08BD     		pop	{r3, pc}
 337              	.LVL15:
 338              	.L28:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 339              		.loc 1 321 0
 340 0018 0020     		movs	r0, #0
 341              	.LVL16:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 342              		.loc 1 333 0
 343 001a 08BD     		pop	{r3, pc}
 344              	.L31:
ARM GAS  /tmp/cctFgeLM.s 			page 13


 345              		.align	2
 346              	.L30:
 347 001c 00000000 		.word	.LANCHOR0
 348 0020 00000000 		.word	.LANCHOR1
 349              		.cfi_endproc
 350              	.LFE149:
 352              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 353              		.align	1
 354              		.global	HAL_GetTickFreq
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv5-sp-d16
 360              	HAL_GetTickFreq:
 361              	.LFB150:
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 362              		.loc 1 340 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 367              		.loc 1 342 0
 368 0000 014B     		ldr	r3, .L33
 369 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 370 0004 7047     		bx	lr
 371              	.L34:
 372 0006 00BF     		.align	2
 373              	.L33:
 374 0008 00000000 		.word	.LANCHOR0
 375              		.cfi_endproc
 376              	.LFE150:
 378              		.section	.text.HAL_Delay,"ax",%progbits
 379              		.align	1
 380              		.weak	HAL_Delay
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv5-sp-d16
 386              	HAL_Delay:
 387              	.LFB151:
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
ARM GAS  /tmp/cctFgeLM.s 			page 14


 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 388              		.loc 1 356 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              	.LVL17:
 393 0000 38B5     		push	{r3, r4, r5, lr}
 394              	.LCFI4:
 395              		.cfi_def_cfa_offset 16
 396              		.cfi_offset 3, -16
 397              		.cfi_offset 4, -12
 398              		.cfi_offset 5, -8
 399              		.cfi_offset 14, -4
 400 0002 0446     		mov	r4, r0
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 401              		.loc 1 357 0
 402 0004 FFF7FEFF 		bl	HAL_GetTick
 403              	.LVL18:
 404 0008 0546     		mov	r5, r0
 405              	.LVL19:
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 406              		.loc 1 361 0
 407 000a B4F1FF3F 		cmp	r4, #-1
 408 000e 02D0     		beq	.L37
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 409              		.loc 1 363 0
 410 0010 044B     		ldr	r3, .L39
 411 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 412 0014 1C44     		add	r4, r4, r3
 413              	.LVL20:
 414              	.L37:
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 415              		.loc 1 366 0 discriminator 1
 416 0016 FFF7FEFF 		bl	HAL_GetTick
 417              	.LVL21:
 418 001a 401B     		subs	r0, r0, r5
 419 001c 8442     		cmp	r4, r0
 420 001e FAD8     		bhi	.L37
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 421              		.loc 1 369 0
 422 0020 38BD     		pop	{r3, r4, r5, pc}
 423              	.LVL22:
 424              	.L40:
 425 0022 00BF     		.align	2
 426              	.L39:
ARM GAS  /tmp/cctFgeLM.s 			page 15


 427 0024 00000000 		.word	.LANCHOR0
 428              		.cfi_endproc
 429              	.LFE151:
 431              		.section	.text.HAL_SuspendTick,"ax",%progbits
 432              		.align	1
 433              		.weak	HAL_SuspendTick
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv5-sp-d16
 439              	HAL_SuspendTick:
 440              	.LFB152:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 441              		.loc 1 382 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 446              		.loc 1 384 0
 447 0000 024A     		ldr	r2, .L42
 448 0002 1368     		ldr	r3, [r2]
 449 0004 23F00203 		bic	r3, r3, #2
 450 0008 1360     		str	r3, [r2]
 451 000a 7047     		bx	lr
 452              	.L43:
 453              		.align	2
 454              	.L42:
 455 000c 10E000E0 		.word	-536813552
 456              		.cfi_endproc
 457              	.LFE152:
 459              		.section	.text.HAL_ResumeTick,"ax",%progbits
 460              		.align	1
 461              		.weak	HAL_ResumeTick
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv5-sp-d16
 467              	HAL_ResumeTick:
 468              	.LFB153:
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
ARM GAS  /tmp/cctFgeLM.s 			page 16


 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 469              		.loc 1 398 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 474              		.loc 1 400 0
 475 0000 024A     		ldr	r2, .L45
 476 0002 1368     		ldr	r3, [r2]
 477 0004 43F00203 		orr	r3, r3, #2
 478 0008 1360     		str	r3, [r2]
 479 000a 7047     		bx	lr
 480              	.L46:
 481              		.align	2
 482              	.L45:
 483 000c 10E000E0 		.word	-536813552
 484              		.cfi_endproc
 485              	.LFE153:
 487              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 488              		.align	1
 489              		.global	HAL_GetHalVersion
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv5-sp-d16
 495              	HAL_GetHalVersion:
 496              	.LFB154:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 497              		.loc 1 408 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 502              		.loc 1 410 0
 503 0000 0048     		ldr	r0, .L48
 504 0002 7047     		bx	lr
 505              	.L49:
ARM GAS  /tmp/cctFgeLM.s 			page 17


 506              		.align	2
 507              	.L48:
 508 0004 00070201 		.word	16910080
 509              		.cfi_endproc
 510              	.LFE154:
 512              		.section	.text.HAL_GetREVID,"ax",%progbits
 513              		.align	1
 514              		.global	HAL_GetREVID
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu fpv5-sp-d16
 520              	HAL_GetREVID:
 521              	.LFB155:
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 522              		.loc 1 417 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 527              		.loc 1 418 0
 528 0000 014B     		ldr	r3, .L51
 529 0002 1868     		ldr	r0, [r3]
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 530              		.loc 1 419 0
 531 0004 000C     		lsrs	r0, r0, #16
 532 0006 7047     		bx	lr
 533              	.L52:
 534              		.align	2
 535              	.L51:
 536 0008 002004E0 		.word	-536600576
 537              		.cfi_endproc
 538              	.LFE155:
 540              		.section	.text.HAL_GetDEVID,"ax",%progbits
 541              		.align	1
 542              		.global	HAL_GetDEVID
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu fpv5-sp-d16
 548              	HAL_GetDEVID:
 549              	.LFB156:
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 550              		.loc 1 426 0
ARM GAS  /tmp/cctFgeLM.s 			page 18


 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 555              		.loc 1 427 0
 556 0000 024B     		ldr	r3, .L54
 557 0002 1868     		ldr	r0, [r3]
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 558              		.loc 1 428 0
 559 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 560 0008 7047     		bx	lr
 561              	.L55:
 562 000a 00BF     		.align	2
 563              	.L54:
 564 000c 002004E0 		.word	-536600576
 565              		.cfi_endproc
 566              	.LFE156:
 568              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 569              		.align	1
 570              		.global	HAL_GetUIDw0
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv5-sp-d16
 576              	HAL_GetUIDw0:
 577              	.LFB157:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 578              		.loc 1 435 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 583              		.loc 1 437 0
 584 0000 014B     		ldr	r3, .L57
 585 0002 1868     		ldr	r0, [r3]
 586 0004 7047     		bx	lr
 587              	.L58:
 588 0006 00BF     		.align	2
 589              	.L57:
 590 0008 20F4F01F 		.word	535884832
 591              		.cfi_endproc
 592              	.LFE157:
 594              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 595              		.align	1
 596              		.global	HAL_GetUIDw1
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
ARM GAS  /tmp/cctFgeLM.s 			page 19


 600              		.fpu fpv5-sp-d16
 602              	HAL_GetUIDw1:
 603              	.LFB158:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 604              		.loc 1 444 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 609              		.loc 1 446 0
 610 0000 014B     		ldr	r3, .L60
 611 0002 1868     		ldr	r0, [r3]
 612 0004 7047     		bx	lr
 613              	.L61:
 614 0006 00BF     		.align	2
 615              	.L60:
 616 0008 24F4F01F 		.word	535884836
 617              		.cfi_endproc
 618              	.LFE158:
 620              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 621              		.align	1
 622              		.global	HAL_GetUIDw2
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv5-sp-d16
 628              	HAL_GetUIDw2:
 629              	.LFB159:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 630              		.loc 1 453 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 635              		.loc 1 455 0
 636 0000 014B     		ldr	r3, .L63
 637 0002 1868     		ldr	r0, [r3]
 638 0004 7047     		bx	lr
 639              	.L64:
 640 0006 00BF     		.align	2
 641              	.L63:
ARM GAS  /tmp/cctFgeLM.s 			page 20


 642 0008 28F4F01F 		.word	535884840
 643              		.cfi_endproc
 644              	.LFE159:
 646              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 647              		.align	1
 648              		.global	HAL_DBGMCU_EnableDBGSleepMode
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu fpv5-sp-d16
 654              	HAL_DBGMCU_EnableDBGSleepMode:
 655              	.LFB160:
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 656              		.loc 1 462 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 661              		.loc 1 463 0
 662 0000 024A     		ldr	r2, .L66
 663 0002 5368     		ldr	r3, [r2, #4]
 664 0004 43F00103 		orr	r3, r3, #1
 665 0008 5360     		str	r3, [r2, #4]
 666 000a 7047     		bx	lr
 667              	.L67:
 668              		.align	2
 669              	.L66:
 670 000c 002004E0 		.word	-536600576
 671              		.cfi_endproc
 672              	.LFE160:
 674              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 675              		.align	1
 676              		.global	HAL_DBGMCU_DisableDBGSleepMode
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 680              		.fpu fpv5-sp-d16
 682              	HAL_DBGMCU_DisableDBGSleepMode:
 683              	.LFB161:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 684              		.loc 1 471 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctFgeLM.s 			page 21


 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 689              		.loc 1 472 0
 690 0000 024A     		ldr	r2, .L69
 691 0002 5368     		ldr	r3, [r2, #4]
 692 0004 23F00103 		bic	r3, r3, #1
 693 0008 5360     		str	r3, [r2, #4]
 694 000a 7047     		bx	lr
 695              	.L70:
 696              		.align	2
 697              	.L69:
 698 000c 002004E0 		.word	-536600576
 699              		.cfi_endproc
 700              	.LFE161:
 702              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 703              		.align	1
 704              		.global	HAL_DBGMCU_EnableDBGStopMode
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv5-sp-d16
 710              	HAL_DBGMCU_EnableDBGStopMode:
 711              	.LFB162:
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 712              		.loc 1 480 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 717              		.loc 1 481 0
 718 0000 024A     		ldr	r2, .L72
 719 0002 5368     		ldr	r3, [r2, #4]
 720 0004 43F00203 		orr	r3, r3, #2
 721 0008 5360     		str	r3, [r2, #4]
 722 000a 7047     		bx	lr
 723              	.L73:
 724              		.align	2
 725              	.L72:
 726 000c 002004E0 		.word	-536600576
 727              		.cfi_endproc
 728              	.LFE162:
 730              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 731              		.align	1
 732              		.global	HAL_DBGMCU_DisableDBGStopMode
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cctFgeLM.s 			page 22


 738              	HAL_DBGMCU_DisableDBGStopMode:
 739              	.LFB163:
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 740              		.loc 1 489 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 745              		.loc 1 490 0
 746 0000 024A     		ldr	r2, .L75
 747 0002 5368     		ldr	r3, [r2, #4]
 748 0004 23F00203 		bic	r3, r3, #2
 749 0008 5360     		str	r3, [r2, #4]
 750 000a 7047     		bx	lr
 751              	.L76:
 752              		.align	2
 753              	.L75:
 754 000c 002004E0 		.word	-536600576
 755              		.cfi_endproc
 756              	.LFE163:
 758              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 759              		.align	1
 760              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv5-sp-d16
 766              	HAL_DBGMCU_EnableDBGStandbyMode:
 767              	.LFB164:
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 768              		.loc 1 498 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 773              		.loc 1 499 0
 774 0000 024A     		ldr	r2, .L78
 775 0002 5368     		ldr	r3, [r2, #4]
 776 0004 43F00403 		orr	r3, r3, #4
 777 0008 5360     		str	r3, [r2, #4]
 778 000a 7047     		bx	lr
ARM GAS  /tmp/cctFgeLM.s 			page 23


 779              	.L79:
 780              		.align	2
 781              	.L78:
 782 000c 002004E0 		.word	-536600576
 783              		.cfi_endproc
 784              	.LFE164:
 786              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 787              		.align	1
 788              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv5-sp-d16
 794              	HAL_DBGMCU_DisableDBGStandbyMode:
 795              	.LFB165:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 796              		.loc 1 507 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 801              		.loc 1 508 0
 802 0000 024A     		ldr	r2, .L81
 803 0002 5368     		ldr	r3, [r2, #4]
 804 0004 23F00403 		bic	r3, r3, #4
 805 0008 5360     		str	r3, [r2, #4]
 806 000a 7047     		bx	lr
 807              	.L82:
 808              		.align	2
 809              	.L81:
 810 000c 002004E0 		.word	-536600576
 811              		.cfi_endproc
 812              	.LFE165:
 814              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 815              		.align	1
 816              		.global	HAL_EnableCompensationCell
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv5-sp-d16
 822              	HAL_EnableCompensationCell:
 823              	.LFB166:
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
ARM GAS  /tmp/cctFgeLM.s 			page 24


 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 824              		.loc 1 518 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 829              		.loc 1 519 0
 830 0000 024A     		ldr	r2, .L84
 831 0002 136A     		ldr	r3, [r2, #32]
 832 0004 43F00103 		orr	r3, r3, #1
 833 0008 1362     		str	r3, [r2, #32]
 834 000a 7047     		bx	lr
 835              	.L85:
 836              		.align	2
 837              	.L84:
 838 000c 00380140 		.word	1073821696
 839              		.cfi_endproc
 840              	.LFE166:
 842              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 843              		.align	1
 844              		.global	HAL_DisableCompensationCell
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv5-sp-d16
 850              	HAL_DisableCompensationCell:
 851              	.LFB167:
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 852              		.loc 1 529 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 857              		.loc 1 530 0
 858 0000 024A     		ldr	r2, .L87
 859 0002 136A     		ldr	r3, [r2, #32]
 860 0004 23F00103 		bic	r3, r3, #1
 861 0008 1362     		str	r3, [r2, #32]
 862 000a 7047     		bx	lr
 863              	.L88:
 864              		.align	2
 865              	.L87:
 866 000c 00380140 		.word	1073821696
 867              		.cfi_endproc
ARM GAS  /tmp/cctFgeLM.s 			page 25


 868              	.LFE167:
 870              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 871              		.align	1
 872              		.global	HAL_EnableFMCMemorySwapping
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv5-sp-d16
 878              	HAL_EnableFMCMemorySwapping:
 879              	.LFB168:
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 880              		.loc 1 542 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 885              		.loc 1 543 0
 886 0000 024A     		ldr	r2, .L90
 887 0002 1368     		ldr	r3, [r2]
 888 0004 43F48063 		orr	r3, r3, #1024
 889 0008 1360     		str	r3, [r2]
 890 000a 7047     		bx	lr
 891              	.L91:
 892              		.align	2
 893              	.L90:
 894 000c 00380140 		.word	1073821696
 895              		.cfi_endproc
 896              	.LFE168:
 898              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 899              		.align	1
 900              		.global	HAL_DisableFMCMemorySwapping
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 904              		.fpu fpv5-sp-d16
 906              	HAL_DisableFMCMemorySwapping:
 907              	.LFB169:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
ARM GAS  /tmp/cctFgeLM.s 			page 26


 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 908              		.loc 1 555 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 913              		.loc 1 557 0
 914 0000 024A     		ldr	r2, .L93
 915 0002 1368     		ldr	r3, [r2]
 916 0004 23F44063 		bic	r3, r3, #3072
 917 0008 1360     		str	r3, [r2]
 918 000a 7047     		bx	lr
 919              	.L94:
 920              		.align	2
 921              	.L93:
 922 000c 00380140 		.word	1073821696
 923              		.cfi_endproc
 924              	.LFE169:
 926              		.global	uwTickFreq
 927              		.global	uwTickPrio
 928              		.comm	uwTick,4,4
 929              		.section	.data.uwTickFreq,"aw",%progbits
 930              		.set	.LANCHOR0,. + 0
 933              	uwTickFreq:
 934 0000 01       		.byte	1
 935              		.section	.data.uwTickPrio,"aw",%progbits
 936              		.align	2
 937              		.set	.LANCHOR1,. + 0
 940              	uwTickPrio:
 941 0000 10000000 		.word	16
 942              		.text
 943              	.Letext0:
 944              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 945              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 946              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 947              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 948              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 949              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 950              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 951              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/cctFgeLM.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
     /tmp/cctFgeLM.s:18     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cctFgeLM.s:25     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cctFgeLM.s:38     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cctFgeLM.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cctFgeLM.s:57     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cctFgeLM.s:64     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cctFgeLM.s:108    .text.HAL_DeInit:0000000000000028 $d
     /tmp/cctFgeLM.s:113    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cctFgeLM.s:120    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cctFgeLM.s:175    .text.HAL_InitTick:0000000000000040 $d
     /tmp/cctFgeLM.s:182    .text.HAL_Init:0000000000000000 $t
     /tmp/cctFgeLM.s:189    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cctFgeLM.s:218    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cctFgeLM.s:225    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cctFgeLM.s:243    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/cctFgeLM.s:249    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cctFgeLM.s:256    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cctFgeLM.s:271    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cctFgeLM.s:276    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/cctFgeLM.s:283    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/cctFgeLM.s:297    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/cctFgeLM.s:302    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/cctFgeLM.s:309    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/cctFgeLM.s:347    .text.HAL_SetTickFreq:000000000000001c $d
     /tmp/cctFgeLM.s:353    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/cctFgeLM.s:360    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/cctFgeLM.s:374    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/cctFgeLM.s:379    .text.HAL_Delay:0000000000000000 $t
     /tmp/cctFgeLM.s:386    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cctFgeLM.s:427    .text.HAL_Delay:0000000000000024 $d
     /tmp/cctFgeLM.s:432    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cctFgeLM.s:439    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cctFgeLM.s:455    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cctFgeLM.s:460    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cctFgeLM.s:467    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cctFgeLM.s:483    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cctFgeLM.s:488    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cctFgeLM.s:495    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cctFgeLM.s:508    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cctFgeLM.s:513    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cctFgeLM.s:520    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cctFgeLM.s:536    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cctFgeLM.s:541    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cctFgeLM.s:548    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cctFgeLM.s:564    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cctFgeLM.s:569    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cctFgeLM.s:576    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cctFgeLM.s:590    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cctFgeLM.s:595    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cctFgeLM.s:602    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cctFgeLM.s:616    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cctFgeLM.s:621    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cctFgeLM.s:628    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/cctFgeLM.s:642    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/cctFgeLM.s 			page 28


     /tmp/cctFgeLM.s:647    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cctFgeLM.s:654    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cctFgeLM.s:670    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/cctFgeLM.s:675    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cctFgeLM.s:682    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cctFgeLM.s:698    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cctFgeLM.s:703    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cctFgeLM.s:710    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cctFgeLM.s:726    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cctFgeLM.s:731    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cctFgeLM.s:738    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cctFgeLM.s:754    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cctFgeLM.s:759    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cctFgeLM.s:766    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cctFgeLM.s:782    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cctFgeLM.s:787    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cctFgeLM.s:794    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cctFgeLM.s:810    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/cctFgeLM.s:815    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/cctFgeLM.s:822    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/cctFgeLM.s:838    .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/cctFgeLM.s:843    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/cctFgeLM.s:850    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/cctFgeLM.s:866    .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/cctFgeLM.s:871    .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/cctFgeLM.s:878    .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/cctFgeLM.s:894    .text.HAL_EnableFMCMemorySwapping:000000000000000c $d
     /tmp/cctFgeLM.s:899    .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/cctFgeLM.s:906    .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/cctFgeLM.s:922    .text.HAL_DisableFMCMemorySwapping:000000000000000c $d
     /tmp/cctFgeLM.s:933    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/cctFgeLM.s:940    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/cctFgeLM.s:936    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
