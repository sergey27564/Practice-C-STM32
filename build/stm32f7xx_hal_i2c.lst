ARM GAS  /tmp/cc1k1gAU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	I2C_Flush_TXDR:
  25              	.LFB203:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @file    stm32f7xx_hal_i2c.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @verbatim
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the @ref HAL_I2C_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) I2C pins configuration
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
ARM GAS  /tmp/cc1k1gAU.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   the DMA Tx or Rx stream
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the @ref HAL_I2C_Init(), configures also the low le
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized @ref HAL_I2C_MspInit(&hi2c) API.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function @ref HAL_I2C_IsDevic
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Tran
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Recei
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Transm
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Receive
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =====================================
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using @ref HAL_I2C_
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using @ref HAL_I2C
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ===================================
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_R
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Tr
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Rec
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==========================================================
ARM GAS  /tmp/cc1k1gAU.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           when a direction change during transfer
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             several times (like @ref HAL_I2C_Master_Seq_Transmit_IT() then @ref HAL
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             or @ref HAL_I2C_Master_Seq_Transmit_DMA() then @ref HAL_I2C_Master_Seq_
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using @ref
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Transmit_DMA()
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_MasterTxCpltCallback() is e
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using @ref 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Receive_DMA()
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_MasterRxCpltCallback() is exec
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using @ref HAL_I2C_Mas
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using @ref HAL_I2C_EnableListen
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) When address slave I2C match, @ref HAL_I2C_AddrCallback() is executed and user can
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At Listen mode end @ref HAL_I2C_ListenCpltCallback() is executed and user can
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ListenCpltCallback()
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using @ref 
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Transmit_DMA()
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_SlaveTxCpltCallback() is ex
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using @ref H
ARM GAS  /tmp/cc1k1gAU.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Receive_DMA()
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_SlaveRxCpltCallback() is execu
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user ca
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =======================================
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_IT()
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_IT()
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO operation ***
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==============================
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Transmit_DMA()
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Receive_DMA()
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Transmit_DMA()
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Receive_DMA()
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_DMA()
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
ARM GAS  /tmp/cc1k1gAU.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_DMA()
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      ==================================
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE: Enable the I2C peripheral
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE: Disable the I2C peripheral
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** Callback registration ***
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      =============================================
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use Functions @ref HAL_I2C_RegisterCallback() or @ref HAL_I2C_RegisterAddrCallback()
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      to register an interrupt callback.
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Function @ref HAL_I2C_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and a pointer to the user callback function.
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_RegisterAdd
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use function @ref HAL_I2C_UnRegisterCallback to reset a callback to the default
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      weak function.
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      @ref HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and the Callback ID.
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function allows to reset following callbacks:
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
ARM GAS  /tmp/cc1k1gAU.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_UnRegisterAddrCallba
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      By default, after the @ref HAL_I2C_Init() and when the state is @ref HAL_I2C_STATE_RESET
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      examples @ref HAL_I2C_MasterTxCpltCallback(), @ref HAL_I2C_MasterRxCpltCallback().
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      reset to the legacy weak functions in the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit() only when
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit()
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Callbacks can be registered/unregistered in @ref HAL_I2C_STATE_READY state only.
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      in @ref HAL_I2C_STATE_READY or @ref HAL_I2C_STATE_RESET state,
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      using @ref HAL_I2C_RegisterCallback() before calling @ref HAL_I2C_DeInit()
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      or @ref HAL_I2C_Init() function.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @endverbatim
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @attention
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * All rights reserved.</center></h2>
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * the "License"; You may not use this file except in compliance with the
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * License. You may obtain a copy of the License at:
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #include "stm32f7xx_hal.h"
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup STM32F7xx_HAL_Driver
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C I2C
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief I2C HAL module driver
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1k1gAU.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (0x00000001U)
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (0x00000002U)
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (0x00000004U)
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (0x00000011U)
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (0x00000012U)
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (0x00000012U)
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1k1gAU.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to flush TXDR register */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to Convert Specific options */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
ARM GAS  /tmp/cc1k1gAU.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           the selected configuration:
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Clock Timing
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 1
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Dual Addressing mode
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2 Mask
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) General call mode
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Nostretch mode
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1k1gAU.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
ARM GAS  /tmp/cc1k1gAU.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
ARM GAS  /tmp/cc1k1gAU.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
ARM GAS  /tmp/cc1k1gAU.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
ARM GAS  /tmp/cc1k1gAU.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
ARM GAS  /tmp/cc1k1gAU.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
ARM GAS  /tmp/cc1k1gAU.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/cc1k1gAU.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1k1gAU.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief   Data transfers functions
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                       ##### IO operation functions #####
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transfers.
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) There are two modes of transfer:
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             after finishing transfer.
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             using DMA mode.
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Blocking mode functions are :
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
ARM GAS  /tmp/cc1k1gAU.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/cc1k1gAU.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
ARM GAS  /tmp/cc1k1gAU.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/cc1k1gAU.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1k1gAU.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag */
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/cc1k1gAU.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
ARM GAS  /tmp/cc1k1gAU.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Store Last receive data if any */
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Read data from RXDR */
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Increment Buffer pointer */
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferCount--;
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/cc1k1gAU.s 			page 29


1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1k1gAU.s 			page 30


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1k1gAU.s 			page 31


1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
ARM GAS  /tmp/cc1k1gAU.s 			page 32


1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cc1k1gAU.s 			page 33


1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
ARM GAS  /tmp/cc1k1gAU.s 			page 34


1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
ARM GAS  /tmp/cc1k1gAU.s 			page 35


1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
ARM GAS  /tmp/cc1k1gAU.s 			page 36


1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
ARM GAS  /tmp/cc1k1gAU.s 			page 37


2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
ARM GAS  /tmp/cc1k1gAU.s 			page 38


2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1k1gAU.s 			page 39


2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
ARM GAS  /tmp/cc1k1gAU.s 			page 40


2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cc1k1gAU.s 			page 41


2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
ARM GAS  /tmp/cc1k1gAU.s 			page 42


2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
ARM GAS  /tmp/cc1k1gAU.s 			page 43


2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
ARM GAS  /tmp/cc1k1gAU.s 			page 44


2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
ARM GAS  /tmp/cc1k1gAU.s 			page 45


2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
ARM GAS  /tmp/cc1k1gAU.s 			page 46


2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
ARM GAS  /tmp/cc1k1gAU.s 			page 47


2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 48


2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cc1k1gAU.s 			page 49


2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cc1k1gAU.s 			page 50


2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 51


2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
ARM GAS  /tmp/cc1k1gAU.s 			page 52


2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
ARM GAS  /tmp/cc1k1gAU.s 			page 53


2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_RE
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cc1k1gAU.s 			page 54


2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Trials Number of trials
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp1;
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp2;
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Generate Start */
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
ARM GAS  /tmp/cc1k1gAU.s 			page 55


3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C state */
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C error code */
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Process Unlocked */
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             return HAL_ERROR;
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Device is ready */
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate Stop */
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
ARM GAS  /tmp/cc1k1gAU.s 			page 56


3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Trials */
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Trials++;
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (I2C_Trials < Trials);
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C state */
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C error code */
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cc1k1gAU.s 			page 57


3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
ARM GAS  /tmp/cc1k1gAU.s 			page 58


3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1k1gAU.s 			page 59


3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
ARM GAS  /tmp/cc1k1gAU.s 			page 60


3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
ARM GAS  /tmp/cc1k1gAU.s 			page 61


3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
ARM GAS  /tmp/cc1k1gAU.s 			page 62


3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 63


3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount < MAX_NBYTE_SIZE)
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
ARM GAS  /tmp/cc1k1gAU.s 			page 64


3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
ARM GAS  /tmp/cc1k1gAU.s 			page 65


3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
ARM GAS  /tmp/cc1k1gAU.s 			page 66


3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  /tmp/cc1k1gAU.s 			page 67


3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 68


3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
ARM GAS  /tmp/cc1k1gAU.s 			page 69


3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cc1k1gAU.s 			page 70


3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1k1gAU.s 			page 71


3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
ARM GAS  /tmp/cc1k1gAU.s 			page 72


4023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
4028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
4057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
ARM GAS  /tmp/cc1k1gAU.s 			page 73


4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
4088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
ARM GAS  /tmp/cc1k1gAU.s 			page 74


4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1k1gAU.s 			page 75


4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmp;
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
4227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1k1gAU.s 			page 76


4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
4271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wrong usage of abort function */
4278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  * @{
4289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  */
4290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cc1k1gAU.s 			page 77


4308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
4321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
4326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear BERR flag */
4328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ER
4333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear OVR flag */
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ARLO flag */
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
4351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1k1gAU.s 			page 78


4365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
4408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 79


4422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(TransferDirection);
4435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Listen Complete callback.
4444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
4465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
ARM GAS  /tmp/cc1k1gAU.s 			page 80


4479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C error callback.
4492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C abort callback.
4508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
4528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  *
4529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
4530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
4534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     and the data flow.
ARM GAS  /tmp/cc1k1gAU.s 			page 81


4536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
4538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL state
4546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
4550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->State;
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         the configuration information for I2C module
4557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL mode
4558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
4562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** * @brief  Return the I2C error code.
4566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** * @retval I2C Error Code
4569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** */
4570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
4571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
4573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
ARM GAS  /tmp/cc1k1gAU.s 			page 82


4593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
4622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR */
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I
4642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
ARM GAS  /tmp/cc1k1gAU.s 			page 83


4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, hi2c->XferOptions, I2C_NO_S
4658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
4662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cc1k1gAU.s 			page 84


4707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
4726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
4733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
4735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
4743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
4744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0*/
4745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
4746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* Sam
4749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Listen complete process */
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
4752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
4754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Flush TX register */
4759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
4760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
ARM GAS  /tmp/cc1k1gAU.s 			page 85


4764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear NACK Flag */
4775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
4781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
4784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Remove RXNE flag on temporary variable as read done */
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpITFlags &= ~I2C_FLAG_RXNE;
4793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
4805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
4806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
4809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
4814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
4818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
4820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
ARM GAS  /tmp/cc1k1gAU.s 			page 86


4821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
4835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
4848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
4851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
4862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
4872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
4877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1k1gAU.s 			page 87


4878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
4886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC interrupt */
4895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
4896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
4898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Recover Slave address */
4900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
4903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
4907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
4914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
4918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
4923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
4928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
ARM GAS  /tmp/cc1k1gAU.s 			page 88


4935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_I
4954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
4983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 89


4992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
4997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
5004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
5012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
5026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
5038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (treatdmanack == 1U)
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* S
5047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Listen complete process */
ARM GAS  /tmp/cc1k1gAU.s 			page 90


5049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Flush TX register */
5057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
5062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
5064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
5073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C
5092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
5096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
ARM GAS  /tmp/cc1k1gAU.s 			page 91


5106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
5124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cc1k1gAU.s 			page 92


5163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
5177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TC flag is set */
5209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
ARM GAS  /tmp/cc1k1gAU.s 			page 93


5220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
5226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd1code;
5228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd2code;
5229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(ITFlags);
5232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
5245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Reset Address Event counter */
5251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear ADDR flag */
5254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
5257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call Slave Addr callback */
5260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
5275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 94


5277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Slave Addr callback */
5278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call Slave Addr callback */
5295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Else clear address flag only */
5303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
5306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 95


5334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
5368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
ARM GAS  /tmp/cc1k1gAU.s 			page 96


5391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
5430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
5440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET)
5443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
5445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set acknowledge error code */
ARM GAS  /tmp/cc1k1gAU.s 			page 97


5448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
5452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
5455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_RX_IT);
5456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
5458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
5459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
5462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
5467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 98


5505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
5531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
5542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all interrupts */
5555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
5556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address Acknowledge */
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
5559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
ARM GAS  /tmp/cc1k1gAU.s 			page 99


5562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
5564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmatx);
5572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmarx);
5579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
5588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
5590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
5591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
5606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
5609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
5617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
ARM GAS  /tmp/cc1k1gAU.s 			page 100


5619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
5623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Listen complete process */
5625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
5626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Tranfer */
5631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
5642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
5644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cc1k1gAU.s 			page 101


5676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
5679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
5689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
5694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all Interrupts*/
5712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear NACK Flag */
5715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
5723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
5725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
5730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
5732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
ARM GAS  /tmp/cc1k1gAU.s 			page 102


5733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
5735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
5742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Set new error code */
5744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
5745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
5747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
5748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
5749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
5752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
5755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
5758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts */
5762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
5765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This change will be do later */
5766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
5767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
5769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
5770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
5776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
5777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
5785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA TX */
ARM GAS  /tmp/cc1k1gAU.s 			page 103


5790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
5791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
5793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
5794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
5798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
5799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
5807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA RX */
5812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
5813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
5815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
5816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_ABORT)
5820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
5829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
5831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
5841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
5843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 104


5847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
5849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
5853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  27              		.loc 1 5853 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
5854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
5855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
5856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  33              		.loc 1 5856 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 9A69     		ldr	r2, [r3, #24]
  36 0004 12F0020F 		tst	r2, #2
  37 0008 01D0     		beq	.L2
5857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  38              		.loc 1 5858 0
  39 000a 0022     		movs	r2, #0
  40 000c 9A62     		str	r2, [r3, #40]
  41              	.L2:
5859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register if not empty */
5862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  42              		.loc 1 5862 0
  43 000e 0368     		ldr	r3, [r0]
  44 0010 9A69     		ldr	r2, [r3, #24]
  45 0012 12F0010F 		tst	r2, #1
  46 0016 03D1     		bne	.L1
5863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  47              		.loc 1 5864 0
  48 0018 9A69     		ldr	r2, [r3, #24]
  49 001a 42F00102 		orr	r2, r2, #1
  50 001e 9A61     		str	r2, [r3, #24]
  51              	.L1:
  52 0020 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE203:
  56              		.section	.text.I2C_TransferConfig,"ax",%progbits
  57              		.align	1
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv5-sp-d16
  63              	I2C_TransferConfig:
  64              	.LFB215:
5865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 105


5868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
5870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
5878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
5881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
5882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
5884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
5885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
5887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
5890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
5891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
5893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
5894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
5896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
5900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
5903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, h
5904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
5907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
5911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
5912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
5918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
5922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
ARM GAS  /tmp/cc1k1gAU.s 			page 106


5925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Last Byte is Transmitted */
5932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
5933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
5938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
5939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
5940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
5945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
5949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
5953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
5956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
5957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
5959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
5960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
5962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
5965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
5966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
5969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
5971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
5975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
5978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, h
5979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
ARM GAS  /tmp/cc1k1gAU.s 			page 107


5982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
5986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
5987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
5993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
5994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
5997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
5999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U) && \
6002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
6005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle
6021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
6026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
6031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
ARM GAS  /tmp/cc1k1gAU.s 			page 108


6039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if a FIFO error is detected, if true normal use case, so no specific action to perform *
6045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (!((HAL_DMA_GetError(hdma) == HAL_DMA_ERROR_FE)) && (treatdmaerror != 0U))
6046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Acknowledge */
6048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
6049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
6058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle.
6059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
6067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
6068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if come from abort from user */
6070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
6071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
6077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
6078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
6079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
6086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
6087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
6088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
6094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/cc1k1gAU.s 			page 109


6096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
6098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
6126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cc1k1gAU.s 			page 110


6153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cc1k1gAU.s 			page 111


6210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a STOPF is detected */
6214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Store Last receive data if any */
6218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return HAL_OK */
6221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
6223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
6225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
6227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
6260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
ARM GAS  /tmp/cc1k1gAU.s 			page 112


6267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
6271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check for the Timeout */
6275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
6284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
6287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
6288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACKF Flag */
6292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
6295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
6298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
6299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
6301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
6302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
6306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
6308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
6311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
6317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
6319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
6321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
6322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
ARM GAS  /tmp/cc1k1gAU.s 			page 113


6324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
6325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
6326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
6327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
6329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
6330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
6331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
6332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
6335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  65              		.loc 1 6335 0
  66              		.cfi_startproc
  67              		@ args = 4, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.LVL1:
  71 0000 70B4     		push	{r4, r5, r6}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 12
  74              		.cfi_offset 4, -12
  75              		.cfi_offset 5, -8
  76              		.cfi_offset 6, -4
  77 0002 039D     		ldr	r5, [sp, #12]
6336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
6337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
6338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
6339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
6340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* update CR2 register */
6342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEN
  78              		.loc 1 6342 0
  79 0004 0668     		ldr	r6, [r0]
  80 0006 7068     		ldr	r0, [r6, #4]
  81              	.LVL2:
  82 0008 6C0D     		lsrs	r4, r5, #21
  83 000a 04F48064 		and	r4, r4, #1024
  84 000e 44F07F74 		orr	r4, r4, #66846720
  85 0012 44F45834 		orr	r4, r4, #221184
  86 0016 44F47F74 		orr	r4, r4, #1020
  87 001a 44F00304 		orr	r4, r4, #3
  88 001e 20EA0400 		bic	r0, r0, r4
  89 0022 C1F30901 		ubfx	r1, r1, #0, #10
  90              	.LVL3:
  91 0026 41EA0241 		orr	r1, r1, r2, lsl #16
  92 002a 1943     		orrs	r1, r1, r3
  93 002c 2943     		orrs	r1, r1, r5
  94 002e 0843     		orrs	r0, r0, r1
  95 0030 7060     		str	r0, [r6, #4]
6343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_
6344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  96              		.loc 1 6344 0
  97 0032 70BC     		pop	{r4, r5, r6}
  98              	.LCFI1:
  99              		.cfi_restore 6
 100              		.cfi_restore 5
ARM GAS  /tmp/cc1k1gAU.s 			page 114


 101              		.cfi_restore 4
 102              		.cfi_def_cfa_offset 0
 103              	.LVL4:
 104 0034 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE215:
 108              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-sp-d16
 115              	I2C_Enable_IRQ:
 116              	.LFB216:
6345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
6348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 117              		.loc 1 6354 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL5:
6355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 123              		.loc 1 6357 0
 124 0000 436B     		ldr	r3, [r0, #52]
 125 0002 1D4A     		ldr	r2, .L21
 126 0004 9342     		cmp	r3, r2
 127 0006 19D0     		beq	.L7
 128              		.loc 1 6357 0 is_stmt 0 discriminator 1
 129 0008 1C4A     		ldr	r2, .L21+4
 130 000a 9342     		cmp	r3, r2
 131 000c 16D0     		beq	.L7
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
6359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
6361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
6363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
6367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
6369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
ARM GAS  /tmp/cc1k1gAU.s 			page 115


6373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
6376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
6379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
6382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 132              		.loc 1 6386 0 is_stmt 1
 133 000e 11F0040F 		tst	r1, #4
 134 0012 2CD1     		bne	.L17
6355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 135              		.loc 1 6355 0
 136 0014 0023     		movs	r3, #0
 137              	.L13:
 138              	.LVL6:
6387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
6389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 139              		.loc 1 6392 0
 140 0016 11F0010F 		tst	r1, #1
 141 001a 01D0     		beq	.L14
6393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
6395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 142              		.loc 1 6395 0
 143 001c 43F0F203 		orr	r3, r3, #242
 144              	.LVL7:
 145              	.L14:
6396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 146              		.loc 1 6398 0
 147 0020 11F0020F 		tst	r1, #2
 148 0024 01D0     		beq	.L15
6399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
6401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 149              		.loc 1 6401 0
 150 0026 43F0F403 		orr	r3, r3, #244
 151              	.LVL8:
 152              	.L15:
6402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 153              		.loc 1 6404 0
 154 002a 01F01201 		and	r1, r1, #18
 155              	.LVL9:
ARM GAS  /tmp/cc1k1gAU.s 			page 116


 156 002e 1229     		cmp	r1, #18
 157 0030 1FD0     		beq	.L18
 158              	.L12:
6405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
6408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable interrupts only at the end */
6412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
6413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all interrupts requested done */
6414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 159              		.loc 1 6414 0
 160 0032 0268     		ldr	r2, [r0]
 161 0034 1168     		ldr	r1, [r2]
 162 0036 0B43     		orrs	r3, r3, r1
 163              	.LVL10:
 164 0038 1360     		str	r3, [r2]
 165 003a 7047     		bx	lr
 166              	.LVL11:
 167              	.L7:
6360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 168              		.loc 1 6360 0
 169 003c 11F0040F 		tst	r1, #4
 170 0040 0DD1     		bne	.L16
6355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 171              		.loc 1 6355 0
 172 0042 0023     		movs	r3, #0
 173              	.L9:
 174              	.LVL12:
6366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 175              		.loc 1 6366 0
 176 0044 01F01102 		and	r2, r1, #17
 177 0048 112A     		cmp	r2, #17
 178 004a 0AD0     		beq	.L19
 179              	.L10:
 180 004c 01F01201 		and	r1, r1, #18
 181              	.LVL13:
6372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 182              		.loc 1 6372 0
 183 0050 1229     		cmp	r1, #18
 184 0052 09D0     		beq	.L20
 185              	.L11:
6378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 186              		.loc 1 6378 0
 187 0054 1229     		cmp	r1, #18
 188 0056 ECD1     		bne	.L12
6381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 189              		.loc 1 6381 0
 190 0058 43F04003 		orr	r3, r3, #64
 191              	.LVL14:
 192 005c E9E7     		b	.L12
 193              	.LVL15:
 194              	.L16:
6363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 195              		.loc 1 6363 0
ARM GAS  /tmp/cc1k1gAU.s 			page 117


 196 005e B823     		movs	r3, #184
 197 0060 F0E7     		b	.L9
 198              	.LVL16:
 199              	.L19:
6369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 200              		.loc 1 6369 0
 201 0062 43F09003 		orr	r3, r3, #144
 202              	.LVL17:
 203 0066 F1E7     		b	.L10
 204              	.LVL18:
 205              	.L20:
6375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 206              		.loc 1 6375 0
 207 0068 43F02003 		orr	r3, r3, #32
 208              	.LVL19:
 209 006c F2E7     		b	.L11
 210              	.LVL20:
 211              	.L17:
6389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 212              		.loc 1 6389 0
 213 006e B823     		movs	r3, #184
 214 0070 D1E7     		b	.L13
 215              	.LVL21:
 216              	.L18:
6407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 217              		.loc 1 6407 0
 218 0072 43F02003 		orr	r3, r3, #32
 219              	.LVL22:
 220 0076 DCE7     		b	.L12
 221              	.L22:
 222              		.align	2
 223              	.L21:
 224 0078 00000000 		.word	I2C_Master_ISR_DMA
 225 007c 00000000 		.word	I2C_Slave_ISR_DMA
 226              		.cfi_endproc
 227              	.LFE216:
 229              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv5-sp-d16
 236              	I2C_Disable_IRQ:
 237              	.LFB217:
6415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
6419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 238              		.loc 1 6425 0
 239              		.cfi_startproc
ARM GAS  /tmp/cc1k1gAU.s 			page 118


 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              	.LVL23:
6426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 244              		.loc 1 6428 0
 245 0000 11F0010F 		tst	r1, #1
 246 0004 09D0     		beq	.L30
 247              	.LVL24:
6429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
6431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
6432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 248              		.loc 1 6433 0
 249 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 250 000a 03F02803 		and	r3, r3, #40
 251 000e 282B     		cmp	r3, #40
 252 0010 01D0     		beq	.L45
6434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 253              		.loc 1 6436 0
 254 0012 F223     		movs	r3, #242
 255 0014 02E0     		b	.L24
 256              	.L45:
6431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 257              		.loc 1 6431 0
 258 0016 4223     		movs	r3, #66
 259 0018 00E0     		b	.L24
 260              	.LVL25:
 261              	.L30:
6426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 262              		.loc 1 6426 0
 263 001a 0023     		movs	r3, #0
 264              	.LVL26:
 265              	.L24:
6437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 266              		.loc 1 6440 0
 267 001c 11F0020F 		tst	r1, #2
 268 0020 2CD0     		beq	.L34
6425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 269              		.loc 1 6425 0
 270 0022 10B4     		push	{r4}
 271              	.LCFI2:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 4, -4
6441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
6443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 274              		.loc 1 6443 0
 275 0024 43F04404 		orr	r4, r3, #68
ARM GAS  /tmp/cc1k1gAU.s 			page 119


 276              	.LVL27:
6444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 277              		.loc 1 6445 0
 278 0028 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 279 002c 02F02802 		and	r2, r2, #40
 280 0030 282A     		cmp	r2, #40
 281 0032 18D0     		beq	.L32
6446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 282              		.loc 1 6448 0
 283 0034 43F0F403 		orr	r3, r3, #244
 284              	.LVL28:
 285              	.L25:
6449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 286              		.loc 1 6452 0
 287 0038 11F0040F 		tst	r1, #4
 288 003c 01D0     		beq	.L26
6453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
6455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 289              		.loc 1 6455 0
 290 003e 43F0B803 		orr	r3, r3, #184
 291              	.LVL29:
 292              	.L26:
6456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 293              		.loc 1 6458 0
 294 0042 01F01102 		and	r2, r1, #17
 295 0046 112A     		cmp	r2, #17
 296 0048 0FD0     		beq	.L46
 297              	.L27:
 298 004a 01F01201 		and	r1, r1, #18
 299              	.LVL30:
6459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
6461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 300              		.loc 1 6464 0
 301 004e 1229     		cmp	r1, #18
 302 0050 0ED0     		beq	.L47
 303              	.L28:
6465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupts */
6467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
6468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 304              		.loc 1 6470 0
 305 0052 1229     		cmp	r1, #18
ARM GAS  /tmp/cc1k1gAU.s 			page 120


 306 0054 0FD0     		beq	.L48
 307              	.L29:
6471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable TC interrupts */
6473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
6474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable interrupts only at the end */
6477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
6478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all disable interrupts request are not done */
6479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 308              		.loc 1 6479 0
 309 0056 0168     		ldr	r1, [r0]
 310 0058 0A68     		ldr	r2, [r1]
 311 005a 22EA0303 		bic	r3, r2, r3
 312              	.LVL31:
 313 005e 0B60     		str	r3, [r1]
6480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 314              		.loc 1 6480 0
 315 0060 5DF8044B 		ldr	r4, [sp], #4
 316              	.LCFI3:
 317              		.cfi_remember_state
 318              		.cfi_restore 4
 319              		.cfi_def_cfa_offset 0
 320 0064 7047     		bx	lr
 321              	.LVL32:
 322              	.L32:
 323              	.LCFI4:
 324              		.cfi_restore_state
6443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 325              		.loc 1 6443 0
 326 0066 2346     		mov	r3, r4
 327 0068 E6E7     		b	.L25
 328              	.LVL33:
 329              	.L46:
6461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 330              		.loc 1 6461 0
 331 006a 43F09003 		orr	r3, r3, #144
 332              	.LVL34:
 333 006e ECE7     		b	.L27
 334              	.LVL35:
 335              	.L47:
6467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 336              		.loc 1 6467 0
 337 0070 43F02003 		orr	r3, r3, #32
 338              	.LVL36:
 339 0074 EDE7     		b	.L28
 340              	.L48:
6473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 341              		.loc 1 6473 0
 342 0076 43F04003 		orr	r3, r3, #64
 343              	.LVL37:
 344 007a ECE7     		b	.L29
 345              	.LVL38:
 346              	.L34:
 347              	.LCFI5:
 348              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc1k1gAU.s 			page 121


 349              		.cfi_restore 4
6452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 350              		.loc 1 6452 0
 351 007c 11F0040F 		tst	r1, #4
 352 0080 01D0     		beq	.L36
6455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 353              		.loc 1 6455 0
 354 0082 43F0B803 		orr	r3, r3, #184
 355              	.LVL39:
 356              	.L36:
6458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 357              		.loc 1 6458 0
 358 0086 01F01102 		and	r2, r1, #17
 359 008a 112A     		cmp	r2, #17
 360 008c 0BD0     		beq	.L49
 361              	.L38:
 362 008e 01F01201 		and	r1, r1, #18
 363              	.LVL40:
6464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 364              		.loc 1 6464 0
 365 0092 1229     		cmp	r1, #18
 366 0094 0AD0     		beq	.L50
 367              	.L40:
6470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 368              		.loc 1 6470 0
 369 0096 1229     		cmp	r1, #18
 370 0098 0BD0     		beq	.L51
 371              	.L42:
6479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 372              		.loc 1 6479 0
 373 009a 0168     		ldr	r1, [r0]
 374 009c 0A68     		ldr	r2, [r1]
 375 009e 22EA0303 		bic	r3, r2, r3
 376              	.LVL41:
 377 00a2 0B60     		str	r3, [r1]
 378 00a4 7047     		bx	lr
 379              	.LVL42:
 380              	.L49:
6461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 381              		.loc 1 6461 0
 382 00a6 43F09003 		orr	r3, r3, #144
 383              	.LVL43:
 384 00aa F0E7     		b	.L38
 385              	.LVL44:
 386              	.L50:
6467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 387              		.loc 1 6467 0
 388 00ac 43F02003 		orr	r3, r3, #32
 389              	.LVL45:
 390 00b0 F1E7     		b	.L40
 391              	.L51:
6473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 392              		.loc 1 6473 0
 393 00b2 43F04003 		orr	r3, r3, #64
 394              	.LVL46:
 395 00b6 F0E7     		b	.L42
 396              		.cfi_endproc
ARM GAS  /tmp/cc1k1gAU.s 			page 122


 397              	.LFE217:
 399              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 400              		.align	1
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv5-sp-d16
 406              	I2C_ConvertOtherXferOptions:
 407              	.LFB218:
6481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functionnal XferOptions.
6484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
6488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 408              		.loc 1 6488 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LVL47:
6489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
6490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
6491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
6492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 414              		.loc 1 6492 0
 415 0000 C36A     		ldr	r3, [r0, #44]
 416 0002 AA2B     		cmp	r3, #170
 417 0004 04D0     		beq	.L55
6493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
6495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
6497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
6498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
6500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 418              		.loc 1 6500 0
 419 0006 C36A     		ldr	r3, [r0, #44]
 420 0008 B3F52A4F 		cmp	r3, #43520
 421 000c 03D0     		beq	.L56
 422              	.L52:
 423 000e 7047     		bx	lr
 424              	.L55:
6494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 425              		.loc 1 6494 0
 426 0010 0023     		movs	r3, #0
 427 0012 C362     		str	r3, [r0, #44]
 428 0014 7047     		bx	lr
 429              	.L56:
6501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 430              		.loc 1 6502 0
 431 0016 4FF00073 		mov	r3, #33554432
 432 001a C362     		str	r3, [r0, #44]
ARM GAS  /tmp/cc1k1gAU.s 			page 123


6503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
6507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 433              		.loc 1 6508 0
 434 001c F7E7     		b	.L52
 435              		.cfi_endproc
 436              	.LFE218:
 438              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 439              		.align	1
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv5-sp-d16
 445              	I2C_IsAcknowledgeFailed:
 446              	.LFB214:
6267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 447              		.loc 1 6267 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL48:
 452 0000 70B5     		push	{r4, r5, r6, lr}
 453              	.LCFI6:
 454              		.cfi_def_cfa_offset 16
 455              		.cfi_offset 4, -16
 456              		.cfi_offset 5, -12
 457              		.cfi_offset 6, -8
 458              		.cfi_offset 14, -4
 459 0002 0446     		mov	r4, r0
 460 0004 0D46     		mov	r5, r1
 461 0006 1646     		mov	r6, r2
6268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 462              		.loc 1 6268 0
 463 0008 0368     		ldr	r3, [r0]
 464 000a 9B69     		ldr	r3, [r3, #24]
 465 000c 13F0100F 		tst	r3, #16
 466 0010 1CD0     		beq	.L64
 467              	.LVL49:
 468              	.L60:
6272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 469              		.loc 1 6272 0
 470 0012 2368     		ldr	r3, [r4]
 471 0014 9A69     		ldr	r2, [r3, #24]
 472 0016 12F0200F 		tst	r2, #32
 473 001a 19D1     		bne	.L65
6275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 474              		.loc 1 6275 0
 475 001c B5F1FF3F 		cmp	r5, #-1
 476 0020 F7D0     		beq	.L60
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 477              		.loc 1 6277 0
 478 0022 FFF7FEFF 		bl	HAL_GetTick
 479              	.LVL50:
 480 0026 801B     		subs	r0, r0, r6
ARM GAS  /tmp/cc1k1gAU.s 			page 124


 481 0028 8542     		cmp	r5, r0
 482 002a 01D3     		bcc	.L61
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 483              		.loc 1 6277 0 is_stmt 0 discriminator 1
 484 002c 002D     		cmp	r5, #0
 485 002e F0D1     		bne	.L60
 486              	.L61:
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 487              		.loc 1 6279 0 is_stmt 1
 488 0030 636C     		ldr	r3, [r4, #68]
 489 0032 43F02003 		orr	r3, r3, #32
 490 0036 6364     		str	r3, [r4, #68]
6280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 491              		.loc 1 6280 0
 492 0038 2023     		movs	r3, #32
 493 003a 84F84130 		strb	r3, [r4, #65]
6281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 494              		.loc 1 6281 0
 495 003e 0023     		movs	r3, #0
 496 0040 84F84230 		strb	r3, [r4, #66]
6284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 497              		.loc 1 6284 0
 498 0044 84F84030 		strb	r3, [r4, #64]
6286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 499              		.loc 1 6286 0
 500 0048 0120     		movs	r0, #1
 501 004a 70BD     		pop	{r4, r5, r6, pc}
 502              	.LVL51:
 503              	.L64:
6312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 504              		.loc 1 6312 0
 505 004c 0020     		movs	r0, #0
 506              	.LVL52:
 507 004e 70BD     		pop	{r4, r5, r6, pc}
 508              	.LVL53:
 509              	.L65:
6292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 510              		.loc 1 6292 0
 511 0050 1022     		movs	r2, #16
 512 0052 DA61     		str	r2, [r3, #28]
6295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 513              		.loc 1 6295 0
 514 0054 2368     		ldr	r3, [r4]
 515 0056 2025     		movs	r5, #32
 516              	.LVL54:
 517 0058 DD61     		str	r5, [r3, #28]
6298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 518              		.loc 1 6298 0
 519 005a 2046     		mov	r0, r4
 520 005c FFF7FEFF 		bl	I2C_Flush_TXDR
 521              	.LVL55:
6301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 522              		.loc 1 6301 0
 523 0060 2268     		ldr	r2, [r4]
 524 0062 5368     		ldr	r3, [r2, #4]
 525 0064 23F0FF73 		bic	r3, r3, #33423360
 526 0068 23F48B33 		bic	r3, r3, #71168
ARM GAS  /tmp/cc1k1gAU.s 			page 125


 527 006c 23F4FF73 		bic	r3, r3, #510
 528 0070 23F00103 		bic	r3, r3, #1
 529 0074 5360     		str	r3, [r2, #4]
6303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 530              		.loc 1 6303 0
 531 0076 636C     		ldr	r3, [r4, #68]
 532 0078 43F00403 		orr	r3, r3, #4
 533 007c 6364     		str	r3, [r4, #68]
6304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 534              		.loc 1 6304 0
 535 007e 84F84150 		strb	r5, [r4, #65]
6305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 536              		.loc 1 6305 0
 537 0082 0023     		movs	r3, #0
 538 0084 84F84230 		strb	r3, [r4, #66]
6308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 539              		.loc 1 6308 0
 540 0088 84F84030 		strb	r3, [r4, #64]
6310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 541              		.loc 1 6310 0
 542 008c 0120     		movs	r0, #1
6313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 543              		.loc 1 6313 0
 544 008e 70BD     		pop	{r4, r5, r6, pc}
 545              		.cfi_endproc
 546              	.LFE214:
 548              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 549              		.align	1
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv5-sp-d16
 555              	I2C_WaitOnTXISFlagUntilTimeout:
 556              	.LFB211:
6133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 557              		.loc 1 6133 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              	.LVL56:
 562 0000 70B5     		push	{r4, r5, r6, lr}
 563              	.LCFI7:
 564              		.cfi_def_cfa_offset 16
 565              		.cfi_offset 4, -16
 566              		.cfi_offset 5, -12
 567              		.cfi_offset 6, -8
 568              		.cfi_offset 14, -4
 569 0002 0446     		mov	r4, r0
 570 0004 0D46     		mov	r5, r1
 571 0006 1646     		mov	r6, r2
 572              	.LVL57:
 573              	.L69:
6134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 574              		.loc 1 6134 0
 575 0008 2368     		ldr	r3, [r4]
 576 000a 9B69     		ldr	r3, [r3, #24]
 577 000c 13F0020F 		tst	r3, #2
ARM GAS  /tmp/cc1k1gAU.s 			page 126


 578 0010 1DD1     		bne	.L74
6137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 579              		.loc 1 6137 0
 580 0012 3246     		mov	r2, r6
 581 0014 2946     		mov	r1, r5
 582 0016 2046     		mov	r0, r4
 583 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 584              	.LVL58:
 585 001c C8B9     		cbnz	r0, .L72
6143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 586              		.loc 1 6143 0
 587 001e B5F1FF3F 		cmp	r5, #-1
 588 0022 F1D0     		beq	.L69
6145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 589              		.loc 1 6145 0
 590 0024 FFF7FEFF 		bl	HAL_GetTick
 591              	.LVL59:
 592 0028 801B     		subs	r0, r0, r6
 593 002a 8542     		cmp	r5, r0
 594 002c 01D3     		bcc	.L70
6145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 595              		.loc 1 6145 0 is_stmt 0 discriminator 1
 596 002e 002D     		cmp	r5, #0
 597 0030 EAD1     		bne	.L69
 598              	.L70:
6147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 599              		.loc 1 6147 0 is_stmt 1
 600 0032 636C     		ldr	r3, [r4, #68]
 601 0034 43F02003 		orr	r3, r3, #32
 602 0038 6364     		str	r3, [r4, #68]
6148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 603              		.loc 1 6148 0
 604 003a 2023     		movs	r3, #32
 605 003c 84F84130 		strb	r3, [r4, #65]
6149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 606              		.loc 1 6149 0
 607 0040 0023     		movs	r3, #0
 608 0042 84F84230 		strb	r3, [r4, #66]
6152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 609              		.loc 1 6152 0
 610 0046 84F84030 		strb	r3, [r4, #64]
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 611              		.loc 1 6154 0
 612 004a 0120     		movs	r0, #1
 613 004c 70BD     		pop	{r4, r5, r6, pc}
 614              	.LVL60:
 615              	.L74:
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 616              		.loc 1 6158 0
 617 004e 0020     		movs	r0, #0
 618 0050 70BD     		pop	{r4, r5, r6, pc}
 619              	.LVL61:
 620              	.L72:
6139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 621              		.loc 1 6139 0
 622 0052 0120     		movs	r0, #1
6159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 127


 623              		.loc 1 6159 0
 624 0054 70BD     		pop	{r4, r5, r6, pc}
 625              		.cfi_endproc
 626              	.LFE211:
 628              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 629              		.align	1
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv5-sp-d16
 635              	I2C_WaitOnFlagUntilTimeout:
 636              	.LFB210:
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 637              		.loc 1 6103 0
 638              		.cfi_startproc
 639              		@ args = 4, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL62:
 642 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 643              	.LCFI8:
 644              		.cfi_def_cfa_offset 24
 645              		.cfi_offset 3, -24
 646              		.cfi_offset 4, -20
 647              		.cfi_offset 5, -16
 648              		.cfi_offset 6, -12
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 0546     		mov	r5, r0
 652 0004 0F46     		mov	r7, r1
 653 0006 1646     		mov	r6, r2
 654 0008 1C46     		mov	r4, r3
 655              	.LVL63:
 656              	.L77:
6104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 657              		.loc 1 6104 0
 658 000a 2B68     		ldr	r3, [r5]
 659 000c 9B69     		ldr	r3, [r3, #24]
 660 000e 37EA0303 		bics	r3, r7, r3
 661 0012 0CBF     		ite	eq
 662 0014 0123     		moveq	r3, #1
 663 0016 0023     		movne	r3, #0
 664 0018 B342     		cmp	r3, r6
 665 001a 18D1     		bne	.L82
6107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 666              		.loc 1 6107 0
 667 001c B4F1FF3F 		cmp	r4, #-1
 668 0020 F3D0     		beq	.L77
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 669              		.loc 1 6109 0
 670 0022 FFF7FEFF 		bl	HAL_GetTick
 671              	.LVL64:
 672 0026 069B     		ldr	r3, [sp, #24]
 673 0028 C01A     		subs	r0, r0, r3
 674 002a 8442     		cmp	r4, r0
 675 002c 01D3     		bcc	.L78
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 676              		.loc 1 6109 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc1k1gAU.s 			page 128


 677 002e 002C     		cmp	r4, #0
 678 0030 EBD1     		bne	.L77
 679              	.L78:
6111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 680              		.loc 1 6111 0 is_stmt 1
 681 0032 6B6C     		ldr	r3, [r5, #68]
 682 0034 43F02003 		orr	r3, r3, #32
 683 0038 6B64     		str	r3, [r5, #68]
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 684              		.loc 1 6112 0
 685 003a 2023     		movs	r3, #32
 686 003c 85F84130 		strb	r3, [r5, #65]
6113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 687              		.loc 1 6113 0
 688 0040 0023     		movs	r3, #0
 689 0042 85F84230 		strb	r3, [r5, #66]
6116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 690              		.loc 1 6116 0
 691 0046 85F84030 		strb	r3, [r5, #64]
6117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 692              		.loc 1 6117 0
 693 004a 0120     		movs	r0, #1
 694 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 695              	.LVL65:
 696              	.L82:
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 697              		.loc 1 6121 0
 698 004e 0020     		movs	r0, #0
6122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 699              		.loc 1 6122 0
 700 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 701              		.cfi_endproc
 702              	.LFE210:
 704              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 705              		.align	1
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 709              		.fpu fpv5-sp-d16
 711              	I2C_RequestMemoryWrite:
 712              	.LFB194:
5124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 713              		.loc 1 5124 0
 714              		.cfi_startproc
 715              		@ args = 8, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              	.LVL66:
 718 0000 70B5     		push	{r4, r5, r6, lr}
 719              	.LCFI9:
 720              		.cfi_def_cfa_offset 16
 721              		.cfi_offset 4, -16
 722              		.cfi_offset 5, -12
 723              		.cfi_offset 6, -8
 724              		.cfi_offset 14, -4
 725 0002 82B0     		sub	sp, sp, #8
 726              	.LCFI10:
 727              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc1k1gAU.s 			page 129


 728 0004 0446     		mov	r4, r0
 729 0006 1546     		mov	r5, r2
 730 0008 1E46     		mov	r6, r3
5125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 731              		.loc 1 5125 0
 732 000a 184B     		ldr	r3, .L91
 733              	.LVL67:
 734 000c 0093     		str	r3, [sp]
 735 000e 4FF08073 		mov	r3, #16777216
 736 0012 F2B2     		uxtb	r2, r6
 737              	.LVL68:
 738 0014 FFF7FEFF 		bl	I2C_TransferConfig
 739              	.LVL69:
5128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 740              		.loc 1 5128 0
 741 0018 079A     		ldr	r2, [sp, #28]
 742 001a 0699     		ldr	r1, [sp, #24]
 743 001c 2046     		mov	r0, r4
 744 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 745              	.LVL70:
 746 0022 E8B9     		cbnz	r0, .L87
5134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 747              		.loc 1 5134 0
 748 0024 012E     		cmp	r6, #1
 749 0026 0CD0     		beq	.L90
5143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 750              		.loc 1 5143 0
 751 0028 2368     		ldr	r3, [r4]
 752 002a 2A0A     		lsrs	r2, r5, #8
 753 002c 9A62     		str	r2, [r3, #40]
5146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 754              		.loc 1 5146 0
 755 002e 079A     		ldr	r2, [sp, #28]
 756 0030 0699     		ldr	r1, [sp, #24]
 757 0032 2046     		mov	r0, r4
 758 0034 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 759              	.LVL71:
 760 0038 B0B9     		cbnz	r0, .L88
5152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 761              		.loc 1 5152 0
 762 003a 2368     		ldr	r3, [r4]
 763 003c EDB2     		uxtb	r5, r5
 764 003e 9D62     		str	r5, [r3, #40]
 765 0040 02E0     		b	.L86
 766              	.L90:
5137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 767              		.loc 1 5137 0
 768 0042 2368     		ldr	r3, [r4]
 769 0044 EDB2     		uxtb	r5, r5
 770 0046 9D62     		str	r5, [r3, #40]
 771              	.L86:
5156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 772              		.loc 1 5156 0
 773 0048 079B     		ldr	r3, [sp, #28]
 774 004a 0093     		str	r3, [sp]
 775 004c 069B     		ldr	r3, [sp, #24]
 776 004e 0022     		movs	r2, #0
ARM GAS  /tmp/cc1k1gAU.s 			page 130


 777 0050 8021     		movs	r1, #128
 778 0052 2046     		mov	r0, r4
 779 0054 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 780              	.LVL72:
 781 0058 0346     		mov	r3, r0
 782 005a 10B1     		cbz	r0, .L84
5158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 783              		.loc 1 5158 0
 784 005c 0123     		movs	r3, #1
 785 005e 00E0     		b	.L84
 786              	.L87:
5130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 787              		.loc 1 5130 0
 788 0060 0123     		movs	r3, #1
 789              	.L84:
5162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 790              		.loc 1 5162 0
 791 0062 1846     		mov	r0, r3
 792 0064 02B0     		add	sp, sp, #8
 793              	.LCFI11:
 794              		.cfi_remember_state
 795              		.cfi_def_cfa_offset 16
 796              		@ sp needed
 797 0066 70BD     		pop	{r4, r5, r6, pc}
 798              	.LVL73:
 799              	.L88:
 800              	.LCFI12:
 801              		.cfi_restore_state
5148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 802              		.loc 1 5148 0
 803 0068 0123     		movs	r3, #1
 804 006a FAE7     		b	.L84
 805              	.L92:
 806              		.align	2
 807              	.L91:
 808 006c 00200080 		.word	-2147475456
 809              		.cfi_endproc
 810              	.LFE194:
 812              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 813              		.align	1
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv5-sp-d16
 819              	I2C_RequestMemoryRead:
 820              	.LFB195:
5177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 821              		.loc 1 5177 0
 822              		.cfi_startproc
 823              		@ args = 8, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              	.LVL74:
 826 0000 70B5     		push	{r4, r5, r6, lr}
 827              	.LCFI13:
 828              		.cfi_def_cfa_offset 16
 829              		.cfi_offset 4, -16
 830              		.cfi_offset 5, -12
ARM GAS  /tmp/cc1k1gAU.s 			page 131


 831              		.cfi_offset 6, -8
 832              		.cfi_offset 14, -4
 833 0002 82B0     		sub	sp, sp, #8
 834              	.LCFI14:
 835              		.cfi_def_cfa_offset 24
 836 0004 0446     		mov	r4, r0
 837 0006 1546     		mov	r5, r2
 838 0008 1E46     		mov	r6, r3
5178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 839              		.loc 1 5178 0
 840 000a 184B     		ldr	r3, .L101
 841              	.LVL75:
 842 000c 0093     		str	r3, [sp]
 843 000e 0023     		movs	r3, #0
 844 0010 F2B2     		uxtb	r2, r6
 845              	.LVL76:
 846 0012 FFF7FEFF 		bl	I2C_TransferConfig
 847              	.LVL77:
5181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 848              		.loc 1 5181 0
 849 0016 079A     		ldr	r2, [sp, #28]
 850 0018 0699     		ldr	r1, [sp, #24]
 851 001a 2046     		mov	r0, r4
 852 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 853              	.LVL78:
 854 0020 E8B9     		cbnz	r0, .L97
5187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 855              		.loc 1 5187 0
 856 0022 012E     		cmp	r6, #1
 857 0024 0CD0     		beq	.L100
5196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 858              		.loc 1 5196 0
 859 0026 2368     		ldr	r3, [r4]
 860 0028 2A0A     		lsrs	r2, r5, #8
 861 002a 9A62     		str	r2, [r3, #40]
5199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 862              		.loc 1 5199 0
 863 002c 079A     		ldr	r2, [sp, #28]
 864 002e 0699     		ldr	r1, [sp, #24]
 865 0030 2046     		mov	r0, r4
 866 0032 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 867              	.LVL79:
 868 0036 B0B9     		cbnz	r0, .L98
5205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 869              		.loc 1 5205 0
 870 0038 2368     		ldr	r3, [r4]
 871 003a EDB2     		uxtb	r5, r5
 872 003c 9D62     		str	r5, [r3, #40]
 873 003e 02E0     		b	.L96
 874              	.L100:
5190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 875              		.loc 1 5190 0
 876 0040 2368     		ldr	r3, [r4]
 877 0042 EDB2     		uxtb	r5, r5
 878 0044 9D62     		str	r5, [r3, #40]
 879              	.L96:
5209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1k1gAU.s 			page 132


 880              		.loc 1 5209 0
 881 0046 079B     		ldr	r3, [sp, #28]
 882 0048 0093     		str	r3, [sp]
 883 004a 069B     		ldr	r3, [sp, #24]
 884 004c 0022     		movs	r2, #0
 885 004e 4021     		movs	r1, #64
 886 0050 2046     		mov	r0, r4
 887 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 888              	.LVL80:
 889 0056 0346     		mov	r3, r0
 890 0058 10B1     		cbz	r0, .L94
5211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 891              		.loc 1 5211 0
 892 005a 0123     		movs	r3, #1
 893 005c 00E0     		b	.L94
 894              	.L97:
5183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 895              		.loc 1 5183 0
 896 005e 0123     		movs	r3, #1
 897              	.L94:
5215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 898              		.loc 1 5215 0
 899 0060 1846     		mov	r0, r3
 900 0062 02B0     		add	sp, sp, #8
 901              	.LCFI15:
 902              		.cfi_remember_state
 903              		.cfi_def_cfa_offset 16
 904              		@ sp needed
 905 0064 70BD     		pop	{r4, r5, r6, pc}
 906              	.LVL81:
 907              	.L98:
 908              	.LCFI16:
 909              		.cfi_restore_state
5201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 910              		.loc 1 5201 0
 911 0066 0123     		movs	r3, #1
 912 0068 FAE7     		b	.L94
 913              	.L102:
 914 006a 00BF     		.align	2
 915              	.L101:
 916 006c 00200080 		.word	-2147475456
 917              		.cfi_endproc
 918              	.LFE195:
 920              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 921              		.align	1
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu fpv5-sp-d16
 927              	I2C_WaitOnSTOPFlagUntilTimeout:
 928              	.LFB212:
6170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 929              		.loc 1 6170 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              	.LVL82:
ARM GAS  /tmp/cc1k1gAU.s 			page 133


 934 0000 70B5     		push	{r4, r5, r6, lr}
 935              	.LCFI17:
 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 4, -16
 938              		.cfi_offset 5, -12
 939              		.cfi_offset 6, -8
 940              		.cfi_offset 14, -4
 941 0002 0546     		mov	r5, r0
 942 0004 0C46     		mov	r4, r1
 943 0006 1646     		mov	r6, r2
 944              	.LVL83:
 945              	.L104:
6171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 946              		.loc 1 6171 0
 947 0008 2B68     		ldr	r3, [r5]
 948 000a 9B69     		ldr	r3, [r3, #24]
 949 000c 13F0200F 		tst	r3, #32
 950 0010 1AD1     		bne	.L110
6174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 951              		.loc 1 6174 0
 952 0012 3246     		mov	r2, r6
 953 0014 2146     		mov	r1, r4
 954 0016 2846     		mov	r0, r5
 955 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 956              	.LVL84:
 957 001c B0B9     		cbnz	r0, .L108
6180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 958              		.loc 1 6180 0
 959 001e FFF7FEFF 		bl	HAL_GetTick
 960              	.LVL85:
 961 0022 801B     		subs	r0, r0, r6
 962 0024 8442     		cmp	r4, r0
 963 0026 01D3     		bcc	.L106
6180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 964              		.loc 1 6180 0 is_stmt 0 discriminator 1
 965 0028 002C     		cmp	r4, #0
 966 002a EDD1     		bne	.L104
 967              	.L106:
6182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 968              		.loc 1 6182 0 is_stmt 1
 969 002c 6B6C     		ldr	r3, [r5, #68]
 970 002e 43F02003 		orr	r3, r3, #32
 971 0032 6B64     		str	r3, [r5, #68]
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 972              		.loc 1 6183 0
 973 0034 2023     		movs	r3, #32
 974 0036 85F84130 		strb	r3, [r5, #65]
6184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 975              		.loc 1 6184 0
 976 003a 0023     		movs	r3, #0
 977 003c 85F84230 		strb	r3, [r5, #66]
6187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 978              		.loc 1 6187 0
 979 0040 85F84030 		strb	r3, [r5, #64]
6189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 980              		.loc 1 6189 0
 981 0044 0120     		movs	r0, #1
ARM GAS  /tmp/cc1k1gAU.s 			page 134


 982 0046 70BD     		pop	{r4, r5, r6, pc}
 983              	.LVL86:
 984              	.L110:
6192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 985              		.loc 1 6192 0
 986 0048 0020     		movs	r0, #0
 987 004a 70BD     		pop	{r4, r5, r6, pc}
 988              	.LVL87:
 989              	.L108:
6176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 990              		.loc 1 6176 0
 991 004c 0120     		movs	r0, #1
6193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 992              		.loc 1 6193 0
 993 004e 70BD     		pop	{r4, r5, r6, pc}
 994              		.cfi_endproc
 995              	.LFE212:
 997              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 998              		.align	1
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv5-sp-d16
 1004              	I2C_WaitOnRXNEFlagUntilTimeout:
 1005              	.LFB213:
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1006              		.loc 1 6204 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL88:
 1011 0000 70B5     		push	{r4, r5, r6, lr}
 1012              	.LCFI18:
 1013              		.cfi_def_cfa_offset 16
 1014              		.cfi_offset 4, -16
 1015              		.cfi_offset 5, -12
 1016              		.cfi_offset 6, -8
 1017              		.cfi_offset 14, -4
 1018 0002 0446     		mov	r4, r0
 1019 0004 0D46     		mov	r5, r1
 1020 0006 1646     		mov	r6, r2
 1021              	.LVL89:
 1022              	.L112:
6205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1023              		.loc 1 6205 0
 1024 0008 2368     		ldr	r3, [r4]
 1025 000a 9B69     		ldr	r3, [r3, #24]
 1026 000c 13F0040F 		tst	r3, #4
 1027 0010 3ED1     		bne	.L120
6208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1028              		.loc 1 6208 0
 1029 0012 3246     		mov	r2, r6
 1030 0014 2946     		mov	r1, r5
 1031 0016 2046     		mov	r0, r4
 1032 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1033              	.LVL90:
 1034 001c 0146     		mov	r1, r0
ARM GAS  /tmp/cc1k1gAU.s 			page 135


 1035 001e 0028     		cmp	r0, #0
 1036 0020 38D1     		bne	.L118
6214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1037              		.loc 1 6214 0
 1038 0022 2368     		ldr	r3, [r4]
 1039 0024 9A69     		ldr	r2, [r3, #24]
 1040 0026 12F0200F 		tst	r2, #32
 1041 002a 13D1     		bne	.L121
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1042              		.loc 1 6244 0
 1043 002c FFF7FEFF 		bl	HAL_GetTick
 1044              	.LVL91:
 1045 0030 801B     		subs	r0, r0, r6
 1046 0032 8542     		cmp	r5, r0
 1047 0034 01D3     		bcc	.L116
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1048              		.loc 1 6244 0 is_stmt 0 discriminator 1
 1049 0036 002D     		cmp	r5, #0
 1050 0038 E6D1     		bne	.L112
 1051              	.L116:
6246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 1052              		.loc 1 6246 0 is_stmt 1
 1053 003a 636C     		ldr	r3, [r4, #68]
 1054 003c 43F02003 		orr	r3, r3, #32
 1055 0040 6364     		str	r3, [r4, #68]
6247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1056              		.loc 1 6247 0
 1057 0042 2023     		movs	r3, #32
 1058 0044 84F84130 		strb	r3, [r4, #65]
6250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1059              		.loc 1 6250 0
 1060 0048 0023     		movs	r3, #0
 1061 004a 84F84030 		strb	r3, [r4, #64]
6252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1062              		.loc 1 6252 0
 1063 004e 0121     		movs	r1, #1
 1064              	.L113:
6256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1065              		.loc 1 6256 0
 1066 0050 0846     		mov	r0, r1
 1067 0052 70BD     		pop	{r4, r5, r6, pc}
 1068              	.LVL92:
 1069              	.L121:
6218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1070              		.loc 1 6218 0
 1071 0054 9A69     		ldr	r2, [r3, #24]
 1072 0056 12F0040F 		tst	r2, #4
 1073 005a 02D0     		beq	.L115
6218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1074              		.loc 1 6218 0 is_stmt 0 discriminator 1
 1075 005c 228D     		ldrh	r2, [r4, #40]
 1076 005e 002A     		cmp	r2, #0
 1077 0060 F6D1     		bne	.L113
 1078              	.L115:
6227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1079              		.loc 1 6227 0 is_stmt 1
 1080 0062 2022     		movs	r2, #32
ARM GAS  /tmp/cc1k1gAU.s 			page 136


 1081 0064 DA61     		str	r2, [r3, #28]
6230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1082              		.loc 1 6230 0
 1083 0066 2168     		ldr	r1, [r4]
 1084 0068 4B68     		ldr	r3, [r1, #4]
 1085 006a 23F0FF73 		bic	r3, r3, #33423360
 1086 006e 23F48B33 		bic	r3, r3, #71168
 1087 0072 23F4FF73 		bic	r3, r3, #510
 1088 0076 23F00103 		bic	r3, r3, #1
 1089 007a 4B60     		str	r3, [r1, #4]
6232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1090              		.loc 1 6232 0
 1091 007c 0023     		movs	r3, #0
 1092 007e 6364     		str	r3, [r4, #68]
6233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1093              		.loc 1 6233 0
 1094 0080 84F84120 		strb	r2, [r4, #65]
6234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1095              		.loc 1 6234 0
 1096 0084 84F84230 		strb	r3, [r4, #66]
6237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1097              		.loc 1 6237 0
 1098 0088 84F84030 		strb	r3, [r4, #64]
6239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1099              		.loc 1 6239 0
 1100 008c 0121     		movs	r1, #1
 1101 008e DFE7     		b	.L113
 1102              	.L120:
6255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1103              		.loc 1 6255 0
 1104 0090 0021     		movs	r1, #0
 1105 0092 DDE7     		b	.L113
 1106              	.L118:
6210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1107              		.loc 1 6210 0
 1108 0094 0121     		movs	r1, #1
 1109 0096 DBE7     		b	.L113
 1110              		.cfi_endproc
 1111              	.LFE213:
 1113              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1114              		.align	1
 1115              		.weak	HAL_I2C_MspInit
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu fpv5-sp-d16
 1121              	HAL_I2C_MspInit:
 1122              	.LFB143:
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1123              		.loc 1 625 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128              	.LVL93:
 1129 0000 7047     		bx	lr
 1130              		.cfi_endproc
ARM GAS  /tmp/cc1k1gAU.s 			page 137


 1131              	.LFE143:
 1133              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1134              		.align	1
 1135              		.global	HAL_I2C_Init
 1136              		.syntax unified
 1137              		.thumb
 1138              		.thumb_func
 1139              		.fpu fpv5-sp-d16
 1141              	HAL_I2C_Init:
 1142              	.LFB141:
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1143              		.loc 1 470 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              	.LVL94:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1148              		.loc 1 472 0
 1149 0000 0028     		cmp	r0, #0
 1150 0002 57D0     		beq	.L129
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1151              		.loc 1 470 0
 1152 0004 10B5     		push	{r4, lr}
 1153              	.LCFI19:
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 4, -8
 1156              		.cfi_offset 14, -4
 1157 0006 0446     		mov	r4, r0
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1158              		.loc 1 487 0
 1159 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1160 000c 002B     		cmp	r3, #0
 1161 000e 41D0     		beq	.L134
 1162              	.LVL95:
 1163              	.L125:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1164              		.loc 1 518 0
 1165 0010 2423     		movs	r3, #36
 1166 0012 84F84130 		strb	r3, [r4, #65]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1167              		.loc 1 521 0
 1168 0016 2268     		ldr	r2, [r4]
 1169 0018 1368     		ldr	r3, [r2]
 1170 001a 23F00103 		bic	r3, r3, #1
 1171 001e 1360     		str	r3, [r2]
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1172              		.loc 1 525 0
 1173 0020 2268     		ldr	r2, [r4]
 1174 0022 6368     		ldr	r3, [r4, #4]
 1175 0024 23F07063 		bic	r3, r3, #251658240
 1176 0028 1361     		str	r3, [r2, #16]
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1177              		.loc 1 529 0
 1178 002a 2268     		ldr	r2, [r4]
 1179 002c 9368     		ldr	r3, [r2, #8]
 1180 002e 23F40043 		bic	r3, r3, #32768
 1181 0032 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/cc1k1gAU.s 			page 138


 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1182              		.loc 1 532 0
 1183 0034 E368     		ldr	r3, [r4, #12]
 1184 0036 012B     		cmp	r3, #1
 1185 0038 31D0     		beq	.L135
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1186              		.loc 1 538 0
 1187 003a 2268     		ldr	r2, [r4]
 1188 003c A368     		ldr	r3, [r4, #8]
 1189 003e 43F40443 		orr	r3, r3, #33792
 1190 0042 9360     		str	r3, [r2, #8]
 1191              	.L127:
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1192              		.loc 1 543 0
 1193 0044 E368     		ldr	r3, [r4, #12]
 1194 0046 022B     		cmp	r3, #2
 1195 0048 2FD0     		beq	.L136
 1196              	.L128:
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1197              		.loc 1 548 0
 1198 004a 2268     		ldr	r2, [r4]
 1199 004c 5168     		ldr	r1, [r2, #4]
 1200 004e 1A4B     		ldr	r3, .L137
 1201 0050 0B43     		orrs	r3, r3, r1
 1202 0052 5360     		str	r3, [r2, #4]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1203              		.loc 1 552 0
 1204 0054 2268     		ldr	r2, [r4]
 1205 0056 D368     		ldr	r3, [r2, #12]
 1206 0058 23F40043 		bic	r3, r3, #32768
 1207 005c D360     		str	r3, [r2, #12]
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1208              		.loc 1 555 0
 1209 005e 2268     		ldr	r2, [r4]
 1210 0060 2369     		ldr	r3, [r4, #16]
 1211 0062 6169     		ldr	r1, [r4, #20]
 1212 0064 0B43     		orrs	r3, r3, r1
 1213 0066 A169     		ldr	r1, [r4, #24]
 1214 0068 43EA0123 		orr	r3, r3, r1, lsl #8
 1215 006c D360     		str	r3, [r2, #12]
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1216              		.loc 1 559 0
 1217 006e 2268     		ldr	r2, [r4]
 1218 0070 E369     		ldr	r3, [r4, #28]
 1219 0072 216A     		ldr	r1, [r4, #32]
 1220 0074 0B43     		orrs	r3, r3, r1
 1221 0076 1360     		str	r3, [r2]
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1222              		.loc 1 562 0
 1223 0078 2268     		ldr	r2, [r4]
 1224 007a 1368     		ldr	r3, [r2]
 1225 007c 43F00103 		orr	r3, r3, #1
 1226 0080 1360     		str	r3, [r2]
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1227              		.loc 1 564 0
 1228 0082 0020     		movs	r0, #0
 1229 0084 6064     		str	r0, [r4, #68]
ARM GAS  /tmp/cc1k1gAU.s 			page 139


 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1230              		.loc 1 565 0
 1231 0086 2023     		movs	r3, #32
 1232 0088 84F84130 		strb	r3, [r4, #65]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1233              		.loc 1 566 0
 1234 008c 2063     		str	r0, [r4, #48]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1235              		.loc 1 567 0
 1236 008e 84F84200 		strb	r0, [r4, #66]
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1237              		.loc 1 569 0
 1238 0092 10BD     		pop	{r4, pc}
 1239              	.LVL96:
 1240              	.L134:
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1241              		.loc 1 490 0
 1242 0094 80F84030 		strb	r3, [r0, #64]
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1243              		.loc 1 514 0
 1244 0098 FFF7FEFF 		bl	HAL_I2C_MspInit
 1245              	.LVL97:
 1246 009c B8E7     		b	.L125
 1247              	.L135:
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1248              		.loc 1 534 0
 1249 009e 2268     		ldr	r2, [r4]
 1250 00a0 A368     		ldr	r3, [r4, #8]
 1251 00a2 43F40043 		orr	r3, r3, #32768
 1252 00a6 9360     		str	r3, [r2, #8]
 1253 00a8 CCE7     		b	.L127
 1254              	.L136:
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1255              		.loc 1 545 0
 1256 00aa 2368     		ldr	r3, [r4]
 1257 00ac 4FF40062 		mov	r2, #2048
 1258 00b0 5A60     		str	r2, [r3, #4]
 1259 00b2 CAE7     		b	.L128
 1260              	.LVL98:
 1261              	.L129:
 1262              	.LCFI20:
 1263              		.cfi_def_cfa_offset 0
 1264              		.cfi_restore 4
 1265              		.cfi_restore 14
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1266              		.loc 1 474 0
 1267 00b4 0120     		movs	r0, #1
 1268              	.LVL99:
 1269 00b6 7047     		bx	lr
 1270              	.L138:
 1271              		.align	2
 1272              	.L137:
 1273 00b8 00800002 		.word	33587200
 1274              		.cfi_endproc
 1275              	.LFE141:
 1277              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1278              		.align	1
ARM GAS  /tmp/cc1k1gAU.s 			page 140


 1279              		.weak	HAL_I2C_MspDeInit
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1283              		.fpu fpv5-sp-d16
 1285              	HAL_I2C_MspDeInit:
 1286              	.LFB144:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1287              		.loc 1 641 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
 1292              	.LVL100:
 1293 0000 7047     		bx	lr
 1294              		.cfi_endproc
 1295              	.LFE144:
 1297              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1298              		.align	1
 1299              		.global	HAL_I2C_DeInit
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1303              		.fpu fpv5-sp-d16
 1305              	HAL_I2C_DeInit:
 1306              	.LFB142:
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1307              		.loc 1 579 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              	.LVL101:
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1312              		.loc 1 581 0
 1313 0000 A8B1     		cbz	r0, .L142
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1314              		.loc 1 579 0
 1315 0002 10B5     		push	{r4, lr}
 1316              	.LCFI21:
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 4, -8
 1319              		.cfi_offset 14, -4
 1320 0004 0446     		mov	r4, r0
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1321              		.loc 1 589 0
 1322 0006 2423     		movs	r3, #36
 1323 0008 80F84130 		strb	r3, [r0, #65]
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1324              		.loc 1 592 0
 1325 000c 0268     		ldr	r2, [r0]
 1326 000e 1368     		ldr	r3, [r2]
 1327 0010 23F00103 		bic	r3, r3, #1
 1328 0014 1360     		str	r3, [r2]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1329              		.loc 1 604 0
 1330 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1331              	.LVL102:
ARM GAS  /tmp/cc1k1gAU.s 			page 141


 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1332              		.loc 1 607 0
 1333 001a 0020     		movs	r0, #0
 1334 001c 6064     		str	r0, [r4, #68]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1335              		.loc 1 608 0
 1336 001e 84F84100 		strb	r0, [r4, #65]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1337              		.loc 1 609 0
 1338 0022 2063     		str	r0, [r4, #48]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1339              		.loc 1 610 0
 1340 0024 84F84200 		strb	r0, [r4, #66]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1341              		.loc 1 613 0
 1342 0028 84F84000 		strb	r0, [r4, #64]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1343              		.loc 1 615 0
 1344 002c 10BD     		pop	{r4, pc}
 1345              	.LVL103:
 1346              	.L142:
 1347              	.LCFI22:
 1348              		.cfi_def_cfa_offset 0
 1349              		.cfi_restore 4
 1350              		.cfi_restore 14
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1351              		.loc 1 583 0
 1352 002e 0120     		movs	r0, #1
 1353              	.LVL104:
 1354 0030 7047     		bx	lr
 1355              		.cfi_endproc
 1356              	.LFE142:
 1358              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1359              		.align	1
 1360              		.global	HAL_I2C_Master_Transmit
 1361              		.syntax unified
 1362              		.thumb
 1363              		.thumb_func
 1364              		.fpu fpv5-sp-d16
 1366              	HAL_I2C_Master_Transmit:
 1367              	.LFB145:
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1368              		.loc 1 1061 0
 1369              		.cfi_startproc
 1370              		@ args = 4, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372              	.LVL105:
 1373 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1374              	.LCFI23:
 1375              		.cfi_def_cfa_offset 28
 1376              		.cfi_offset 4, -28
 1377              		.cfi_offset 5, -24
 1378              		.cfi_offset 6, -20
 1379              		.cfi_offset 7, -16
 1380              		.cfi_offset 8, -12
 1381              		.cfi_offset 9, -8
 1382              		.cfi_offset 14, -4
ARM GAS  /tmp/cc1k1gAU.s 			page 142


 1383 0004 83B0     		sub	sp, sp, #12
 1384              	.LCFI24:
 1385              		.cfi_def_cfa_offset 40
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1386              		.loc 1 1064 0
 1387 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1388 000a EDB2     		uxtb	r5, r5
 1389 000c 202D     		cmp	r5, #32
 1390 000e 04D0     		beq	.L162
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1391              		.loc 1 1159 0
 1392 0010 0223     		movs	r3, #2
 1393              	.LVL106:
 1394              	.L148:
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1395              		.loc 1 1161 0
 1396 0012 1846     		mov	r0, r3
 1397 0014 03B0     		add	sp, sp, #12
 1398              	.LCFI25:
 1399              		.cfi_remember_state
 1400              		.cfi_def_cfa_offset 28
 1401              		@ sp needed
 1402 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1403              	.LVL107:
 1404              	.L162:
 1405              	.LCFI26:
 1406              		.cfi_restore_state
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1407              		.loc 1 1067 0
 1408 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1409 001e 012C     		cmp	r4, #1
 1410 0020 01D1     		bne	.L163
 1411 0022 0223     		movs	r3, #2
 1412              	.LVL108:
 1413 0024 F5E7     		b	.L148
 1414              	.LVL109:
 1415              	.L163:
 1416 0026 9846     		mov	r8, r3
 1417 0028 1746     		mov	r7, r2
 1418 002a 0D46     		mov	r5, r1
 1419 002c 0446     		mov	r4, r0
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1420              		.loc 1 1067 0 is_stmt 0 discriminator 2
 1421 002e 4FF00109 		mov	r9, #1
 1422 0032 80F84090 		strb	r9, [r0, #64]
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1423              		.loc 1 1070 0 is_stmt 1 discriminator 2
 1424 0036 FFF7FEFF 		bl	HAL_GetTick
 1425              	.LVL110:
 1426 003a 0646     		mov	r6, r0
 1427              	.LVL111:
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1428              		.loc 1 1072 0 discriminator 2
 1429 003c 0090     		str	r0, [sp]
 1430 003e 1923     		movs	r3, #25
 1431 0040 4A46     		mov	r2, r9
 1432 0042 4FF40041 		mov	r1, #32768
ARM GAS  /tmp/cc1k1gAU.s 			page 143


 1433 0046 2046     		mov	r0, r4
 1434              	.LVL112:
 1435 0048 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1436              	.LVL113:
 1437 004c 0028     		cmp	r0, #0
 1438 004e 40F08980 		bne	.L157
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1439              		.loc 1 1077 0
 1440 0052 2123     		movs	r3, #33
 1441 0054 84F84130 		strb	r3, [r4, #65]
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1442              		.loc 1 1078 0
 1443 0058 1023     		movs	r3, #16
 1444 005a 84F84230 		strb	r3, [r4, #66]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1445              		.loc 1 1079 0
 1446 005e 0023     		movs	r3, #0
 1447 0060 6364     		str	r3, [r4, #68]
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1448              		.loc 1 1082 0
 1449 0062 6762     		str	r7, [r4, #36]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1450              		.loc 1 1083 0
 1451 0064 A4F82A80 		strh	r8, [r4, #42]	@ movhi
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1452              		.loc 1 1084 0
 1453 0068 6363     		str	r3, [r4, #52]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1454              		.loc 1 1088 0
 1455 006a 638D     		ldrh	r3, [r4, #42]
 1456 006c 9BB2     		uxth	r3, r3
 1457 006e FF2B     		cmp	r3, #255
 1458 0070 0AD9     		bls	.L149
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1459              		.loc 1 1090 0
 1460 0072 FF22     		movs	r2, #255
 1461 0074 2285     		strh	r2, [r4, #40]	@ movhi
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1462              		.loc 1 1091 0
 1463 0076 3F4B     		ldr	r3, .L165
 1464 0078 0093     		str	r3, [sp]
 1465 007a 4FF08073 		mov	r3, #16777216
 1466 007e 2946     		mov	r1, r5
 1467 0080 2046     		mov	r0, r4
 1468 0082 FFF7FEFF 		bl	I2C_TransferConfig
 1469              	.LVL114:
 1470 0086 18E0     		b	.L150
 1471              	.L149:
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1472              		.loc 1 1095 0
 1473 0088 628D     		ldrh	r2, [r4, #42]
 1474 008a 92B2     		uxth	r2, r2
 1475 008c 2285     		strh	r2, [r4, #40]	@ movhi
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1476              		.loc 1 1096 0
 1477 008e 394B     		ldr	r3, .L165
 1478 0090 0093     		str	r3, [sp]
ARM GAS  /tmp/cc1k1gAU.s 			page 144


 1479 0092 4FF00073 		mov	r3, #33554432
 1480 0096 D2B2     		uxtb	r2, r2
 1481 0098 2946     		mov	r1, r5
 1482 009a 2046     		mov	r0, r4
 1483 009c FFF7FEFF 		bl	I2C_TransferConfig
 1484              	.LVL115:
 1485 00a0 0BE0     		b	.L150
 1486              	.L153:
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1487              		.loc 1 1130 0
 1488 00a2 628D     		ldrh	r2, [r4, #42]
 1489 00a4 92B2     		uxth	r2, r2
 1490 00a6 2285     		strh	r2, [r4, #40]	@ movhi
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1491              		.loc 1 1131 0
 1492 00a8 0023     		movs	r3, #0
 1493 00aa 0093     		str	r3, [sp]
 1494 00ac 4FF00073 		mov	r3, #33554432
 1495 00b0 D2B2     		uxtb	r2, r2
 1496 00b2 2946     		mov	r1, r5
 1497 00b4 2046     		mov	r0, r4
 1498 00b6 FFF7FEFF 		bl	I2C_TransferConfig
 1499              	.LVL116:
 1500              	.L150:
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1501              		.loc 1 1099 0
 1502 00ba 638D     		ldrh	r3, [r4, #42]
 1503 00bc 9BB2     		uxth	r3, r3
 1504 00be 002B     		cmp	r3, #0
 1505 00c0 33D0     		beq	.L164
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1506              		.loc 1 1102 0
 1507 00c2 3246     		mov	r2, r6
 1508 00c4 0A99     		ldr	r1, [sp, #40]
 1509 00c6 2046     		mov	r0, r4
 1510 00c8 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1511              	.LVL117:
 1512 00cc 0028     		cmp	r0, #0
 1513 00ce 4BD1     		bne	.L158
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1514              		.loc 1 1107 0
 1515 00d0 2368     		ldr	r3, [r4]
 1516 00d2 626A     		ldr	r2, [r4, #36]
 1517 00d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1518 00d6 9A62     		str	r2, [r3, #40]
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1519              		.loc 1 1110 0
 1520 00d8 636A     		ldr	r3, [r4, #36]
 1521 00da 0133     		adds	r3, r3, #1
 1522 00dc 6362     		str	r3, [r4, #36]
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 1523              		.loc 1 1112 0
 1524 00de 638D     		ldrh	r3, [r4, #42]
 1525 00e0 9BB2     		uxth	r3, r3
 1526 00e2 013B     		subs	r3, r3, #1
 1527 00e4 9BB2     		uxth	r3, r3
 1528 00e6 6385     		strh	r3, [r4, #42]	@ movhi
ARM GAS  /tmp/cc1k1gAU.s 			page 145


1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1529              		.loc 1 1113 0
 1530 00e8 238D     		ldrh	r3, [r4, #40]
 1531 00ea 013B     		subs	r3, r3, #1
 1532 00ec 9BB2     		uxth	r3, r3
 1533 00ee 2385     		strh	r3, [r4, #40]	@ movhi
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1534              		.loc 1 1115 0
 1535 00f0 628D     		ldrh	r2, [r4, #42]
 1536 00f2 92B2     		uxth	r2, r2
 1537 00f4 002A     		cmp	r2, #0
 1538 00f6 E0D0     		beq	.L150
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1539              		.loc 1 1115 0 is_stmt 0 discriminator 1
 1540 00f8 002B     		cmp	r3, #0
 1541 00fa DED1     		bne	.L150
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1542              		.loc 1 1118 0 is_stmt 1
 1543 00fc 0096     		str	r6, [sp]
 1544 00fe 0A9B     		ldr	r3, [sp, #40]
 1545 0100 0022     		movs	r2, #0
 1546 0102 8021     		movs	r1, #128
 1547 0104 2046     		mov	r0, r4
 1548 0106 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1549              	.LVL118:
 1550 010a 78BB     		cbnz	r0, .L159
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1551              		.loc 1 1123 0
 1552 010c 638D     		ldrh	r3, [r4, #42]
 1553 010e 9BB2     		uxth	r3, r3
 1554 0110 FF2B     		cmp	r3, #255
 1555 0112 C6D9     		bls	.L153
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1556              		.loc 1 1125 0
 1557 0114 FF22     		movs	r2, #255
 1558 0116 2285     		strh	r2, [r4, #40]	@ movhi
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1559              		.loc 1 1126 0
 1560 0118 0023     		movs	r3, #0
 1561 011a 0093     		str	r3, [sp]
 1562 011c 4FF08073 		mov	r3, #16777216
 1563 0120 2946     		mov	r1, r5
 1564 0122 2046     		mov	r0, r4
 1565 0124 FFF7FEFF 		bl	I2C_TransferConfig
 1566              	.LVL119:
 1567 0128 C7E7     		b	.L150
 1568              	.L164:
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1569              		.loc 1 1138 0
 1570 012a 3246     		mov	r2, r6
 1571 012c 0A99     		ldr	r1, [sp, #40]
 1572 012e 2046     		mov	r0, r4
 1573 0130 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1574              	.LVL120:
 1575 0134 0346     		mov	r3, r0
 1576 0136 D8B9     		cbnz	r0, .L160
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 146


 1577              		.loc 1 1144 0
 1578 0138 2268     		ldr	r2, [r4]
 1579 013a 2021     		movs	r1, #32
 1580 013c D161     		str	r1, [r2, #28]
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1581              		.loc 1 1147 0
 1582 013e 2068     		ldr	r0, [r4]
 1583 0140 4268     		ldr	r2, [r0, #4]
 1584 0142 22F0FF72 		bic	r2, r2, #33423360
 1585 0146 22F48B32 		bic	r2, r2, #71168
 1586 014a 22F4FF72 		bic	r2, r2, #510
 1587 014e 22F00102 		bic	r2, r2, #1
 1588 0152 4260     		str	r2, [r0, #4]
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1589              		.loc 1 1149 0
 1590 0154 84F84110 		strb	r1, [r4, #65]
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1591              		.loc 1 1150 0
 1592 0158 0022     		movs	r2, #0
 1593 015a 84F84220 		strb	r2, [r4, #66]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1594              		.loc 1 1153 0
 1595 015e 84F84020 		strb	r2, [r4, #64]
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1596              		.loc 1 1155 0
 1597 0162 56E7     		b	.L148
 1598              	.L157:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1599              		.loc 1 1074 0
 1600 0164 0123     		movs	r3, #1
 1601 0166 54E7     		b	.L148
 1602              	.L158:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1603              		.loc 1 1104 0
 1604 0168 0123     		movs	r3, #1
 1605 016a 52E7     		b	.L148
 1606              	.L159:
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1607              		.loc 1 1120 0
 1608 016c 0123     		movs	r3, #1
 1609 016e 50E7     		b	.L148
 1610              	.L160:
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1611              		.loc 1 1140 0
 1612 0170 0123     		movs	r3, #1
 1613 0172 4EE7     		b	.L148
 1614              	.L166:
 1615              		.align	2
 1616              	.L165:
 1617 0174 00200080 		.word	-2147475456
 1618              		.cfi_endproc
 1619              	.LFE145:
 1621              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1622              		.align	1
 1623              		.global	HAL_I2C_Master_Receive
 1624              		.syntax unified
 1625              		.thumb
ARM GAS  /tmp/cc1k1gAU.s 			page 147


 1626              		.thumb_func
 1627              		.fpu fpv5-sp-d16
 1629              	HAL_I2C_Master_Receive:
 1630              	.LFB146:
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1631              		.loc 1 1175 0
 1632              		.cfi_startproc
 1633              		@ args = 4, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL121:
 1636 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1637              	.LCFI27:
 1638              		.cfi_def_cfa_offset 28
 1639              		.cfi_offset 4, -28
 1640              		.cfi_offset 5, -24
 1641              		.cfi_offset 6, -20
 1642              		.cfi_offset 7, -16
 1643              		.cfi_offset 8, -12
 1644              		.cfi_offset 9, -8
 1645              		.cfi_offset 14, -4
 1646 0004 83B0     		sub	sp, sp, #12
 1647              	.LCFI28:
 1648              		.cfi_def_cfa_offset 40
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1649              		.loc 1 1178 0
 1650 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1651 000a EDB2     		uxtb	r5, r5
 1652 000c 202D     		cmp	r5, #32
 1653 000e 04D0     		beq	.L182
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1654              		.loc 1 1274 0
 1655 0010 0223     		movs	r3, #2
 1656              	.LVL122:
 1657              	.L168:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1658              		.loc 1 1276 0
 1659 0012 1846     		mov	r0, r3
 1660 0014 03B0     		add	sp, sp, #12
 1661              	.LCFI29:
 1662              		.cfi_remember_state
 1663              		.cfi_def_cfa_offset 28
 1664              		@ sp needed
 1665 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1666              	.LVL123:
 1667              	.L182:
 1668              	.LCFI30:
 1669              		.cfi_restore_state
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1670              		.loc 1 1181 0
 1671 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1672 001e 012C     		cmp	r4, #1
 1673 0020 01D1     		bne	.L183
 1674 0022 0223     		movs	r3, #2
 1675              	.LVL124:
 1676 0024 F5E7     		b	.L168
 1677              	.LVL125:
 1678              	.L183:
ARM GAS  /tmp/cc1k1gAU.s 			page 148


 1679 0026 9846     		mov	r8, r3
 1680 0028 1746     		mov	r7, r2
 1681 002a 0D46     		mov	r5, r1
 1682 002c 0446     		mov	r4, r0
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1683              		.loc 1 1181 0 is_stmt 0 discriminator 2
 1684 002e 4FF00109 		mov	r9, #1
 1685 0032 80F84090 		strb	r9, [r0, #64]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1686              		.loc 1 1184 0 is_stmt 1 discriminator 2
 1687 0036 FFF7FEFF 		bl	HAL_GetTick
 1688              	.LVL126:
 1689 003a 0646     		mov	r6, r0
 1690              	.LVL127:
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1691              		.loc 1 1186 0 discriminator 2
 1692 003c 0090     		str	r0, [sp]
 1693 003e 1923     		movs	r3, #25
 1694 0040 4A46     		mov	r2, r9
 1695 0042 4FF40041 		mov	r1, #32768
 1696 0046 2046     		mov	r0, r4
 1697              	.LVL128:
 1698 0048 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1699              	.LVL129:
 1700 004c 0028     		cmp	r0, #0
 1701 004e 40F08880 		bne	.L177
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1702              		.loc 1 1191 0
 1703 0052 2223     		movs	r3, #34
 1704 0054 84F84130 		strb	r3, [r4, #65]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1705              		.loc 1 1192 0
 1706 0058 1023     		movs	r3, #16
 1707 005a 84F84230 		strb	r3, [r4, #66]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1708              		.loc 1 1193 0
 1709 005e 0023     		movs	r3, #0
 1710 0060 6364     		str	r3, [r4, #68]
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1711              		.loc 1 1196 0
 1712 0062 6762     		str	r7, [r4, #36]
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1713              		.loc 1 1197 0
 1714 0064 A4F82A80 		strh	r8, [r4, #42]	@ movhi
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1715              		.loc 1 1198 0
 1716 0068 6363     		str	r3, [r4, #52]
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1717              		.loc 1 1202 0
 1718 006a 638D     		ldrh	r3, [r4, #42]
 1719 006c 9BB2     		uxth	r3, r3
 1720 006e FF2B     		cmp	r3, #255
 1721 0070 0AD9     		bls	.L169
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1722              		.loc 1 1204 0
 1723 0072 FF22     		movs	r2, #255
 1724 0074 2285     		strh	r2, [r4, #40]	@ movhi
ARM GAS  /tmp/cc1k1gAU.s 			page 149


1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1725              		.loc 1 1205 0
 1726 0076 3F4B     		ldr	r3, .L185
 1727 0078 0093     		str	r3, [sp]
 1728 007a 4FF08073 		mov	r3, #16777216
 1729 007e 2946     		mov	r1, r5
 1730 0080 2046     		mov	r0, r4
 1731 0082 FFF7FEFF 		bl	I2C_TransferConfig
 1732              	.LVL130:
 1733 0086 18E0     		b	.L170
 1734              	.L169:
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1735              		.loc 1 1209 0
 1736 0088 628D     		ldrh	r2, [r4, #42]
 1737 008a 92B2     		uxth	r2, r2
 1738 008c 2285     		strh	r2, [r4, #40]	@ movhi
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1739              		.loc 1 1210 0
 1740 008e 394B     		ldr	r3, .L185
 1741 0090 0093     		str	r3, [sp]
 1742 0092 4FF00073 		mov	r3, #33554432
 1743 0096 D2B2     		uxtb	r2, r2
 1744 0098 2946     		mov	r1, r5
 1745 009a 2046     		mov	r0, r4
 1746 009c FFF7FEFF 		bl	I2C_TransferConfig
 1747              	.LVL131:
 1748 00a0 0BE0     		b	.L170
 1749              	.L173:
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1750              		.loc 1 1245 0
 1751 00a2 628D     		ldrh	r2, [r4, #42]
 1752 00a4 92B2     		uxth	r2, r2
 1753 00a6 2285     		strh	r2, [r4, #40]	@ movhi
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1754              		.loc 1 1246 0
 1755 00a8 0023     		movs	r3, #0
 1756 00aa 0093     		str	r3, [sp]
 1757 00ac 4FF00073 		mov	r3, #33554432
 1758 00b0 D2B2     		uxtb	r2, r2
 1759 00b2 2946     		mov	r1, r5
 1760 00b4 2046     		mov	r0, r4
 1761 00b6 FFF7FEFF 		bl	I2C_TransferConfig
 1762              	.LVL132:
 1763              	.L170:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1764              		.loc 1 1213 0
 1765 00ba 638D     		ldrh	r3, [r4, #42]
 1766 00bc 9BB2     		uxth	r3, r3
 1767 00be 002B     		cmp	r3, #0
 1768 00c0 32D0     		beq	.L184
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1769              		.loc 1 1216 0
 1770 00c2 3246     		mov	r2, r6
 1771 00c4 0A99     		ldr	r1, [sp, #40]
 1772 00c6 2046     		mov	r0, r4
 1773 00c8 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1774              	.LVL133:
ARM GAS  /tmp/cc1k1gAU.s 			page 150


 1775 00cc 0028     		cmp	r0, #0
 1776 00ce 4AD1     		bne	.L178
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1777              		.loc 1 1222 0
 1778 00d0 636A     		ldr	r3, [r4, #36]
 1779 00d2 2268     		ldr	r2, [r4]
 1780 00d4 526A     		ldr	r2, [r2, #36]
 1781 00d6 1A70     		strb	r2, [r3]
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1782              		.loc 1 1225 0
 1783 00d8 636A     		ldr	r3, [r4, #36]
 1784 00da 0133     		adds	r3, r3, #1
 1785 00dc 6362     		str	r3, [r4, #36]
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 1786              		.loc 1 1227 0
 1787 00de 228D     		ldrh	r2, [r4, #40]
 1788 00e0 013A     		subs	r2, r2, #1
 1789 00e2 92B2     		uxth	r2, r2
 1790 00e4 2285     		strh	r2, [r4, #40]	@ movhi
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1791              		.loc 1 1228 0
 1792 00e6 638D     		ldrh	r3, [r4, #42]
 1793 00e8 9BB2     		uxth	r3, r3
 1794 00ea 013B     		subs	r3, r3, #1
 1795 00ec 9BB2     		uxth	r3, r3
 1796 00ee 6385     		strh	r3, [r4, #42]	@ movhi
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1797              		.loc 1 1230 0
 1798 00f0 638D     		ldrh	r3, [r4, #42]
 1799 00f2 9BB2     		uxth	r3, r3
 1800 00f4 002B     		cmp	r3, #0
 1801 00f6 E0D0     		beq	.L170
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1802              		.loc 1 1230 0 is_stmt 0 discriminator 1
 1803 00f8 002A     		cmp	r2, #0
 1804 00fa DED1     		bne	.L170
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1805              		.loc 1 1233 0 is_stmt 1
 1806 00fc 0096     		str	r6, [sp]
 1807 00fe 0A9B     		ldr	r3, [sp, #40]
 1808 0100 8021     		movs	r1, #128
 1809 0102 2046     		mov	r0, r4
 1810 0104 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1811              	.LVL134:
 1812 0108 78BB     		cbnz	r0, .L179
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1813              		.loc 1 1238 0
 1814 010a 638D     		ldrh	r3, [r4, #42]
 1815 010c 9BB2     		uxth	r3, r3
 1816 010e FF2B     		cmp	r3, #255
 1817 0110 C7D9     		bls	.L173
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1818              		.loc 1 1240 0
 1819 0112 FF22     		movs	r2, #255
 1820 0114 2285     		strh	r2, [r4, #40]	@ movhi
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1821              		.loc 1 1241 0
ARM GAS  /tmp/cc1k1gAU.s 			page 151


 1822 0116 0023     		movs	r3, #0
 1823 0118 0093     		str	r3, [sp]
 1824 011a 4FF08073 		mov	r3, #16777216
 1825 011e 2946     		mov	r1, r5
 1826 0120 2046     		mov	r0, r4
 1827 0122 FFF7FEFF 		bl	I2C_TransferConfig
 1828              	.LVL135:
 1829 0126 C8E7     		b	.L170
 1830              	.L184:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1831              		.loc 1 1253 0
 1832 0128 3246     		mov	r2, r6
 1833 012a 0A99     		ldr	r1, [sp, #40]
 1834 012c 2046     		mov	r0, r4
 1835 012e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1836              	.LVL136:
 1837 0132 0346     		mov	r3, r0
 1838 0134 D8B9     		cbnz	r0, .L180
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1839              		.loc 1 1259 0
 1840 0136 2268     		ldr	r2, [r4]
 1841 0138 2021     		movs	r1, #32
 1842 013a D161     		str	r1, [r2, #28]
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1843              		.loc 1 1262 0
 1844 013c 2068     		ldr	r0, [r4]
 1845 013e 4268     		ldr	r2, [r0, #4]
 1846 0140 22F0FF72 		bic	r2, r2, #33423360
 1847 0144 22F48B32 		bic	r2, r2, #71168
 1848 0148 22F4FF72 		bic	r2, r2, #510
 1849 014c 22F00102 		bic	r2, r2, #1
 1850 0150 4260     		str	r2, [r0, #4]
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1851              		.loc 1 1264 0
 1852 0152 84F84110 		strb	r1, [r4, #65]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1853              		.loc 1 1265 0
 1854 0156 0022     		movs	r2, #0
 1855 0158 84F84220 		strb	r2, [r4, #66]
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1856              		.loc 1 1268 0
 1857 015c 84F84020 		strb	r2, [r4, #64]
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1858              		.loc 1 1270 0
 1859 0160 57E7     		b	.L168
 1860              	.L177:
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1861              		.loc 1 1188 0
 1862 0162 0123     		movs	r3, #1
 1863 0164 55E7     		b	.L168
 1864              	.L178:
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1865              		.loc 1 1218 0
 1866 0166 0123     		movs	r3, #1
 1867 0168 53E7     		b	.L168
 1868              	.L179:
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
ARM GAS  /tmp/cc1k1gAU.s 			page 152


 1869              		.loc 1 1235 0
 1870 016a 0123     		movs	r3, #1
 1871 016c 51E7     		b	.L168
 1872              	.L180:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1873              		.loc 1 1255 0
 1874 016e 0123     		movs	r3, #1
 1875 0170 4FE7     		b	.L168
 1876              	.L186:
 1877 0172 00BF     		.align	2
 1878              	.L185:
 1879 0174 00240080 		.word	-2147474432
 1880              		.cfi_endproc
 1881              	.LFE146:
 1883              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1884              		.align	1
 1885              		.global	HAL_I2C_Slave_Transmit
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1889              		.fpu fpv5-sp-d16
 1891              	HAL_I2C_Slave_Transmit:
 1892              	.LFB147:
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1893              		.loc 1 1288 0
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 0
 1896              		@ frame_needed = 0, uses_anonymous_args = 0
 1897              	.LVL137:
 1898 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1899              	.LCFI31:
 1900              		.cfi_def_cfa_offset 24
 1901              		.cfi_offset 4, -24
 1902              		.cfi_offset 5, -20
 1903              		.cfi_offset 6, -16
 1904              		.cfi_offset 7, -12
 1905              		.cfi_offset 8, -8
 1906              		.cfi_offset 14, -4
 1907 0004 82B0     		sub	sp, sp, #8
 1908              	.LCFI32:
 1909              		.cfi_def_cfa_offset 32
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1910              		.loc 1 1291 0
 1911 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 1912 000a E4B2     		uxtb	r4, r4
 1913 000c 202C     		cmp	r4, #32
 1914 000e 04D0     		beq	.L202
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1915              		.loc 1 1411 0
 1916 0010 0223     		movs	r3, #2
 1917              	.LVL138:
 1918              	.L188:
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1919              		.loc 1 1413 0
 1920 0012 1846     		mov	r0, r3
 1921 0014 02B0     		add	sp, sp, #8
 1922              	.LCFI33:
ARM GAS  /tmp/cc1k1gAU.s 			page 153


 1923              		.cfi_remember_state
 1924              		.cfi_def_cfa_offset 24
 1925              		@ sp needed
 1926 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1927              	.LVL139:
 1928              	.L202:
 1929              	.LCFI34:
 1930              		.cfi_restore_state
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1931              		.loc 1 1293 0
 1932 001a 002A     		cmp	r2, #0
 1933 001c 18BF     		it	ne
 1934 001e 0029     		cmpne	r1, #0
 1935 0020 05D0     		beq	.L203
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1936              		.loc 1 1299 0
 1937 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1938 0026 012C     		cmp	r4, #1
 1939 0028 06D1     		bne	.L204
 1940 002a 0223     		movs	r3, #2
 1941              	.LVL140:
 1942 002c F1E7     		b	.L188
 1943              	.LVL141:
 1944              	.L203:
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 1945              		.loc 1 1295 0
 1946 002e 4FF40073 		mov	r3, #512
 1947              	.LVL142:
 1948 0032 4364     		str	r3, [r0, #68]
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1949              		.loc 1 1296 0
 1950 0034 0123     		movs	r3, #1
 1951 0036 ECE7     		b	.L188
 1952              	.LVL143:
 1953              	.L204:
 1954 0038 1F46     		mov	r7, r3
 1955 003a 1646     		mov	r6, r2
 1956 003c 0D46     		mov	r5, r1
 1957 003e 0446     		mov	r4, r0
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1958              		.loc 1 1299 0 discriminator 2
 1959 0040 0123     		movs	r3, #1
 1960              	.LVL144:
 1961 0042 80F84030 		strb	r3, [r0, #64]
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1962              		.loc 1 1302 0 discriminator 2
 1963 0046 FFF7FEFF 		bl	HAL_GetTick
 1964              	.LVL145:
 1965 004a 8046     		mov	r8, r0
 1966              	.LVL146:
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1967              		.loc 1 1304 0 discriminator 2
 1968 004c 2123     		movs	r3, #33
 1969 004e 84F84130 		strb	r3, [r4, #65]
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1970              		.loc 1 1305 0 discriminator 2
 1971 0052 2023     		movs	r3, #32
ARM GAS  /tmp/cc1k1gAU.s 			page 154


 1972 0054 84F84230 		strb	r3, [r4, #66]
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1973              		.loc 1 1306 0 discriminator 2
 1974 0058 0022     		movs	r2, #0
 1975 005a 6264     		str	r2, [r4, #68]
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1976              		.loc 1 1309 0 discriminator 2
 1977 005c 6562     		str	r5, [r4, #36]
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1978              		.loc 1 1310 0 discriminator 2
 1979 005e 6685     		strh	r6, [r4, #42]	@ movhi
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1980              		.loc 1 1311 0 discriminator 2
 1981 0060 6263     		str	r2, [r4, #52]
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1982              		.loc 1 1314 0 discriminator 2
 1983 0062 2168     		ldr	r1, [r4]
 1984 0064 4B68     		ldr	r3, [r1, #4]
 1985 0066 23F40043 		bic	r3, r3, #32768
 1986 006a 4B60     		str	r3, [r1, #4]
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1987              		.loc 1 1317 0 discriminator 2
 1988 006c 0090     		str	r0, [sp]
 1989 006e 3B46     		mov	r3, r7
 1990 0070 0821     		movs	r1, #8
 1991 0072 2046     		mov	r0, r4
 1992              	.LVL147:
 1993 0074 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1994              	.LVL148:
 1995 0078 40BB     		cbnz	r0, .L205
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1996              		.loc 1 1325 0
 1997 007a 2368     		ldr	r3, [r4]
 1998 007c 0822     		movs	r2, #8
 1999 007e DA61     		str	r2, [r3, #28]
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2000              		.loc 1 1328 0
 2001 0080 E368     		ldr	r3, [r4, #12]
 2002 0082 022B     		cmp	r3, #2
 2003 0084 29D0     		beq	.L206
 2004              	.L191:
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2005              		.loc 1 1343 0
 2006 0086 CDF80080 		str	r8, [sp]
 2007 008a 3B46     		mov	r3, r7
 2008 008c 0022     		movs	r2, #0
 2009 008e 4FF48031 		mov	r1, #65536
 2010 0092 2046     		mov	r0, r4
 2011 0094 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2012              	.LVL149:
 2013 0098 0028     		cmp	r0, #0
 2014 009a 32D1     		bne	.L207
 2015              	.L193:
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2016              		.loc 1 1350 0
 2017 009c 638D     		ldrh	r3, [r4, #42]
 2018 009e 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc1k1gAU.s 			page 155


 2019 00a0 002B     		cmp	r3, #0
 2020 00a2 3CD0     		beq	.L208
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2021              		.loc 1 1353 0
 2022 00a4 4246     		mov	r2, r8
 2023 00a6 3946     		mov	r1, r7
 2024 00a8 2046     		mov	r0, r4
 2025 00aa FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2026              	.LVL150:
 2027 00ae 0028     		cmp	r0, #0
 2028 00b0 2ED1     		bne	.L209
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2029              		.loc 1 1361 0
 2030 00b2 2368     		ldr	r3, [r4]
 2031 00b4 626A     		ldr	r2, [r4, #36]
 2032 00b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2033 00b8 9A62     		str	r2, [r3, #40]
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2034              		.loc 1 1364 0
 2035 00ba 636A     		ldr	r3, [r4, #36]
 2036 00bc 0133     		adds	r3, r3, #1
 2037 00be 6362     		str	r3, [r4, #36]
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2038              		.loc 1 1366 0
 2039 00c0 638D     		ldrh	r3, [r4, #42]
 2040 00c2 9BB2     		uxth	r3, r3
 2041 00c4 013B     		subs	r3, r3, #1
 2042 00c6 9BB2     		uxth	r3, r3
 2043 00c8 6385     		strh	r3, [r4, #42]	@ movhi
 2044 00ca E7E7     		b	.L193
 2045              	.L205:
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2046              		.loc 1 1320 0
 2047 00cc 2268     		ldr	r2, [r4]
 2048 00ce 5368     		ldr	r3, [r2, #4]
 2049 00d0 43F40043 		orr	r3, r3, #32768
 2050 00d4 5360     		str	r3, [r2, #4]
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2051              		.loc 1 1321 0
 2052 00d6 0123     		movs	r3, #1
 2053 00d8 9BE7     		b	.L188
 2054              	.L206:
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2055              		.loc 1 1331 0
 2056 00da CDF80080 		str	r8, [sp]
 2057 00de 3B46     		mov	r3, r7
 2058 00e0 0022     		movs	r2, #0
 2059 00e2 0821     		movs	r1, #8
 2060 00e4 2046     		mov	r0, r4
 2061 00e6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2062              	.LVL151:
 2063 00ea 18B9     		cbnz	r0, .L210
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2064              		.loc 1 1339 0
 2065 00ec 2368     		ldr	r3, [r4]
 2066 00ee 0822     		movs	r2, #8
 2067 00f0 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/cc1k1gAU.s 			page 156


 2068 00f2 C8E7     		b	.L191
 2069              	.L210:
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2070              		.loc 1 1334 0
 2071 00f4 2268     		ldr	r2, [r4]
 2072 00f6 5368     		ldr	r3, [r2, #4]
 2073 00f8 43F40043 		orr	r3, r3, #32768
 2074 00fc 5360     		str	r3, [r2, #4]
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2075              		.loc 1 1335 0
 2076 00fe 0123     		movs	r3, #1
 2077 0100 87E7     		b	.L188
 2078              	.L207:
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2079              		.loc 1 1346 0
 2080 0102 2268     		ldr	r2, [r4]
 2081 0104 5368     		ldr	r3, [r2, #4]
 2082 0106 43F40043 		orr	r3, r3, #32768
 2083 010a 5360     		str	r3, [r2, #4]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2084              		.loc 1 1347 0
 2085 010c 0123     		movs	r3, #1
 2086 010e 80E7     		b	.L188
 2087              	.L209:
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2088              		.loc 1 1356 0
 2089 0110 2268     		ldr	r2, [r4]
 2090 0112 5368     		ldr	r3, [r2, #4]
 2091 0114 43F40043 		orr	r3, r3, #32768
 2092 0118 5360     		str	r3, [r2, #4]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2093              		.loc 1 1357 0
 2094 011a 0123     		movs	r3, #1
 2095 011c 79E7     		b	.L188
 2096              	.L208:
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2097              		.loc 1 1370 0
 2098 011e 4246     		mov	r2, r8
 2099 0120 3946     		mov	r1, r7
 2100 0122 2046     		mov	r0, r4
 2101 0124 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2102              	.LVL152:
 2103 0128 58B1     		cbz	r0, .L196
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2104              		.loc 1 1373 0
 2105 012a 2268     		ldr	r2, [r4]
 2106 012c 5368     		ldr	r3, [r2, #4]
 2107 012e 43F40043 		orr	r3, r3, #32768
 2108 0132 5360     		str	r3, [r2, #4]
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2109              		.loc 1 1375 0
 2110 0134 636C     		ldr	r3, [r4, #68]
 2111 0136 042B     		cmp	r3, #4
 2112 0138 01D0     		beq	.L211
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2113              		.loc 1 1383 0
 2114 013a 0123     		movs	r3, #1
ARM GAS  /tmp/cc1k1gAU.s 			page 157


 2115 013c 69E7     		b	.L188
 2116              	.L211:
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2117              		.loc 1 1379 0
 2118 013e 0023     		movs	r3, #0
 2119 0140 6364     		str	r3, [r4, #68]
 2120              	.L196:
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2121              		.loc 1 1388 0
 2122 0142 2368     		ldr	r3, [r4]
 2123 0144 2022     		movs	r2, #32
 2124 0146 DA61     		str	r2, [r3, #28]
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2125              		.loc 1 1391 0
 2126 0148 CDF80080 		str	r8, [sp]
 2127 014c 3B46     		mov	r3, r7
 2128 014e 0122     		movs	r2, #1
 2129 0150 4FF40041 		mov	r1, #32768
 2130 0154 2046     		mov	r0, r4
 2131 0156 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2132              	.LVL153:
 2133 015a 0346     		mov	r3, r0
 2134 015c 68B9     		cbnz	r0, .L212
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2135              		.loc 1 1399 0
 2136 015e 2168     		ldr	r1, [r4]
 2137 0160 4A68     		ldr	r2, [r1, #4]
 2138 0162 42F40042 		orr	r2, r2, #32768
 2139 0166 4A60     		str	r2, [r1, #4]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2140              		.loc 1 1401 0
 2141 0168 2022     		movs	r2, #32
 2142 016a 84F84120 		strb	r2, [r4, #65]
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2143              		.loc 1 1402 0
 2144 016e 0022     		movs	r2, #0
 2145 0170 84F84220 		strb	r2, [r4, #66]
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2146              		.loc 1 1405 0
 2147 0174 84F84020 		strb	r2, [r4, #64]
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2148              		.loc 1 1407 0
 2149 0178 4BE7     		b	.L188
 2150              	.L212:
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2151              		.loc 1 1394 0
 2152 017a 2268     		ldr	r2, [r4]
 2153 017c 5368     		ldr	r3, [r2, #4]
 2154 017e 43F40043 		orr	r3, r3, #32768
 2155 0182 5360     		str	r3, [r2, #4]
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2156              		.loc 1 1395 0
 2157 0184 0123     		movs	r3, #1
 2158 0186 44E7     		b	.L188
 2159              		.cfi_endproc
 2160              	.LFE147:
 2162              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
ARM GAS  /tmp/cc1k1gAU.s 			page 158


 2163              		.align	1
 2164              		.global	HAL_I2C_Slave_Receive
 2165              		.syntax unified
 2166              		.thumb
 2167              		.thumb_func
 2168              		.fpu fpv5-sp-d16
 2170              	HAL_I2C_Slave_Receive:
 2171              	.LFB148:
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 2172              		.loc 1 1425 0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 2176              	.LVL154:
 2177 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2178              	.LCFI35:
 2179              		.cfi_def_cfa_offset 24
 2180              		.cfi_offset 4, -24
 2181              		.cfi_offset 5, -20
 2182              		.cfi_offset 6, -16
 2183              		.cfi_offset 7, -12
 2184              		.cfi_offset 8, -8
 2185              		.cfi_offset 14, -4
 2186 0004 82B0     		sub	sp, sp, #8
 2187              	.LCFI36:
 2188              		.cfi_def_cfa_offset 32
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2189              		.loc 1 1428 0
 2190 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2191 000a E4B2     		uxtb	r4, r4
 2192 000c 202C     		cmp	r4, #32
 2193 000e 04D0     		beq	.L226
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2194              		.loc 1 1536 0
 2195 0010 0223     		movs	r3, #2
 2196              	.LVL155:
 2197              	.L214:
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2198              		.loc 1 1538 0
 2199 0012 1846     		mov	r0, r3
 2200 0014 02B0     		add	sp, sp, #8
 2201              	.LCFI37:
 2202              		.cfi_remember_state
 2203              		.cfi_def_cfa_offset 24
 2204              		@ sp needed
 2205 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2206              	.LVL156:
 2207              	.L226:
 2208              	.LCFI38:
 2209              		.cfi_restore_state
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2210              		.loc 1 1430 0
 2211 001a 002A     		cmp	r2, #0
 2212 001c 18BF     		it	ne
 2213 001e 0029     		cmpne	r1, #0
 2214 0020 05D0     		beq	.L227
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 159


 2215              		.loc 1 1436 0
 2216 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2217 0026 012C     		cmp	r4, #1
 2218 0028 06D1     		bne	.L228
 2219 002a 0223     		movs	r3, #2
 2220              	.LVL157:
 2221 002c F1E7     		b	.L214
 2222              	.LVL158:
 2223              	.L227:
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 2224              		.loc 1 1432 0
 2225 002e 4FF40073 		mov	r3, #512
 2226              	.LVL159:
 2227 0032 4364     		str	r3, [r0, #68]
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2228              		.loc 1 1433 0
 2229 0034 0123     		movs	r3, #1
 2230 0036 ECE7     		b	.L214
 2231              	.LVL160:
 2232              	.L228:
 2233 0038 1F46     		mov	r7, r3
 2234 003a 1646     		mov	r6, r2
 2235 003c 0D46     		mov	r5, r1
 2236 003e 0446     		mov	r4, r0
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2237              		.loc 1 1436 0 discriminator 2
 2238 0040 0123     		movs	r3, #1
 2239              	.LVL161:
 2240 0042 80F84030 		strb	r3, [r0, #64]
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2241              		.loc 1 1439 0 discriminator 2
 2242 0046 FFF7FEFF 		bl	HAL_GetTick
 2243              	.LVL162:
 2244 004a 8046     		mov	r8, r0
 2245              	.LVL163:
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2246              		.loc 1 1441 0 discriminator 2
 2247 004c 2223     		movs	r3, #34
 2248 004e 84F84130 		strb	r3, [r4, #65]
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2249              		.loc 1 1442 0 discriminator 2
 2250 0052 2023     		movs	r3, #32
 2251 0054 84F84230 		strb	r3, [r4, #66]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2252              		.loc 1 1443 0 discriminator 2
 2253 0058 0022     		movs	r2, #0
 2254 005a 6264     		str	r2, [r4, #68]
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2255              		.loc 1 1446 0 discriminator 2
 2256 005c 6562     		str	r5, [r4, #36]
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2257              		.loc 1 1447 0 discriminator 2
 2258 005e 6685     		strh	r6, [r4, #42]	@ movhi
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2259              		.loc 1 1448 0 discriminator 2
 2260 0060 6263     		str	r2, [r4, #52]
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 160


 2261              		.loc 1 1451 0 discriminator 2
 2262 0062 2168     		ldr	r1, [r4]
 2263 0064 4B68     		ldr	r3, [r1, #4]
 2264 0066 23F40043 		bic	r3, r3, #32768
 2265 006a 4B60     		str	r3, [r1, #4]
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2266              		.loc 1 1454 0 discriminator 2
 2267 006c 0090     		str	r0, [sp]
 2268 006e 3B46     		mov	r3, r7
 2269 0070 0821     		movs	r1, #8
 2270 0072 2046     		mov	r0, r4
 2271              	.LVL164:
 2272 0074 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2273              	.LVL165:
 2274 0078 30B1     		cbz	r0, .L216
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2275              		.loc 1 1457 0
 2276 007a 2268     		ldr	r2, [r4]
 2277 007c 5368     		ldr	r3, [r2, #4]
 2278 007e 43F40043 		orr	r3, r3, #32768
 2279 0082 5360     		str	r3, [r2, #4]
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2280              		.loc 1 1458 0
 2281 0084 0123     		movs	r3, #1
 2282 0086 C4E7     		b	.L214
 2283              	.L216:
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2284              		.loc 1 1462 0
 2285 0088 2368     		ldr	r3, [r4]
 2286 008a 0822     		movs	r2, #8
 2287 008c DA61     		str	r2, [r3, #28]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2288              		.loc 1 1465 0
 2289 008e CDF80080 		str	r8, [sp]
 2290 0092 3B46     		mov	r3, r7
 2291 0094 0122     		movs	r2, #1
 2292 0096 4FF48031 		mov	r1, #65536
 2293 009a 2046     		mov	r0, r4
 2294 009c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2295              	.LVL166:
 2296 00a0 B0B9     		cbnz	r0, .L229
 2297              	.L217:
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2298              		.loc 1 1472 0
 2299 00a2 638D     		ldrh	r3, [r4, #42]
 2300 00a4 9BB2     		uxth	r3, r3
 2301 00a6 002B     		cmp	r3, #0
 2302 00a8 30D0     		beq	.L230
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2303              		.loc 1 1475 0
 2304 00aa 4246     		mov	r2, r8
 2305 00ac 3946     		mov	r1, r7
 2306 00ae 2046     		mov	r0, r4
 2307 00b0 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2308              	.LVL167:
 2309 00b4 98B9     		cbnz	r0, .L231
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 161


 2310              		.loc 1 1496 0
 2311 00b6 636A     		ldr	r3, [r4, #36]
 2312 00b8 2268     		ldr	r2, [r4]
 2313 00ba 526A     		ldr	r2, [r2, #36]
 2314 00bc 1A70     		strb	r2, [r3]
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2315              		.loc 1 1499 0
 2316 00be 636A     		ldr	r3, [r4, #36]
 2317 00c0 0133     		adds	r3, r3, #1
 2318 00c2 6362     		str	r3, [r4, #36]
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2319              		.loc 1 1501 0
 2320 00c4 638D     		ldrh	r3, [r4, #42]
 2321 00c6 9BB2     		uxth	r3, r3
 2322 00c8 013B     		subs	r3, r3, #1
 2323 00ca 9BB2     		uxth	r3, r3
 2324 00cc 6385     		strh	r3, [r4, #42]	@ movhi
 2325 00ce E8E7     		b	.L217
 2326              	.L229:
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2327              		.loc 1 1468 0
 2328 00d0 2268     		ldr	r2, [r4]
 2329 00d2 5368     		ldr	r3, [r2, #4]
 2330 00d4 43F40043 		orr	r3, r3, #32768
 2331 00d8 5360     		str	r3, [r2, #4]
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2332              		.loc 1 1469 0
 2333 00da 0123     		movs	r3, #1
 2334 00dc 99E7     		b	.L214
 2335              	.L231:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2336              		.loc 1 1478 0
 2337 00de 2268     		ldr	r2, [r4]
 2338 00e0 5368     		ldr	r3, [r2, #4]
 2339 00e2 43F40043 		orr	r3, r3, #32768
 2340 00e6 5360     		str	r3, [r2, #4]
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 2341              		.loc 1 1481 0
 2342 00e8 2368     		ldr	r3, [r4]
 2343 00ea 9A69     		ldr	r2, [r3, #24]
 2344 00ec 12F0040F 		tst	r2, #4
 2345 00f0 3CD0     		beq	.L224
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2346              		.loc 1 1484 0
 2347 00f2 626A     		ldr	r2, [r4, #36]
 2348 00f4 5B6A     		ldr	r3, [r3, #36]
 2349 00f6 1370     		strb	r3, [r2]
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2350              		.loc 1 1487 0
 2351 00f8 636A     		ldr	r3, [r4, #36]
 2352 00fa 0133     		adds	r3, r3, #1
 2353 00fc 6362     		str	r3, [r4, #36]
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2354              		.loc 1 1489 0
 2355 00fe 638D     		ldrh	r3, [r4, #42]
 2356 0100 9BB2     		uxth	r3, r3
 2357 0102 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cc1k1gAU.s 			page 162


 2358 0104 9BB2     		uxth	r3, r3
 2359 0106 6385     		strh	r3, [r4, #42]	@ movhi
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2360              		.loc 1 1492 0
 2361 0108 0123     		movs	r3, #1
 2362 010a 82E7     		b	.L214
 2363              	.L230:
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2364              		.loc 1 1505 0
 2365 010c 4246     		mov	r2, r8
 2366 010e 3946     		mov	r1, r7
 2367 0110 2046     		mov	r0, r4
 2368 0112 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2369              	.LVL168:
 2370 0116 30B1     		cbz	r0, .L220
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2371              		.loc 1 1508 0
 2372 0118 2268     		ldr	r2, [r4]
 2373 011a 5368     		ldr	r3, [r2, #4]
 2374 011c 43F40043 		orr	r3, r3, #32768
 2375 0120 5360     		str	r3, [r2, #4]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2376              		.loc 1 1509 0
 2377 0122 0123     		movs	r3, #1
 2378 0124 75E7     		b	.L214
 2379              	.L220:
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2380              		.loc 1 1513 0
 2381 0126 2368     		ldr	r3, [r4]
 2382 0128 2022     		movs	r2, #32
 2383 012a DA61     		str	r2, [r3, #28]
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2384              		.loc 1 1516 0
 2385 012c CDF80080 		str	r8, [sp]
 2386 0130 3B46     		mov	r3, r7
 2387 0132 0122     		movs	r2, #1
 2388 0134 4FF40041 		mov	r1, #32768
 2389 0138 2046     		mov	r0, r4
 2390 013a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2391              	.LVL169:
 2392 013e 0346     		mov	r3, r0
 2393 0140 68B9     		cbnz	r0, .L232
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2394              		.loc 1 1524 0
 2395 0142 2168     		ldr	r1, [r4]
 2396 0144 4A68     		ldr	r2, [r1, #4]
 2397 0146 42F40042 		orr	r2, r2, #32768
 2398 014a 4A60     		str	r2, [r1, #4]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2399              		.loc 1 1526 0
 2400 014c 2022     		movs	r2, #32
 2401 014e 84F84120 		strb	r2, [r4, #65]
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2402              		.loc 1 1527 0
 2403 0152 0022     		movs	r2, #0
 2404 0154 84F84220 		strb	r2, [r4, #66]
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 163


 2405              		.loc 1 1530 0
 2406 0158 84F84020 		strb	r2, [r4, #64]
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2407              		.loc 1 1532 0
 2408 015c 59E7     		b	.L214
 2409              	.L232:
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2410              		.loc 1 1519 0
 2411 015e 2268     		ldr	r2, [r4]
 2412 0160 5368     		ldr	r3, [r2, #4]
 2413 0162 43F40043 		orr	r3, r3, #32768
 2414 0166 5360     		str	r3, [r2, #4]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2415              		.loc 1 1520 0
 2416 0168 0123     		movs	r3, #1
 2417 016a 52E7     		b	.L214
 2418              	.L224:
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2419              		.loc 1 1492 0
 2420 016c 0123     		movs	r3, #1
 2421 016e 50E7     		b	.L214
 2422              		.cfi_endproc
 2423              	.LFE148:
 2425              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2426              		.align	1
 2427              		.global	HAL_I2C_Master_Transmit_IT
 2428              		.syntax unified
 2429              		.thumb
 2430              		.thumb_func
 2431              		.fpu fpv5-sp-d16
 2433              	HAL_I2C_Master_Transmit_IT:
 2434              	.LFB149:
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2435              		.loc 1 1551 0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 0
 2438              		@ frame_needed = 0, uses_anonymous_args = 0
 2439              	.LVL170:
 2440 0000 30B5     		push	{r4, r5, lr}
 2441              	.LCFI39:
 2442              		.cfi_def_cfa_offset 12
 2443              		.cfi_offset 4, -12
 2444              		.cfi_offset 5, -8
 2445              		.cfi_offset 14, -4
 2446 0002 83B0     		sub	sp, sp, #12
 2447              	.LCFI40:
 2448              		.cfi_def_cfa_offset 24
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2449              		.loc 1 1554 0
 2450 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2451 0008 E4B2     		uxtb	r4, r4
 2452 000a 202C     		cmp	r4, #32
 2453 000c 02D0     		beq	.L241
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2454              		.loc 1 1605 0
 2455 000e 0220     		movs	r0, #2
 2456              	.LVL171:
ARM GAS  /tmp/cc1k1gAU.s 			page 164


 2457              	.L234:
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2458              		.loc 1 1607 0
 2459 0010 03B0     		add	sp, sp, #12
 2460              	.LCFI41:
 2461              		.cfi_remember_state
 2462              		.cfi_def_cfa_offset 12
 2463              		@ sp needed
 2464 0012 30BD     		pop	{r4, r5, pc}
 2465              	.LVL172:
 2466              	.L241:
 2467              	.LCFI42:
 2468              		.cfi_restore_state
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2469              		.loc 1 1556 0
 2470 0014 0468     		ldr	r4, [r0]
 2471 0016 A469     		ldr	r4, [r4, #24]
 2472 0018 14F4004F 		tst	r4, #32768
 2473 001c 01D0     		beq	.L242
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2474              		.loc 1 1558 0
 2475 001e 0220     		movs	r0, #2
 2476              	.LVL173:
 2477 0020 F6E7     		b	.L234
 2478              	.LVL174:
 2479              	.L242:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2480              		.loc 1 1562 0
 2481 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2482 0026 012C     		cmp	r4, #1
 2483 0028 2ED0     		beq	.L239
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2484              		.loc 1 1562 0 is_stmt 0 discriminator 2
 2485 002a 0124     		movs	r4, #1
 2486 002c 80F84040 		strb	r4, [r0, #64]
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2487              		.loc 1 1564 0 is_stmt 1 discriminator 2
 2488 0030 2124     		movs	r4, #33
 2489 0032 80F84140 		strb	r4, [r0, #65]
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2490              		.loc 1 1565 0 discriminator 2
 2491 0036 1024     		movs	r4, #16
 2492 0038 80F84240 		strb	r4, [r0, #66]
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2493              		.loc 1 1566 0 discriminator 2
 2494 003c 0024     		movs	r4, #0
 2495 003e 4464     		str	r4, [r0, #68]
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2496              		.loc 1 1569 0 discriminator 2
 2497 0040 4262     		str	r2, [r0, #36]
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2498              		.loc 1 1570 0 discriminator 2
 2499 0042 4385     		strh	r3, [r0, #42]	@ movhi
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2500              		.loc 1 1571 0 discriminator 2
 2501 0044 114B     		ldr	r3, .L243
 2502              	.LVL175:
ARM GAS  /tmp/cc1k1gAU.s 			page 165


 2503 0046 C362     		str	r3, [r0, #44]
 2504              	.LVL176:
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2505              		.loc 1 1572 0 discriminator 2
 2506 0048 114B     		ldr	r3, .L243+4
 2507 004a 4363     		str	r3, [r0, #52]
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2508              		.loc 1 1574 0 discriminator 2
 2509 004c 438D     		ldrh	r3, [r0, #42]
 2510 004e 9BB2     		uxth	r3, r3
 2511 0050 FF2B     		cmp	r3, #255
 2512 0052 14D9     		bls	.L235
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2513              		.loc 1 1576 0
 2514 0054 FF23     		movs	r3, #255
 2515 0056 0385     		strh	r3, [r0, #40]	@ movhi
 2516              	.LVL177:
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2517              		.loc 1 1577 0
 2518 0058 4FF08073 		mov	r3, #16777216
 2519              	.LVL178:
 2520              	.L236:
 2521 005c 0446     		mov	r4, r0
 2522              	.LVL179:
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2523              		.loc 1 1587 0
 2524 005e 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2525              	.LVL180:
 2526 0062 0C48     		ldr	r0, .L243+8
 2527              	.LVL181:
 2528 0064 0090     		str	r0, [sp]
 2529              	.LVL182:
 2530 0066 2046     		mov	r0, r4
 2531 0068 FFF7FEFF 		bl	I2C_TransferConfig
 2532              	.LVL183:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2533              		.loc 1 1590 0
 2534 006c 0025     		movs	r5, #0
 2535 006e 84F84050 		strb	r5, [r4, #64]
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2536              		.loc 1 1599 0
 2537 0072 0121     		movs	r1, #1
 2538 0074 2046     		mov	r0, r4
 2539 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 2540              	.LVL184:
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2541              		.loc 1 1601 0
 2542 007a 2846     		mov	r0, r5
 2543 007c C8E7     		b	.L234
 2544              	.LVL185:
 2545              	.L235:
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2546              		.loc 1 1581 0
 2547 007e 438D     		ldrh	r3, [r0, #42]
 2548 0080 0385     		strh	r3, [r0, #40]	@ movhi
 2549              	.LVL186:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1k1gAU.s 			page 166


 2550              		.loc 1 1582 0
 2551 0082 4FF00073 		mov	r3, #33554432
 2552 0086 E9E7     		b	.L236
 2553              	.LVL187:
 2554              	.L239:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2555              		.loc 1 1562 0
 2556 0088 0220     		movs	r0, #2
 2557              	.LVL188:
 2558 008a C1E7     		b	.L234
 2559              	.L244:
 2560              		.align	2
 2561              	.L243:
 2562 008c 0000FFFF 		.word	-65536
 2563 0090 00000000 		.word	I2C_Master_ISR_IT
 2564 0094 00200080 		.word	-2147475456
 2565              		.cfi_endproc
 2566              	.LFE149:
 2568              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2569              		.align	1
 2570              		.global	HAL_I2C_Master_Receive_IT
 2571              		.syntax unified
 2572              		.thumb
 2573              		.thumb_func
 2574              		.fpu fpv5-sp-d16
 2576              	HAL_I2C_Master_Receive_IT:
 2577              	.LFB150:
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2578              		.loc 1 1620 0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 0
 2581              		@ frame_needed = 0, uses_anonymous_args = 0
 2582              	.LVL189:
 2583 0000 30B5     		push	{r4, r5, lr}
 2584              	.LCFI43:
 2585              		.cfi_def_cfa_offset 12
 2586              		.cfi_offset 4, -12
 2587              		.cfi_offset 5, -8
 2588              		.cfi_offset 14, -4
 2589 0002 83B0     		sub	sp, sp, #12
 2590              	.LCFI44:
 2591              		.cfi_def_cfa_offset 24
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2592              		.loc 1 1623 0
 2593 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2594 0008 E4B2     		uxtb	r4, r4
 2595 000a 202C     		cmp	r4, #32
 2596 000c 02D0     		beq	.L253
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2597              		.loc 1 1674 0
 2598 000e 0220     		movs	r0, #2
 2599              	.LVL190:
 2600              	.L246:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2601              		.loc 1 1676 0
 2602 0010 03B0     		add	sp, sp, #12
 2603              	.LCFI45:
ARM GAS  /tmp/cc1k1gAU.s 			page 167


 2604              		.cfi_remember_state
 2605              		.cfi_def_cfa_offset 12
 2606              		@ sp needed
 2607 0012 30BD     		pop	{r4, r5, pc}
 2608              	.LVL191:
 2609              	.L253:
 2610              	.LCFI46:
 2611              		.cfi_restore_state
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2612              		.loc 1 1625 0
 2613 0014 0468     		ldr	r4, [r0]
 2614 0016 A469     		ldr	r4, [r4, #24]
 2615 0018 14F4004F 		tst	r4, #32768
 2616 001c 01D0     		beq	.L254
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2617              		.loc 1 1627 0
 2618 001e 0220     		movs	r0, #2
 2619              	.LVL192:
 2620 0020 F6E7     		b	.L246
 2621              	.LVL193:
 2622              	.L254:
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2623              		.loc 1 1631 0
 2624 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2625 0026 012C     		cmp	r4, #1
 2626 0028 2ED0     		beq	.L251
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2627              		.loc 1 1631 0 is_stmt 0 discriminator 2
 2628 002a 0124     		movs	r4, #1
 2629 002c 80F84040 		strb	r4, [r0, #64]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2630              		.loc 1 1633 0 is_stmt 1 discriminator 2
 2631 0030 2224     		movs	r4, #34
 2632 0032 80F84140 		strb	r4, [r0, #65]
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2633              		.loc 1 1634 0 discriminator 2
 2634 0036 1024     		movs	r4, #16
 2635 0038 80F84240 		strb	r4, [r0, #66]
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2636              		.loc 1 1635 0 discriminator 2
 2637 003c 0024     		movs	r4, #0
 2638 003e 4464     		str	r4, [r0, #68]
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2639              		.loc 1 1638 0 discriminator 2
 2640 0040 4262     		str	r2, [r0, #36]
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2641              		.loc 1 1639 0 discriminator 2
 2642 0042 4385     		strh	r3, [r0, #42]	@ movhi
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2643              		.loc 1 1640 0 discriminator 2
 2644 0044 114B     		ldr	r3, .L255
 2645              	.LVL194:
 2646 0046 C362     		str	r3, [r0, #44]
 2647              	.LVL195:
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2648              		.loc 1 1641 0 discriminator 2
 2649 0048 114B     		ldr	r3, .L255+4
ARM GAS  /tmp/cc1k1gAU.s 			page 168


 2650 004a 4363     		str	r3, [r0, #52]
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2651              		.loc 1 1643 0 discriminator 2
 2652 004c 438D     		ldrh	r3, [r0, #42]
 2653 004e 9BB2     		uxth	r3, r3
 2654 0050 FF2B     		cmp	r3, #255
 2655 0052 14D9     		bls	.L247
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2656              		.loc 1 1645 0
 2657 0054 FF23     		movs	r3, #255
 2658 0056 0385     		strh	r3, [r0, #40]	@ movhi
 2659              	.LVL196:
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2660              		.loc 1 1646 0
 2661 0058 4FF08073 		mov	r3, #16777216
 2662              	.LVL197:
 2663              	.L248:
 2664 005c 0446     		mov	r4, r0
 2665              	.LVL198:
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2666              		.loc 1 1656 0
 2667 005e 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2668              	.LVL199:
 2669 0062 0C48     		ldr	r0, .L255+8
 2670              	.LVL200:
 2671 0064 0090     		str	r0, [sp]
 2672              	.LVL201:
 2673 0066 2046     		mov	r0, r4
 2674 0068 FFF7FEFF 		bl	I2C_TransferConfig
 2675              	.LVL202:
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2676              		.loc 1 1659 0
 2677 006c 0025     		movs	r5, #0
 2678 006e 84F84050 		strb	r5, [r4, #64]
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2679              		.loc 1 1668 0
 2680 0072 0221     		movs	r1, #2
 2681 0074 2046     		mov	r0, r4
 2682 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 2683              	.LVL203:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2684              		.loc 1 1670 0
 2685 007a 2846     		mov	r0, r5
 2686 007c C8E7     		b	.L246
 2687              	.LVL204:
 2688              	.L247:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2689              		.loc 1 1650 0
 2690 007e 438D     		ldrh	r3, [r0, #42]
 2691 0080 0385     		strh	r3, [r0, #40]	@ movhi
 2692              	.LVL205:
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2693              		.loc 1 1651 0
 2694 0082 4FF00073 		mov	r3, #33554432
 2695 0086 E9E7     		b	.L248
 2696              	.LVL206:
 2697              	.L251:
ARM GAS  /tmp/cc1k1gAU.s 			page 169


1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2698              		.loc 1 1631 0
 2699 0088 0220     		movs	r0, #2
 2700              	.LVL207:
 2701 008a C1E7     		b	.L246
 2702              	.L256:
 2703              		.align	2
 2704              	.L255:
 2705 008c 0000FFFF 		.word	-65536
 2706 0090 00000000 		.word	I2C_Master_ISR_IT
 2707 0094 00240080 		.word	-2147474432
 2708              		.cfi_endproc
 2709              	.LFE150:
 2711              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2712              		.align	1
 2713              		.global	HAL_I2C_Slave_Transmit_IT
 2714              		.syntax unified
 2715              		.thumb
 2716              		.thumb_func
 2717              		.fpu fpv5-sp-d16
 2719              	HAL_I2C_Slave_Transmit_IT:
 2720              	.LFB151:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2721              		.loc 1 1687 0
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
 2725              	.LVL208:
 2726 0000 38B5     		push	{r3, r4, r5, lr}
 2727              	.LCFI47:
 2728              		.cfi_def_cfa_offset 16
 2729              		.cfi_offset 3, -16
 2730              		.cfi_offset 4, -12
 2731              		.cfi_offset 5, -8
 2732              		.cfi_offset 14, -4
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2733              		.loc 1 1688 0
 2734 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2735 0006 DBB2     		uxtb	r3, r3
 2736 0008 202B     		cmp	r3, #32
 2737 000a 01D0     		beq	.L262
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2738              		.loc 1 1723 0
 2739 000c 0220     		movs	r0, #2
 2740              	.LVL209:
 2741 000e 38BD     		pop	{r3, r4, r5, pc}
 2742              	.LVL210:
 2743              	.L262:
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2744              		.loc 1 1691 0
 2745 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2746 0014 012B     		cmp	r3, #1
 2747 0016 01D1     		bne	.L263
 2748 0018 0220     		movs	r0, #2
 2749              	.LVL211:
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2750              		.loc 1 1725 0
ARM GAS  /tmp/cc1k1gAU.s 			page 170


 2751 001a 38BD     		pop	{r3, r4, r5, pc}
 2752              	.LVL212:
 2753              	.L263:
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2754              		.loc 1 1691 0 discriminator 2
 2755 001c 0123     		movs	r3, #1
 2756 001e 80F84030 		strb	r3, [r0, #64]
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2757              		.loc 1 1693 0 discriminator 2
 2758 0022 2123     		movs	r3, #33
 2759 0024 80F84130 		strb	r3, [r0, #65]
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2760              		.loc 1 1694 0 discriminator 2
 2761 0028 2023     		movs	r3, #32
 2762 002a 80F84230 		strb	r3, [r0, #66]
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2763              		.loc 1 1695 0 discriminator 2
 2764 002e 0024     		movs	r4, #0
 2765 0030 4464     		str	r4, [r0, #68]
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2766              		.loc 1 1698 0 discriminator 2
 2767 0032 0568     		ldr	r5, [r0]
 2768 0034 6B68     		ldr	r3, [r5, #4]
 2769 0036 23F40043 		bic	r3, r3, #32768
 2770 003a 6B60     		str	r3, [r5, #4]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2771              		.loc 1 1701 0 discriminator 2
 2772 003c 4162     		str	r1, [r0, #36]
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2773              		.loc 1 1702 0 discriminator 2
 2774 003e 4285     		strh	r2, [r0, #42]	@ movhi
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2775              		.loc 1 1703 0 discriminator 2
 2776 0040 438D     		ldrh	r3, [r0, #42]
 2777 0042 0385     		strh	r3, [r0, #40]	@ movhi
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2778              		.loc 1 1704 0 discriminator 2
 2779 0044 054B     		ldr	r3, .L264
 2780 0046 C362     		str	r3, [r0, #44]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2781              		.loc 1 1705 0 discriminator 2
 2782 0048 054B     		ldr	r3, .L264+4
 2783 004a 4363     		str	r3, [r0, #52]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2784              		.loc 1 1708 0 discriminator 2
 2785 004c 80F84040 		strb	r4, [r0, #64]
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2786              		.loc 1 1717 0 discriminator 2
 2787 0050 0521     		movs	r1, #5
 2788              	.LVL213:
 2789 0052 FFF7FEFF 		bl	I2C_Enable_IRQ
 2790              	.LVL214:
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2791              		.loc 1 1719 0 discriminator 2
 2792 0056 2046     		mov	r0, r4
 2793 0058 38BD     		pop	{r3, r4, r5, pc}
 2794              	.L265:
ARM GAS  /tmp/cc1k1gAU.s 			page 171


 2795 005a 00BF     		.align	2
 2796              	.L264:
 2797 005c 0000FFFF 		.word	-65536
 2798 0060 00000000 		.word	I2C_Slave_ISR_IT
 2799              		.cfi_endproc
 2800              	.LFE151:
 2802              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2803              		.align	1
 2804              		.global	HAL_I2C_Slave_Receive_IT
 2805              		.syntax unified
 2806              		.thumb
 2807              		.thumb_func
 2808              		.fpu fpv5-sp-d16
 2810              	HAL_I2C_Slave_Receive_IT:
 2811              	.LFB152:
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2812              		.loc 1 1736 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 0
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816              	.LVL215:
 2817 0000 38B5     		push	{r3, r4, r5, lr}
 2818              	.LCFI48:
 2819              		.cfi_def_cfa_offset 16
 2820              		.cfi_offset 3, -16
 2821              		.cfi_offset 4, -12
 2822              		.cfi_offset 5, -8
 2823              		.cfi_offset 14, -4
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2824              		.loc 1 1737 0
 2825 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2826 0006 DBB2     		uxtb	r3, r3
 2827 0008 202B     		cmp	r3, #32
 2828 000a 01D0     		beq	.L271
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2829              		.loc 1 1772 0
 2830 000c 0220     		movs	r0, #2
 2831              	.LVL216:
 2832 000e 38BD     		pop	{r3, r4, r5, pc}
 2833              	.LVL217:
 2834              	.L271:
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2835              		.loc 1 1740 0
 2836 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2837 0014 012B     		cmp	r3, #1
 2838 0016 01D1     		bne	.L272
 2839 0018 0220     		movs	r0, #2
 2840              	.LVL218:
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2841              		.loc 1 1774 0
 2842 001a 38BD     		pop	{r3, r4, r5, pc}
 2843              	.LVL219:
 2844              	.L272:
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2845              		.loc 1 1740 0 discriminator 2
 2846 001c 0123     		movs	r3, #1
 2847 001e 80F84030 		strb	r3, [r0, #64]
ARM GAS  /tmp/cc1k1gAU.s 			page 172


1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2848              		.loc 1 1742 0 discriminator 2
 2849 0022 2223     		movs	r3, #34
 2850 0024 80F84130 		strb	r3, [r0, #65]
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2851              		.loc 1 1743 0 discriminator 2
 2852 0028 2023     		movs	r3, #32
 2853 002a 80F84230 		strb	r3, [r0, #66]
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2854              		.loc 1 1744 0 discriminator 2
 2855 002e 0024     		movs	r4, #0
 2856 0030 4464     		str	r4, [r0, #68]
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2857              		.loc 1 1747 0 discriminator 2
 2858 0032 0568     		ldr	r5, [r0]
 2859 0034 6B68     		ldr	r3, [r5, #4]
 2860 0036 23F40043 		bic	r3, r3, #32768
 2861 003a 6B60     		str	r3, [r5, #4]
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2862              		.loc 1 1750 0 discriminator 2
 2863 003c 4162     		str	r1, [r0, #36]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2864              		.loc 1 1751 0 discriminator 2
 2865 003e 4285     		strh	r2, [r0, #42]	@ movhi
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2866              		.loc 1 1752 0 discriminator 2
 2867 0040 438D     		ldrh	r3, [r0, #42]
 2868 0042 0385     		strh	r3, [r0, #40]	@ movhi
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2869              		.loc 1 1753 0 discriminator 2
 2870 0044 054B     		ldr	r3, .L273
 2871 0046 C362     		str	r3, [r0, #44]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2872              		.loc 1 1754 0 discriminator 2
 2873 0048 054B     		ldr	r3, .L273+4
 2874 004a 4363     		str	r3, [r0, #52]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2875              		.loc 1 1757 0 discriminator 2
 2876 004c 80F84040 		strb	r4, [r0, #64]
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2877              		.loc 1 1766 0 discriminator 2
 2878 0050 0621     		movs	r1, #6
 2879              	.LVL220:
 2880 0052 FFF7FEFF 		bl	I2C_Enable_IRQ
 2881              	.LVL221:
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2882              		.loc 1 1768 0 discriminator 2
 2883 0056 2046     		mov	r0, r4
 2884 0058 38BD     		pop	{r3, r4, r5, pc}
 2885              	.L274:
 2886 005a 00BF     		.align	2
 2887              	.L273:
 2888 005c 0000FFFF 		.word	-65536
 2889 0060 00000000 		.word	I2C_Slave_ISR_IT
 2890              		.cfi_endproc
 2891              	.LFE152:
 2893              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
ARM GAS  /tmp/cc1k1gAU.s 			page 173


 2894              		.align	1
 2895              		.global	HAL_I2C_Master_Transmit_DMA
 2896              		.syntax unified
 2897              		.thumb
 2898              		.thumb_func
 2899              		.fpu fpv5-sp-d16
 2901              	HAL_I2C_Master_Transmit_DMA:
 2902              	.LFB153:
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2903              		.loc 1 1787 0
 2904              		.cfi_startproc
 2905              		@ args = 0, pretend = 0, frame = 0
 2906              		@ frame_needed = 0, uses_anonymous_args = 0
 2907              	.LVL222:
 2908 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2909              	.LCFI49:
 2910              		.cfi_def_cfa_offset 20
 2911              		.cfi_offset 4, -20
 2912              		.cfi_offset 5, -16
 2913              		.cfi_offset 6, -12
 2914              		.cfi_offset 7, -8
 2915              		.cfi_offset 14, -4
 2916 0002 83B0     		sub	sp, sp, #12
 2917              	.LCFI50:
 2918              		.cfi_def_cfa_offset 32
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2919              		.loc 1 1791 0
 2920 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2921 0008 E4B2     		uxtb	r4, r4
 2922 000a 202C     		cmp	r4, #32
 2923 000c 03D0     		beq	.L288
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2924              		.loc 1 1915 0
 2925 000e 0224     		movs	r4, #2
 2926              	.LVL223:
 2927              	.L276:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2928              		.loc 1 1917 0
 2929 0010 2046     		mov	r0, r4
 2930 0012 03B0     		add	sp, sp, #12
 2931              	.LCFI51:
 2932              		.cfi_remember_state
 2933              		.cfi_def_cfa_offset 20
 2934              		@ sp needed
 2935 0014 F0BD     		pop	{r4, r5, r6, r7, pc}
 2936              	.LVL224:
 2937              	.L288:
 2938              	.LCFI52:
 2939              		.cfi_restore_state
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2940              		.loc 1 1793 0
 2941 0016 0468     		ldr	r4, [r0]
 2942 0018 A469     		ldr	r4, [r4, #24]
 2943 001a 14F4004F 		tst	r4, #32768
 2944 001e 01D0     		beq	.L289
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2945              		.loc 1 1795 0
ARM GAS  /tmp/cc1k1gAU.s 			page 174


 2946 0020 0224     		movs	r4, #2
 2947 0022 F5E7     		b	.L276
 2948              	.L289:
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2949              		.loc 1 1799 0
 2950 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2951 0028 012C     		cmp	r4, #1
 2952 002a 00F08280 		beq	.L285
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2953              		.loc 1 1799 0 is_stmt 0 discriminator 2
 2954 002e 0124     		movs	r4, #1
 2955 0030 80F84040 		strb	r4, [r0, #64]
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2956              		.loc 1 1801 0 is_stmt 1 discriminator 2
 2957 0034 2124     		movs	r4, #33
 2958 0036 80F84140 		strb	r4, [r0, #65]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2959              		.loc 1 1802 0 discriminator 2
 2960 003a 1024     		movs	r4, #16
 2961 003c 80F84240 		strb	r4, [r0, #66]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2962              		.loc 1 1803 0 discriminator 2
 2963 0040 0024     		movs	r4, #0
 2964 0042 4464     		str	r4, [r0, #68]
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2965              		.loc 1 1806 0 discriminator 2
 2966 0044 4262     		str	r2, [r0, #36]
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2967              		.loc 1 1807 0 discriminator 2
 2968 0046 4385     		strh	r3, [r0, #42]	@ movhi
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2969              		.loc 1 1808 0 discriminator 2
 2970 0048 3B4B     		ldr	r3, .L291
 2971              	.LVL225:
 2972 004a C362     		str	r3, [r0, #44]
 2973              	.LVL226:
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2974              		.loc 1 1809 0 discriminator 2
 2975 004c 3B4B     		ldr	r3, .L291+4
 2976 004e 4363     		str	r3, [r0, #52]
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2977              		.loc 1 1811 0 discriminator 2
 2978 0050 438D     		ldrh	r3, [r0, #42]
 2979 0052 9BB2     		uxth	r3, r3
 2980 0054 FF2B     		cmp	r3, #255
 2981 0056 2CD9     		bls	.L277
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2982              		.loc 1 1813 0
 2983 0058 FF23     		movs	r3, #255
 2984 005a 0385     		strh	r3, [r0, #40]	@ movhi
 2985              	.LVL227:
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2986              		.loc 1 1814 0
 2987 005c 4FF08076 		mov	r6, #16777216
 2988              	.LVL228:
 2989              	.L278:
 2990 0060 1446     		mov	r4, r2
ARM GAS  /tmp/cc1k1gAU.s 			page 175


 2991 0062 0F46     		mov	r7, r1
 2992 0064 0546     		mov	r5, r0
 2993              	.LVL229:
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2994              		.loc 1 1822 0
 2995 0066 028D     		ldrh	r2, [r0, #40]
 2996              	.LVL230:
 2997 0068 002A     		cmp	r2, #0
 2998 006a 51D0     		beq	.L279
 2999              	.LVL231:
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3000              		.loc 1 1824 0
 3001 006c 836B     		ldr	r3, [r0, #56]
 3002 006e 2BB3     		cbz	r3, .L280
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3003              		.loc 1 1827 0
 3004 0070 334A     		ldr	r2, .L291+8
 3005 0072 DA63     		str	r2, [r3, #60]
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3006              		.loc 1 1830 0
 3007 0074 836B     		ldr	r3, [r0, #56]
 3008 0076 334A     		ldr	r2, .L291+12
 3009 0078 DA64     		str	r2, [r3, #76]
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 3010              		.loc 1 1833 0
 3011 007a 826B     		ldr	r2, [r0, #56]
 3012 007c 0023     		movs	r3, #0
 3013 007e 1364     		str	r3, [r2, #64]
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3014              		.loc 1 1834 0
 3015 0080 826B     		ldr	r2, [r0, #56]
 3016 0082 1365     		str	r3, [r2, #80]
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3017              		.loc 1 1837 0
 3018 0084 0268     		ldr	r2, [r0]
 3019 0086 038D     		ldrh	r3, [r0, #40]
 3020 0088 2832     		adds	r2, r2, #40
 3021 008a 2146     		mov	r1, r4
 3022              	.LVL232:
 3023 008c 806B     		ldr	r0, [r0, #56]
 3024              	.LVL233:
 3025 008e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3026              	.LVL234:
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3027              		.loc 1 1854 0
 3028 0092 0446     		mov	r4, r0
 3029              	.LVL235:
 3030 0094 00B3     		cbz	r0, .L290
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3031              		.loc 1 1878 0
 3032 0096 2023     		movs	r3, #32
 3033 0098 85F84130 		strb	r3, [r5, #65]
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3034              		.loc 1 1879 0
 3035 009c 0022     		movs	r2, #0
 3036 009e 85F84220 		strb	r2, [r5, #66]
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 176


 3037              		.loc 1 1882 0
 3038 00a2 6B6C     		ldr	r3, [r5, #68]
 3039 00a4 43F01003 		orr	r3, r3, #16
 3040 00a8 6B64     		str	r3, [r5, #68]
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3041              		.loc 1 1885 0
 3042 00aa 85F84020 		strb	r2, [r5, #64]
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3043              		.loc 1 1887 0
 3044 00ae 0124     		movs	r4, #1
 3045 00b0 AEE7     		b	.L276
 3046              	.LVL236:
 3047              	.L277:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3048              		.loc 1 1818 0
 3049 00b2 438D     		ldrh	r3, [r0, #42]
 3050 00b4 0385     		strh	r3, [r0, #40]	@ movhi
 3051              	.LVL237:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3052              		.loc 1 1819 0
 3053 00b6 4FF00076 		mov	r6, #33554432
 3054 00ba D1E7     		b	.L278
 3055              	.LVL238:
 3056              	.L280:
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3057              		.loc 1 1842 0
 3058 00bc 2023     		movs	r3, #32
 3059 00be 80F84130 		strb	r3, [r0, #65]
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3060              		.loc 1 1843 0
 3061 00c2 0022     		movs	r2, #0
 3062 00c4 80F84220 		strb	r2, [r0, #66]
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3063              		.loc 1 1846 0
 3064 00c8 436C     		ldr	r3, [r0, #68]
 3065 00ca 43F08003 		orr	r3, r3, #128
 3066 00ce 4364     		str	r3, [r0, #68]
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3067              		.loc 1 1849 0
 3068 00d0 80F84020 		strb	r2, [r0, #64]
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3069              		.loc 1 1851 0
 3070 00d4 0124     		movs	r4, #1
 3071              	.LVL239:
 3072 00d6 9BE7     		b	.L276
 3073              	.LVL240:
 3074              	.L290:
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3075              		.loc 1 1858 0
 3076 00d8 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 3077 00dc 1A4B     		ldr	r3, .L291+16
 3078 00de 0093     		str	r3, [sp]
 3079 00e0 3346     		mov	r3, r6
 3080 00e2 3946     		mov	r1, r7
 3081 00e4 2846     		mov	r0, r5
 3082              	.LVL241:
 3083 00e6 FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  /tmp/cc1k1gAU.s 			page 177


 3084              	.LVL242:
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3085              		.loc 1 1861 0
 3086 00ea 6B8D     		ldrh	r3, [r5, #42]
 3087 00ec 9BB2     		uxth	r3, r3
 3088 00ee 2A8D     		ldrh	r2, [r5, #40]
 3089 00f0 9B1A     		subs	r3, r3, r2
 3090 00f2 9BB2     		uxth	r3, r3
 3091 00f4 6B85     		strh	r3, [r5, #42]	@ movhi
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3092              		.loc 1 1864 0
 3093 00f6 0023     		movs	r3, #0
 3094 00f8 85F84030 		strb	r3, [r5, #64]
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3095              		.loc 1 1870 0
 3096 00fc 1121     		movs	r1, #17
 3097 00fe 2846     		mov	r0, r5
 3098 0100 FFF7FEFF 		bl	I2C_Enable_IRQ
 3099              	.LVL243:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3100              		.loc 1 1873 0
 3101 0104 2A68     		ldr	r2, [r5]
 3102 0106 1368     		ldr	r3, [r2]
 3103 0108 43F48043 		orr	r3, r3, #16384
 3104 010c 1360     		str	r3, [r2]
 3105 010e 7FE7     		b	.L276
 3106              	.LVL244:
 3107              	.L279:
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3108              		.loc 1 1893 0
 3109 0110 0E4B     		ldr	r3, .L291+20
 3110 0112 4363     		str	r3, [r0, #52]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3111              		.loc 1 1897 0
 3112 0114 0C4B     		ldr	r3, .L291+16
 3113 0116 0093     		str	r3, [sp]
 3114 0118 4FF00073 		mov	r3, #33554432
 3115 011c D2B2     		uxtb	r2, r2
 3116 011e FFF7FEFF 		bl	I2C_TransferConfig
 3117              	.LVL245:
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3118              		.loc 1 1900 0
 3119 0122 0024     		movs	r4, #0
 3120              	.LVL246:
 3121 0124 85F84040 		strb	r4, [r5, #64]
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3122              		.loc 1 1908 0
 3123 0128 0121     		movs	r1, #1
 3124 012a 2846     		mov	r0, r5
 3125 012c FFF7FEFF 		bl	I2C_Enable_IRQ
 3126              	.LVL247:
 3127 0130 6EE7     		b	.L276
 3128              	.LVL248:
 3129              	.L285:
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3130              		.loc 1 1799 0
 3131 0132 0224     		movs	r4, #2
ARM GAS  /tmp/cc1k1gAU.s 			page 178


 3132 0134 6CE7     		b	.L276
 3133              	.L292:
 3134 0136 00BF     		.align	2
 3135              	.L291:
 3136 0138 0000FFFF 		.word	-65536
 3137 013c 00000000 		.word	I2C_Master_ISR_DMA
 3138 0140 00000000 		.word	I2C_DMAMasterTransmitCplt
 3139 0144 00000000 		.word	I2C_DMAError
 3140 0148 00200080 		.word	-2147475456
 3141 014c 00000000 		.word	I2C_Master_ISR_IT
 3142              		.cfi_endproc
 3143              	.LFE153:
 3145              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3146              		.align	1
 3147              		.global	HAL_I2C_Master_Receive_DMA
 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3151              		.fpu fpv5-sp-d16
 3153              	HAL_I2C_Master_Receive_DMA:
 3154              	.LFB154:
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 3155              		.loc 1 1930 0
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 0
 3158              		@ frame_needed = 0, uses_anonymous_args = 0
 3159              	.LVL249:
 3160 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3161              	.LCFI53:
 3162              		.cfi_def_cfa_offset 20
 3163              		.cfi_offset 4, -20
 3164              		.cfi_offset 5, -16
 3165              		.cfi_offset 6, -12
 3166              		.cfi_offset 7, -8
 3167              		.cfi_offset 14, -4
 3168 0002 83B0     		sub	sp, sp, #12
 3169              	.LCFI54:
 3170              		.cfi_def_cfa_offset 32
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3171              		.loc 1 1934 0
 3172 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3173 0008 E4B2     		uxtb	r4, r4
 3174 000a 202C     		cmp	r4, #32
 3175 000c 03D0     		beq	.L306
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3176              		.loc 1 2058 0
 3177 000e 0224     		movs	r4, #2
 3178              	.LVL250:
 3179              	.L294:
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3180              		.loc 1 2060 0
 3181 0010 2046     		mov	r0, r4
 3182 0012 03B0     		add	sp, sp, #12
 3183              	.LCFI55:
 3184              		.cfi_remember_state
 3185              		.cfi_def_cfa_offset 20
 3186              		@ sp needed
ARM GAS  /tmp/cc1k1gAU.s 			page 179


 3187 0014 F0BD     		pop	{r4, r5, r6, r7, pc}
 3188              	.LVL251:
 3189              	.L306:
 3190              	.LCFI56:
 3191              		.cfi_restore_state
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3192              		.loc 1 1936 0
 3193 0016 0468     		ldr	r4, [r0]
 3194 0018 A469     		ldr	r4, [r4, #24]
 3195 001a 14F4004F 		tst	r4, #32768
 3196 001e 01D0     		beq	.L307
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3197              		.loc 1 1938 0
 3198 0020 0224     		movs	r4, #2
 3199 0022 F5E7     		b	.L294
 3200              	.L307:
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3201              		.loc 1 1942 0
 3202 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3203 0028 012C     		cmp	r4, #1
 3204 002a 00F08180 		beq	.L303
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3205              		.loc 1 1942 0 is_stmt 0 discriminator 2
 3206 002e 0124     		movs	r4, #1
 3207 0030 80F84040 		strb	r4, [r0, #64]
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3208              		.loc 1 1944 0 is_stmt 1 discriminator 2
 3209 0034 2224     		movs	r4, #34
 3210 0036 80F84140 		strb	r4, [r0, #65]
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3211              		.loc 1 1945 0 discriminator 2
 3212 003a 1024     		movs	r4, #16
 3213 003c 80F84240 		strb	r4, [r0, #66]
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3214              		.loc 1 1946 0 discriminator 2
 3215 0040 0024     		movs	r4, #0
 3216 0042 4464     		str	r4, [r0, #68]
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3217              		.loc 1 1949 0 discriminator 2
 3218 0044 4262     		str	r2, [r0, #36]
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3219              		.loc 1 1950 0 discriminator 2
 3220 0046 4385     		strh	r3, [r0, #42]	@ movhi
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3221              		.loc 1 1951 0 discriminator 2
 3222 0048 3A4B     		ldr	r3, .L309
 3223              	.LVL252:
 3224 004a C362     		str	r3, [r0, #44]
 3225              	.LVL253:
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3226              		.loc 1 1952 0 discriminator 2
 3227 004c 3A4B     		ldr	r3, .L309+4
 3228 004e 4363     		str	r3, [r0, #52]
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3229              		.loc 1 1954 0 discriminator 2
 3230 0050 438D     		ldrh	r3, [r0, #42]
 3231 0052 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc1k1gAU.s 			page 180


 3232 0054 FF2B     		cmp	r3, #255
 3233 0056 2AD9     		bls	.L295
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3234              		.loc 1 1956 0
 3235 0058 FF23     		movs	r3, #255
 3236 005a 0385     		strh	r3, [r0, #40]	@ movhi
 3237              	.LVL254:
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3238              		.loc 1 1957 0
 3239 005c 4FF08076 		mov	r6, #16777216
 3240              	.LVL255:
 3241              	.L296:
 3242 0060 0F46     		mov	r7, r1
 3243 0062 0546     		mov	r5, r0
 3244              	.LVL256:
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3245              		.loc 1 1965 0
 3246 0064 018D     		ldrh	r1, [r0, #40]
 3247              	.LVL257:
 3248 0066 0029     		cmp	r1, #0
 3249 0068 50D0     		beq	.L297
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3250              		.loc 1 1967 0
 3251 006a C36B     		ldr	r3, [r0, #60]
 3252 006c 23B3     		cbz	r3, .L298
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3253              		.loc 1 1970 0
 3254 006e 3349     		ldr	r1, .L309+8
 3255 0070 D963     		str	r1, [r3, #60]
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3256              		.loc 1 1973 0
 3257 0072 C36B     		ldr	r3, [r0, #60]
 3258 0074 3249     		ldr	r1, .L309+12
 3259 0076 D964     		str	r1, [r3, #76]
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 3260              		.loc 1 1976 0
 3261 0078 C16B     		ldr	r1, [r0, #60]
 3262 007a 0023     		movs	r3, #0
 3263 007c 0B64     		str	r3, [r1, #64]
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3264              		.loc 1 1977 0
 3265 007e C16B     		ldr	r1, [r0, #60]
 3266 0080 0B65     		str	r3, [r1, #80]
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3267              		.loc 1 1980 0
 3268 0082 0168     		ldr	r1, [r0]
 3269 0084 038D     		ldrh	r3, [r0, #40]
 3270 0086 2431     		adds	r1, r1, #36
 3271 0088 C06B     		ldr	r0, [r0, #60]
 3272              	.LVL258:
 3273 008a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3274              	.LVL259:
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3275              		.loc 1 1997 0
 3276 008e 0446     		mov	r4, r0
 3277 0090 00B3     		cbz	r0, .L308
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
ARM GAS  /tmp/cc1k1gAU.s 			page 181


 3278              		.loc 1 2021 0
 3279 0092 2023     		movs	r3, #32
 3280 0094 85F84130 		strb	r3, [r5, #65]
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3281              		.loc 1 2022 0
 3282 0098 0022     		movs	r2, #0
 3283 009a 85F84220 		strb	r2, [r5, #66]
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3284              		.loc 1 2025 0
 3285 009e 6B6C     		ldr	r3, [r5, #68]
 3286 00a0 43F01003 		orr	r3, r3, #16
 3287 00a4 6B64     		str	r3, [r5, #68]
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3288              		.loc 1 2028 0
 3289 00a6 85F84020 		strb	r2, [r5, #64]
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3290              		.loc 1 2030 0
 3291 00aa 0124     		movs	r4, #1
 3292 00ac B0E7     		b	.L294
 3293              	.LVL260:
 3294              	.L295:
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3295              		.loc 1 1961 0
 3296 00ae 438D     		ldrh	r3, [r0, #42]
 3297 00b0 0385     		strh	r3, [r0, #40]	@ movhi
 3298              	.LVL261:
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3299              		.loc 1 1962 0
 3300 00b2 4FF00076 		mov	r6, #33554432
 3301 00b6 D3E7     		b	.L296
 3302              	.LVL262:
 3303              	.L298:
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3304              		.loc 1 1985 0
 3305 00b8 2023     		movs	r3, #32
 3306 00ba 80F84130 		strb	r3, [r0, #65]
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3307              		.loc 1 1986 0
 3308 00be 0022     		movs	r2, #0
 3309              	.LVL263:
 3310 00c0 80F84220 		strb	r2, [r0, #66]
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3311              		.loc 1 1989 0
 3312 00c4 436C     		ldr	r3, [r0, #68]
 3313 00c6 43F08003 		orr	r3, r3, #128
 3314 00ca 4364     		str	r3, [r0, #68]
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3315              		.loc 1 1992 0
 3316 00cc 80F84020 		strb	r2, [r0, #64]
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3317              		.loc 1 1994 0
 3318 00d0 0124     		movs	r4, #1
 3319 00d2 9DE7     		b	.L294
 3320              	.LVL264:
 3321              	.L308:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3322              		.loc 1 2001 0
ARM GAS  /tmp/cc1k1gAU.s 			page 182


 3323 00d4 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 3324 00d8 1A4B     		ldr	r3, .L309+16
 3325 00da 0093     		str	r3, [sp]
 3326 00dc 3346     		mov	r3, r6
 3327 00de 3946     		mov	r1, r7
 3328 00e0 2846     		mov	r0, r5
 3329              	.LVL265:
 3330 00e2 FFF7FEFF 		bl	I2C_TransferConfig
 3331              	.LVL266:
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3332              		.loc 1 2004 0
 3333 00e6 6B8D     		ldrh	r3, [r5, #42]
 3334 00e8 9BB2     		uxth	r3, r3
 3335 00ea 2A8D     		ldrh	r2, [r5, #40]
 3336 00ec 9B1A     		subs	r3, r3, r2
 3337 00ee 9BB2     		uxth	r3, r3
 3338 00f0 6B85     		strh	r3, [r5, #42]	@ movhi
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3339              		.loc 1 2007 0
 3340 00f2 0023     		movs	r3, #0
 3341 00f4 85F84030 		strb	r3, [r5, #64]
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3342              		.loc 1 2013 0
 3343 00f8 1121     		movs	r1, #17
 3344 00fa 2846     		mov	r0, r5
 3345 00fc FFF7FEFF 		bl	I2C_Enable_IRQ
 3346              	.LVL267:
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3347              		.loc 1 2016 0
 3348 0100 2A68     		ldr	r2, [r5]
 3349 0102 1368     		ldr	r3, [r2]
 3350 0104 43F40043 		orr	r3, r3, #32768
 3351 0108 1360     		str	r3, [r2]
 3352 010a 81E7     		b	.L294
 3353              	.LVL268:
 3354              	.L297:
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3355              		.loc 1 2036 0
 3356 010c 0E4B     		ldr	r3, .L309+20
 3357 010e 4363     		str	r3, [r0, #52]
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3358              		.loc 1 2040 0
 3359 0110 0C4B     		ldr	r3, .L309+16
 3360 0112 0093     		str	r3, [sp]
 3361 0114 4FF00073 		mov	r3, #33554432
 3362 0118 CAB2     		uxtb	r2, r1
 3363              	.LVL269:
 3364 011a 3946     		mov	r1, r7
 3365 011c FFF7FEFF 		bl	I2C_TransferConfig
 3366              	.LVL270:
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3367              		.loc 1 2043 0
 3368 0120 0024     		movs	r4, #0
 3369 0122 85F84040 		strb	r4, [r5, #64]
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3370              		.loc 1 2051 0
 3371 0126 0121     		movs	r1, #1
ARM GAS  /tmp/cc1k1gAU.s 			page 183


 3372 0128 2846     		mov	r0, r5
 3373 012a FFF7FEFF 		bl	I2C_Enable_IRQ
 3374              	.LVL271:
 3375 012e 6FE7     		b	.L294
 3376              	.LVL272:
 3377              	.L303:
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3378              		.loc 1 1942 0
 3379 0130 0224     		movs	r4, #2
 3380 0132 6DE7     		b	.L294
 3381              	.L310:
 3382              		.align	2
 3383              	.L309:
 3384 0134 0000FFFF 		.word	-65536
 3385 0138 00000000 		.word	I2C_Master_ISR_DMA
 3386 013c 00000000 		.word	I2C_DMAMasterReceiveCplt
 3387 0140 00000000 		.word	I2C_DMAError
 3388 0144 00240080 		.word	-2147474432
 3389 0148 00000000 		.word	I2C_Master_ISR_IT
 3390              		.cfi_endproc
 3391              	.LFE154:
 3393              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3394              		.align	1
 3395              		.global	HAL_I2C_Slave_Transmit_DMA
 3396              		.syntax unified
 3397              		.thumb
 3398              		.thumb_func
 3399              		.fpu fpv5-sp-d16
 3401              	HAL_I2C_Slave_Transmit_DMA:
 3402              	.LFB155:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3403              		.loc 1 2071 0
 3404              		.cfi_startproc
 3405              		@ args = 0, pretend = 0, frame = 0
 3406              		@ frame_needed = 0, uses_anonymous_args = 0
 3407              	.LVL273:
 3408 0000 38B5     		push	{r3, r4, r5, lr}
 3409              	.LCFI57:
 3410              		.cfi_def_cfa_offset 16
 3411              		.cfi_offset 3, -16
 3412              		.cfi_offset 4, -12
 3413              		.cfi_offset 5, -8
 3414              		.cfi_offset 14, -4
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3415              		.loc 1 2074 0
 3416 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3417 0006 DBB2     		uxtb	r3, r3
 3418 0008 202B     		cmp	r3, #32
 3419 000a 02D0     		beq	.L321
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3420              		.loc 1 2161 0
 3421 000c 0224     		movs	r4, #2
 3422              	.LVL274:
 3423              	.L312:
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3424              		.loc 1 2163 0
 3425 000e 2046     		mov	r0, r4
ARM GAS  /tmp/cc1k1gAU.s 			page 184


 3426 0010 38BD     		pop	{r3, r4, r5, pc}
 3427              	.LVL275:
 3428              	.L321:
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3429              		.loc 1 2076 0
 3430 0012 002A     		cmp	r2, #0
 3431 0014 18BF     		it	ne
 3432 0016 0029     		cmpne	r1, #0
 3433 0018 39D0     		beq	.L322
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3434              		.loc 1 2082 0
 3435 001a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3436 001e 012B     		cmp	r3, #1
 3437 0020 5AD0     		beq	.L318
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3438              		.loc 1 2082 0 is_stmt 0 discriminator 2
 3439 0022 0123     		movs	r3, #1
 3440 0024 80F84030 		strb	r3, [r0, #64]
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3441              		.loc 1 2084 0 is_stmt 1 discriminator 2
 3442 0028 2123     		movs	r3, #33
 3443 002a 80F84130 		strb	r3, [r0, #65]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3444              		.loc 1 2085 0 discriminator 2
 3445 002e 2023     		movs	r3, #32
 3446 0030 80F84230 		strb	r3, [r0, #66]
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3447              		.loc 1 2086 0 discriminator 2
 3448 0034 0023     		movs	r3, #0
 3449 0036 4364     		str	r3, [r0, #68]
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3450              		.loc 1 2089 0 discriminator 2
 3451 0038 4162     		str	r1, [r0, #36]
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3452              		.loc 1 2090 0 discriminator 2
 3453 003a 4285     		strh	r2, [r0, #42]	@ movhi
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3454              		.loc 1 2091 0 discriminator 2
 3455 003c 438D     		ldrh	r3, [r0, #42]
 3456 003e 0385     		strh	r3, [r0, #40]	@ movhi
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3457              		.loc 1 2092 0 discriminator 2
 3458 0040 264B     		ldr	r3, .L324
 3459 0042 C362     		str	r3, [r0, #44]
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3460              		.loc 1 2093 0 discriminator 2
 3461 0044 264B     		ldr	r3, .L324+4
 3462 0046 4363     		str	r3, [r0, #52]
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3463              		.loc 1 2095 0 discriminator 2
 3464 0048 836B     		ldr	r3, [r0, #56]
 3465 004a 2BB3     		cbz	r3, .L314
 3466 004c 0546     		mov	r5, r0
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3467              		.loc 1 2098 0
 3468 004e 254A     		ldr	r2, .L324+8
 3469              	.LVL276:
ARM GAS  /tmp/cc1k1gAU.s 			page 185


 3470 0050 DA63     		str	r2, [r3, #60]
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3471              		.loc 1 2101 0
 3472 0052 836B     		ldr	r3, [r0, #56]
 3473 0054 244A     		ldr	r2, .L324+12
 3474 0056 DA64     		str	r2, [r3, #76]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3475              		.loc 1 2104 0
 3476 0058 826B     		ldr	r2, [r0, #56]
 3477 005a 0023     		movs	r3, #0
 3478 005c 1364     		str	r3, [r2, #64]
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3479              		.loc 1 2105 0
 3480 005e 826B     		ldr	r2, [r0, #56]
 3481 0060 1365     		str	r3, [r2, #80]
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3482              		.loc 1 2108 0
 3483 0062 0268     		ldr	r2, [r0]
 3484 0064 038D     		ldrh	r3, [r0, #40]
 3485 0066 2832     		adds	r2, r2, #40
 3486 0068 806B     		ldr	r0, [r0, #56]
 3487              	.LVL277:
 3488 006a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3489              	.LVL278:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3490              		.loc 1 2125 0
 3491 006e 0446     		mov	r4, r0
 3492 0070 00B3     		cbz	r0, .L323
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3493              		.loc 1 2145 0
 3494 0072 2823     		movs	r3, #40
 3495 0074 85F84130 		strb	r3, [r5, #65]
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3496              		.loc 1 2146 0
 3497 0078 0022     		movs	r2, #0
 3498 007a 85F84220 		strb	r2, [r5, #66]
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3499              		.loc 1 2149 0
 3500 007e 6B6C     		ldr	r3, [r5, #68]
 3501 0080 43F01003 		orr	r3, r3, #16
 3502 0084 6B64     		str	r3, [r5, #68]
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3503              		.loc 1 2152 0
 3504 0086 85F84020 		strb	r2, [r5, #64]
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3505              		.loc 1 2154 0
 3506 008a 0124     		movs	r4, #1
 3507 008c BFE7     		b	.L312
 3508              	.LVL279:
 3509              	.L322:
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3510              		.loc 1 2078 0
 3511 008e 4FF40073 		mov	r3, #512
 3512 0092 4364     		str	r3, [r0, #68]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3513              		.loc 1 2079 0
 3514 0094 0124     		movs	r4, #1
ARM GAS  /tmp/cc1k1gAU.s 			page 186


 3515 0096 BAE7     		b	.L312
 3516              	.L314:
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3517              		.loc 1 2113 0
 3518 0098 2823     		movs	r3, #40
 3519 009a 80F84130 		strb	r3, [r0, #65]
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3520              		.loc 1 2114 0
 3521 009e 0022     		movs	r2, #0
 3522              	.LVL280:
 3523 00a0 80F84220 		strb	r2, [r0, #66]
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3524              		.loc 1 2117 0
 3525 00a4 436C     		ldr	r3, [r0, #68]
 3526 00a6 43F08003 		orr	r3, r3, #128
 3527 00aa 4364     		str	r3, [r0, #68]
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3528              		.loc 1 2120 0
 3529 00ac 80F84020 		strb	r2, [r0, #64]
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3530              		.loc 1 2122 0
 3531 00b0 0124     		movs	r4, #1
 3532 00b2 ACE7     		b	.L312
 3533              	.LVL281:
 3534              	.L323:
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3535              		.loc 1 2128 0
 3536 00b4 2A68     		ldr	r2, [r5]
 3537 00b6 5368     		ldr	r3, [r2, #4]
 3538 00b8 23F40043 		bic	r3, r3, #32768
 3539 00bc 5360     		str	r3, [r2, #4]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3540              		.loc 1 2131 0
 3541 00be 0023     		movs	r3, #0
 3542 00c0 85F84030 		strb	r3, [r5, #64]
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3543              		.loc 1 2137 0
 3544 00c4 0421     		movs	r1, #4
 3545 00c6 2846     		mov	r0, r5
 3546              	.LVL282:
 3547 00c8 FFF7FEFF 		bl	I2C_Enable_IRQ
 3548              	.LVL283:
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3549              		.loc 1 2140 0
 3550 00cc 2A68     		ldr	r2, [r5]
 3551 00ce 1368     		ldr	r3, [r2]
 3552 00d0 43F48043 		orr	r3, r3, #16384
 3553 00d4 1360     		str	r3, [r2]
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3554              		.loc 1 2157 0
 3555 00d6 9AE7     		b	.L312
 3556              	.LVL284:
 3557              	.L318:
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3558              		.loc 1 2082 0
 3559 00d8 0224     		movs	r4, #2
 3560 00da 98E7     		b	.L312
ARM GAS  /tmp/cc1k1gAU.s 			page 187


 3561              	.L325:
 3562              		.align	2
 3563              	.L324:
 3564 00dc 0000FFFF 		.word	-65536
 3565 00e0 00000000 		.word	I2C_Slave_ISR_DMA
 3566 00e4 00000000 		.word	I2C_DMASlaveTransmitCplt
 3567 00e8 00000000 		.word	I2C_DMAError
 3568              		.cfi_endproc
 3569              	.LFE155:
 3571              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3572              		.align	1
 3573              		.global	HAL_I2C_Slave_Receive_DMA
 3574              		.syntax unified
 3575              		.thumb
 3576              		.thumb_func
 3577              		.fpu fpv5-sp-d16
 3579              	HAL_I2C_Slave_Receive_DMA:
 3580              	.LFB156:
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3581              		.loc 1 2174 0
 3582              		.cfi_startproc
 3583              		@ args = 0, pretend = 0, frame = 0
 3584              		@ frame_needed = 0, uses_anonymous_args = 0
 3585              	.LVL285:
 3586 0000 38B5     		push	{r3, r4, r5, lr}
 3587              	.LCFI58:
 3588              		.cfi_def_cfa_offset 16
 3589              		.cfi_offset 3, -16
 3590              		.cfi_offset 4, -12
 3591              		.cfi_offset 5, -8
 3592              		.cfi_offset 14, -4
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3593              		.loc 1 2177 0
 3594 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3595 0006 DBB2     		uxtb	r3, r3
 3596 0008 202B     		cmp	r3, #32
 3597 000a 02D0     		beq	.L336
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3598              		.loc 1 2264 0
 3599 000c 0224     		movs	r4, #2
 3600              	.LVL286:
 3601              	.L327:
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 3602              		.loc 1 2266 0
 3603 000e 2046     		mov	r0, r4
 3604 0010 38BD     		pop	{r3, r4, r5, pc}
 3605              	.LVL287:
 3606              	.L336:
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3607              		.loc 1 2179 0
 3608 0012 002A     		cmp	r2, #0
 3609 0014 18BF     		it	ne
 3610 0016 0029     		cmpne	r1, #0
 3611 0018 3AD0     		beq	.L337
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3612              		.loc 1 2185 0
 3613 001a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
ARM GAS  /tmp/cc1k1gAU.s 			page 188


 3614 001e 012B     		cmp	r3, #1
 3615 0020 5BD0     		beq	.L333
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3616              		.loc 1 2185 0 is_stmt 0 discriminator 2
 3617 0022 0123     		movs	r3, #1
 3618 0024 80F84030 		strb	r3, [r0, #64]
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3619              		.loc 1 2187 0 is_stmt 1 discriminator 2
 3620 0028 2223     		movs	r3, #34
 3621 002a 80F84130 		strb	r3, [r0, #65]
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3622              		.loc 1 2188 0 discriminator 2
 3623 002e 2023     		movs	r3, #32
 3624 0030 80F84230 		strb	r3, [r0, #66]
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3625              		.loc 1 2189 0 discriminator 2
 3626 0034 0023     		movs	r3, #0
 3627 0036 4364     		str	r3, [r0, #68]
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3628              		.loc 1 2192 0 discriminator 2
 3629 0038 4162     		str	r1, [r0, #36]
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3630              		.loc 1 2193 0 discriminator 2
 3631 003a 4285     		strh	r2, [r0, #42]	@ movhi
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3632              		.loc 1 2194 0 discriminator 2
 3633 003c 438D     		ldrh	r3, [r0, #42]
 3634 003e 0385     		strh	r3, [r0, #40]	@ movhi
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3635              		.loc 1 2195 0 discriminator 2
 3636 0040 274B     		ldr	r3, .L339
 3637 0042 C362     		str	r3, [r0, #44]
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3638              		.loc 1 2196 0 discriminator 2
 3639 0044 274B     		ldr	r3, .L339+4
 3640 0046 4363     		str	r3, [r0, #52]
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3641              		.loc 1 2198 0 discriminator 2
 3642 0048 C36B     		ldr	r3, [r0, #60]
 3643 004a 33B3     		cbz	r3, .L329
 3644 004c 0A46     		mov	r2, r1
 3645              	.LVL288:
 3646 004e 0546     		mov	r5, r0
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3647              		.loc 1 2201 0
 3648 0050 2549     		ldr	r1, .L339+8
 3649              	.LVL289:
 3650 0052 D963     		str	r1, [r3, #60]
 3651              	.LVL290:
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3652              		.loc 1 2204 0
 3653 0054 C36B     		ldr	r3, [r0, #60]
 3654 0056 2549     		ldr	r1, .L339+12
 3655 0058 D964     		str	r1, [r3, #76]
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3656              		.loc 1 2207 0
 3657 005a C16B     		ldr	r1, [r0, #60]
ARM GAS  /tmp/cc1k1gAU.s 			page 189


 3658 005c 0023     		movs	r3, #0
 3659 005e 0B64     		str	r3, [r1, #64]
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3660              		.loc 1 2208 0
 3661 0060 C16B     		ldr	r1, [r0, #60]
 3662 0062 0B65     		str	r3, [r1, #80]
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3663              		.loc 1 2211 0
 3664 0064 0168     		ldr	r1, [r0]
 3665 0066 038D     		ldrh	r3, [r0, #40]
 3666 0068 2431     		adds	r1, r1, #36
 3667 006a C06B     		ldr	r0, [r0, #60]
 3668              	.LVL291:
 3669 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3670              	.LVL292:
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3671              		.loc 1 2228 0
 3672 0070 0446     		mov	r4, r0
 3673 0072 00B3     		cbz	r0, .L338
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3674              		.loc 1 2248 0
 3675 0074 2823     		movs	r3, #40
 3676 0076 85F84130 		strb	r3, [r5, #65]
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3677              		.loc 1 2249 0
 3678 007a 0022     		movs	r2, #0
 3679 007c 85F84220 		strb	r2, [r5, #66]
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3680              		.loc 1 2252 0
 3681 0080 6B6C     		ldr	r3, [r5, #68]
 3682 0082 43F01003 		orr	r3, r3, #16
 3683 0086 6B64     		str	r3, [r5, #68]
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3684              		.loc 1 2255 0
 3685 0088 85F84020 		strb	r2, [r5, #64]
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3686              		.loc 1 2257 0
 3687 008c 0124     		movs	r4, #1
 3688 008e BEE7     		b	.L327
 3689              	.LVL293:
 3690              	.L337:
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3691              		.loc 1 2181 0
 3692 0090 4FF40073 		mov	r3, #512
 3693 0094 4364     		str	r3, [r0, #68]
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3694              		.loc 1 2182 0
 3695 0096 0124     		movs	r4, #1
 3696 0098 B9E7     		b	.L327
 3697              	.L329:
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3698              		.loc 1 2216 0
 3699 009a 2823     		movs	r3, #40
 3700 009c 80F84130 		strb	r3, [r0, #65]
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3701              		.loc 1 2217 0
 3702 00a0 0022     		movs	r2, #0
ARM GAS  /tmp/cc1k1gAU.s 			page 190


 3703              	.LVL294:
 3704 00a2 80F84220 		strb	r2, [r0, #66]
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3705              		.loc 1 2220 0
 3706 00a6 436C     		ldr	r3, [r0, #68]
 3707 00a8 43F08003 		orr	r3, r3, #128
 3708 00ac 4364     		str	r3, [r0, #68]
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3709              		.loc 1 2223 0
 3710 00ae 80F84020 		strb	r2, [r0, #64]
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3711              		.loc 1 2225 0
 3712 00b2 0124     		movs	r4, #1
 3713 00b4 ABE7     		b	.L327
 3714              	.LVL295:
 3715              	.L338:
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3716              		.loc 1 2231 0
 3717 00b6 2A68     		ldr	r2, [r5]
 3718 00b8 5368     		ldr	r3, [r2, #4]
 3719 00ba 23F40043 		bic	r3, r3, #32768
 3720 00be 5360     		str	r3, [r2, #4]
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3721              		.loc 1 2234 0
 3722 00c0 0023     		movs	r3, #0
 3723 00c2 85F84030 		strb	r3, [r5, #64]
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3724              		.loc 1 2240 0
 3725 00c6 0421     		movs	r1, #4
 3726 00c8 2846     		mov	r0, r5
 3727              	.LVL296:
 3728 00ca FFF7FEFF 		bl	I2C_Enable_IRQ
 3729              	.LVL297:
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3730              		.loc 1 2243 0
 3731 00ce 2A68     		ldr	r2, [r5]
 3732 00d0 1368     		ldr	r3, [r2]
 3733 00d2 43F40043 		orr	r3, r3, #32768
 3734 00d6 1360     		str	r3, [r2]
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3735              		.loc 1 2260 0
 3736 00d8 99E7     		b	.L327
 3737              	.LVL298:
 3738              	.L333:
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3739              		.loc 1 2185 0
 3740 00da 0224     		movs	r4, #2
 3741 00dc 97E7     		b	.L327
 3742              	.L340:
 3743 00de 00BF     		.align	2
 3744              	.L339:
 3745 00e0 0000FFFF 		.word	-65536
 3746 00e4 00000000 		.word	I2C_Slave_ISR_DMA
 3747 00e8 00000000 		.word	I2C_DMASlaveReceiveCplt
 3748 00ec 00000000 		.word	I2C_DMAError
 3749              		.cfi_endproc
 3750              	.LFE156:
ARM GAS  /tmp/cc1k1gAU.s 			page 191


 3752              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3753              		.align	1
 3754              		.global	HAL_I2C_Mem_Write
 3755              		.syntax unified
 3756              		.thumb
 3757              		.thumb_func
 3758              		.fpu fpv5-sp-d16
 3760              	HAL_I2C_Mem_Write:
 3761              	.LFB157:
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 3762              		.loc 1 2281 0
 3763              		.cfi_startproc
 3764              		@ args = 12, pretend = 0, frame = 0
 3765              		@ frame_needed = 0, uses_anonymous_args = 0
 3766              	.LVL299:
 3767 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3768              	.LCFI59:
 3769              		.cfi_def_cfa_offset 32
 3770              		.cfi_offset 4, -32
 3771              		.cfi_offset 5, -28
 3772              		.cfi_offset 6, -24
 3773              		.cfi_offset 7, -20
 3774              		.cfi_offset 8, -16
 3775              		.cfi_offset 9, -12
 3776              		.cfi_offset 10, -8
 3777              		.cfi_offset 14, -4
 3778 0004 82B0     		sub	sp, sp, #8
 3779              	.LCFI60:
 3780              		.cfi_def_cfa_offset 40
 3781 0006 BDF82C50 		ldrh	r5, [sp, #44]
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3782              		.loc 1 2287 0
 3783 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3784 000e E4B2     		uxtb	r4, r4
 3785 0010 202C     		cmp	r4, #32
 3786 0012 04D0     		beq	.L357
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3787              		.loc 1 2398 0
 3788 0014 0223     		movs	r3, #2
 3789              	.LVL300:
 3790              	.L342:
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3791              		.loc 1 2400 0
 3792 0016 1846     		mov	r0, r3
 3793 0018 02B0     		add	sp, sp, #8
 3794              	.LCFI61:
 3795              		.cfi_remember_state
 3796              		.cfi_def_cfa_offset 32
 3797              		@ sp needed
 3798 001a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3799              	.LVL301:
 3800              	.L357:
 3801              	.LCFI62:
 3802              		.cfi_restore_state
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3803              		.loc 1 2289 0
 3804 001e 0A9C     		ldr	r4, [sp, #40]
ARM GAS  /tmp/cc1k1gAU.s 			page 192


 3805 0020 002D     		cmp	r5, #0
 3806 0022 18BF     		it	ne
 3807 0024 002C     		cmpne	r4, #0
 3808 0026 05D0     		beq	.L358
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3809              		.loc 1 2296 0
 3810 0028 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3811 002c 012C     		cmp	r4, #1
 3812 002e 06D1     		bne	.L359
 3813 0030 0223     		movs	r3, #2
 3814              	.LVL302:
 3815 0032 F0E7     		b	.L342
 3816              	.LVL303:
 3817              	.L358:
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3818              		.loc 1 2291 0
 3819 0034 4FF40073 		mov	r3, #512
 3820              	.LVL304:
 3821 0038 4364     		str	r3, [r0, #68]
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3822              		.loc 1 2292 0
 3823 003a 0123     		movs	r3, #1
 3824 003c EBE7     		b	.L342
 3825              	.LVL305:
 3826              	.L359:
 3827 003e 9846     		mov	r8, r3
 3828 0040 9146     		mov	r9, r2
 3829 0042 0E46     		mov	r6, r1
 3830 0044 0446     		mov	r4, r0
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3831              		.loc 1 2296 0 discriminator 2
 3832 0046 4FF0010A 		mov	r10, #1
 3833 004a 80F840A0 		strb	r10, [r0, #64]
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3834              		.loc 1 2299 0 discriminator 2
 3835 004e FFF7FEFF 		bl	HAL_GetTick
 3836              	.LVL306:
 3837 0052 0746     		mov	r7, r0
 3838              	.LVL307:
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3839              		.loc 1 2301 0 discriminator 2
 3840 0054 0090     		str	r0, [sp]
 3841 0056 1923     		movs	r3, #25
 3842 0058 5246     		mov	r2, r10
 3843 005a 4FF40041 		mov	r1, #32768
 3844 005e 2046     		mov	r0, r4
 3845              	.LVL308:
 3846 0060 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3847              	.LVL309:
 3848 0064 08B1     		cbz	r0, .L360
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3849              		.loc 1 2303 0
 3850 0066 0123     		movs	r3, #1
 3851 0068 D5E7     		b	.L342
 3852              	.L360:
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3853              		.loc 1 2306 0
ARM GAS  /tmp/cc1k1gAU.s 			page 193


 3854 006a 2123     		movs	r3, #33
 3855 006c 84F84130 		strb	r3, [r4, #65]
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3856              		.loc 1 2307 0
 3857 0070 4023     		movs	r3, #64
 3858 0072 84F84230 		strb	r3, [r4, #66]
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3859              		.loc 1 2308 0
 3860 0076 0023     		movs	r3, #0
 3861 0078 6364     		str	r3, [r4, #68]
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3862              		.loc 1 2311 0
 3863 007a 0A9A     		ldr	r2, [sp, #40]
 3864 007c 6262     		str	r2, [r4, #36]
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3865              		.loc 1 2312 0
 3866 007e 6585     		strh	r5, [r4, #42]	@ movhi
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3867              		.loc 1 2313 0
 3868 0080 6363     		str	r3, [r4, #52]
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3869              		.loc 1 2316 0
 3870 0082 0197     		str	r7, [sp, #4]
 3871 0084 0C9B     		ldr	r3, [sp, #48]
 3872 0086 0093     		str	r3, [sp]
 3873 0088 4346     		mov	r3, r8
 3874 008a 4A46     		mov	r2, r9
 3875 008c 3146     		mov	r1, r6
 3876 008e 2046     		mov	r0, r4
 3877 0090 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3878              	.LVL310:
 3879 0094 70B9     		cbnz	r0, .L361
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3880              		.loc 1 2324 0
 3881 0096 638D     		ldrh	r3, [r4, #42]
 3882 0098 9BB2     		uxth	r3, r3
 3883 009a FF2B     		cmp	r3, #255
 3884 009c 0FD9     		bls	.L345
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
 3885              		.loc 1 2326 0
 3886 009e FF22     		movs	r2, #255
 3887 00a0 2285     		strh	r2, [r4, #40]	@ movhi
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3888              		.loc 1 2327 0
 3889 00a2 0023     		movs	r3, #0
 3890 00a4 0093     		str	r3, [sp]
 3891 00a6 4FF08073 		mov	r3, #16777216
 3892 00aa 3146     		mov	r1, r6
 3893 00ac 2046     		mov	r0, r4
 3894 00ae FFF7FEFF 		bl	I2C_TransferConfig
 3895              	.LVL311:
 3896 00b2 21E0     		b	.L349
 3897              	.L361:
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 3898              		.loc 1 2319 0
 3899 00b4 0023     		movs	r3, #0
 3900 00b6 84F84030 		strb	r3, [r4, #64]
ARM GAS  /tmp/cc1k1gAU.s 			page 194


2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3901              		.loc 1 2320 0
 3902 00ba 5346     		mov	r3, r10
 3903 00bc ABE7     		b	.L342
 3904              	.L345:
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
 3905              		.loc 1 2331 0
 3906 00be 628D     		ldrh	r2, [r4, #42]
 3907 00c0 92B2     		uxth	r2, r2
 3908 00c2 2285     		strh	r2, [r4, #40]	@ movhi
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3909              		.loc 1 2332 0
 3910 00c4 0023     		movs	r3, #0
 3911 00c6 0093     		str	r3, [sp]
 3912 00c8 4FF00073 		mov	r3, #33554432
 3913 00cc D2B2     		uxtb	r2, r2
 3914 00ce 3146     		mov	r1, r6
 3915 00d0 2046     		mov	r0, r4
 3916 00d2 FFF7FEFF 		bl	I2C_TransferConfig
 3917              	.LVL312:
 3918 00d6 0FE0     		b	.L349
 3919              	.L348:
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 3920              		.loc 1 2367 0
 3921 00d8 628D     		ldrh	r2, [r4, #42]
 3922 00da 92B2     		uxth	r2, r2
 3923 00dc 2285     		strh	r2, [r4, #40]	@ movhi
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3924              		.loc 1 2368 0
 3925 00de 0023     		movs	r3, #0
 3926 00e0 0093     		str	r3, [sp]
 3927 00e2 4FF00073 		mov	r3, #33554432
 3928 00e6 D2B2     		uxtb	r2, r2
 3929 00e8 3146     		mov	r1, r6
 3930 00ea 2046     		mov	r0, r4
 3931 00ec FFF7FEFF 		bl	I2C_TransferConfig
 3932              	.LVL313:
 3933              	.L347:
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3934              		.loc 1 2373 0
 3935 00f0 638D     		ldrh	r3, [r4, #42]
 3936 00f2 9BB2     		uxth	r3, r3
 3937 00f4 002B     		cmp	r3, #0
 3938 00f6 33D0     		beq	.L362
 3939              	.L349:
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3940              		.loc 1 2338 0
 3941 00f8 3A46     		mov	r2, r7
 3942 00fa 0C99     		ldr	r1, [sp, #48]
 3943 00fc 2046     		mov	r0, r4
 3944 00fe FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3945              	.LVL314:
 3946 0102 0028     		cmp	r0, #0
 3947 0104 49D1     		bne	.L353
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3948              		.loc 1 2344 0
 3949 0106 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc1k1gAU.s 			page 195


 3950 0108 626A     		ldr	r2, [r4, #36]
 3951 010a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3952 010c 9A62     		str	r2, [r3, #40]
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3953              		.loc 1 2347 0
 3954 010e 636A     		ldr	r3, [r4, #36]
 3955 0110 0133     		adds	r3, r3, #1
 3956 0112 6362     		str	r3, [r4, #36]
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 3957              		.loc 1 2349 0
 3958 0114 638D     		ldrh	r3, [r4, #42]
 3959 0116 9BB2     		uxth	r3, r3
 3960 0118 013B     		subs	r3, r3, #1
 3961 011a 9BB2     		uxth	r3, r3
 3962 011c 6385     		strh	r3, [r4, #42]	@ movhi
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3963              		.loc 1 2350 0
 3964 011e 238D     		ldrh	r3, [r4, #40]
 3965 0120 013B     		subs	r3, r3, #1
 3966 0122 9BB2     		uxth	r3, r3
 3967 0124 2385     		strh	r3, [r4, #40]	@ movhi
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3968              		.loc 1 2352 0
 3969 0126 628D     		ldrh	r2, [r4, #42]
 3970 0128 92B2     		uxth	r2, r2
 3971 012a 002A     		cmp	r2, #0
 3972 012c E0D0     		beq	.L347
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3973              		.loc 1 2352 0 is_stmt 0 discriminator 1
 3974 012e 002B     		cmp	r3, #0
 3975 0130 DED1     		bne	.L347
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3976              		.loc 1 2355 0 is_stmt 1
 3977 0132 0097     		str	r7, [sp]
 3978 0134 0C9B     		ldr	r3, [sp, #48]
 3979 0136 0022     		movs	r2, #0
 3980 0138 8021     		movs	r1, #128
 3981 013a 2046     		mov	r0, r4
 3982 013c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3983              	.LVL315:
 3984 0140 68BB     		cbnz	r0, .L354
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3985              		.loc 1 2360 0
 3986 0142 638D     		ldrh	r3, [r4, #42]
 3987 0144 9BB2     		uxth	r3, r3
 3988 0146 FF2B     		cmp	r3, #255
 3989 0148 C6D9     		bls	.L348
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 3990              		.loc 1 2362 0
 3991 014a FF22     		movs	r2, #255
 3992 014c 2285     		strh	r2, [r4, #40]	@ movhi
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3993              		.loc 1 2363 0
 3994 014e 0023     		movs	r3, #0
 3995 0150 0093     		str	r3, [sp]
 3996 0152 4FF08073 		mov	r3, #16777216
 3997 0156 3146     		mov	r1, r6
ARM GAS  /tmp/cc1k1gAU.s 			page 196


 3998 0158 2046     		mov	r0, r4
 3999 015a FFF7FEFF 		bl	I2C_TransferConfig
 4000              	.LVL316:
 4001 015e C7E7     		b	.L347
 4002              	.L362:
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4003              		.loc 1 2377 0
 4004 0160 3A46     		mov	r2, r7
 4005 0162 0C99     		ldr	r1, [sp, #48]
 4006 0164 2046     		mov	r0, r4
 4007 0166 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4008              	.LVL317:
 4009 016a 0346     		mov	r3, r0
 4010 016c C8B9     		cbnz	r0, .L355
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4011              		.loc 1 2383 0
 4012 016e 2268     		ldr	r2, [r4]
 4013 0170 2021     		movs	r1, #32
 4014 0172 D161     		str	r1, [r2, #28]
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4015              		.loc 1 2386 0
 4016 0174 2068     		ldr	r0, [r4]
 4017 0176 4268     		ldr	r2, [r0, #4]
 4018 0178 22F0FF72 		bic	r2, r2, #33423360
 4019 017c 22F48B32 		bic	r2, r2, #71168
 4020 0180 22F4FF72 		bic	r2, r2, #510
 4021 0184 22F00102 		bic	r2, r2, #1
 4022 0188 4260     		str	r2, [r0, #4]
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4023              		.loc 1 2388 0
 4024 018a 84F84110 		strb	r1, [r4, #65]
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4025              		.loc 1 2389 0
 4026 018e 0022     		movs	r2, #0
 4027 0190 84F84220 		strb	r2, [r4, #66]
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4028              		.loc 1 2392 0
 4029 0194 84F84020 		strb	r2, [r4, #64]
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4030              		.loc 1 2394 0
 4031 0198 3DE7     		b	.L342
 4032              	.L353:
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4033              		.loc 1 2340 0
 4034 019a 0123     		movs	r3, #1
 4035 019c 3BE7     		b	.L342
 4036              	.L354:
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4037              		.loc 1 2357 0
 4038 019e 0123     		movs	r3, #1
 4039 01a0 39E7     		b	.L342
 4040              	.L355:
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4041              		.loc 1 2379 0
 4042 01a2 0123     		movs	r3, #1
 4043 01a4 37E7     		b	.L342
 4044              		.cfi_endproc
ARM GAS  /tmp/cc1k1gAU.s 			page 197


 4045              	.LFE157:
 4047              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 4048              		.align	1
 4049              		.global	HAL_I2C_Mem_Read
 4050              		.syntax unified
 4051              		.thumb
 4052              		.thumb_func
 4053              		.fpu fpv5-sp-d16
 4055              	HAL_I2C_Mem_Read:
 4056              	.LFB158:
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4057              		.loc 1 2416 0
 4058              		.cfi_startproc
 4059              		@ args = 12, pretend = 0, frame = 0
 4060              		@ frame_needed = 0, uses_anonymous_args = 0
 4061              	.LVL318:
 4062 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4063              	.LCFI63:
 4064              		.cfi_def_cfa_offset 32
 4065              		.cfi_offset 4, -32
 4066              		.cfi_offset 5, -28
 4067              		.cfi_offset 6, -24
 4068              		.cfi_offset 7, -20
 4069              		.cfi_offset 8, -16
 4070              		.cfi_offset 9, -12
 4071              		.cfi_offset 10, -8
 4072              		.cfi_offset 14, -4
 4073 0004 82B0     		sub	sp, sp, #8
 4074              	.LCFI64:
 4075              		.cfi_def_cfa_offset 40
 4076 0006 BDF82C50 		ldrh	r5, [sp, #44]
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4077              		.loc 1 2422 0
 4078 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4079 000e E4B2     		uxtb	r4, r4
 4080 0010 202C     		cmp	r4, #32
 4081 0012 04D0     		beq	.L379
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4082              		.loc 1 2533 0
 4083 0014 0223     		movs	r3, #2
 4084              	.LVL319:
 4085              	.L364:
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4086              		.loc 1 2535 0
 4087 0016 1846     		mov	r0, r3
 4088 0018 02B0     		add	sp, sp, #8
 4089              	.LCFI65:
 4090              		.cfi_remember_state
 4091              		.cfi_def_cfa_offset 32
 4092              		@ sp needed
 4093 001a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4094              	.LVL320:
 4095              	.L379:
 4096              	.LCFI66:
 4097              		.cfi_restore_state
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4098              		.loc 1 2424 0
ARM GAS  /tmp/cc1k1gAU.s 			page 198


 4099 001e 0A9C     		ldr	r4, [sp, #40]
 4100 0020 002D     		cmp	r5, #0
 4101 0022 18BF     		it	ne
 4102 0024 002C     		cmpne	r4, #0
 4103 0026 05D0     		beq	.L380
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4104              		.loc 1 2431 0
 4105 0028 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4106 002c 012C     		cmp	r4, #1
 4107 002e 06D1     		bne	.L381
 4108 0030 0223     		movs	r3, #2
 4109              	.LVL321:
 4110 0032 F0E7     		b	.L364
 4111              	.LVL322:
 4112              	.L380:
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4113              		.loc 1 2426 0
 4114 0034 4FF40073 		mov	r3, #512
 4115              	.LVL323:
 4116 0038 4364     		str	r3, [r0, #68]
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4117              		.loc 1 2427 0
 4118 003a 0123     		movs	r3, #1
 4119 003c EBE7     		b	.L364
 4120              	.LVL324:
 4121              	.L381:
 4122 003e 9846     		mov	r8, r3
 4123 0040 9146     		mov	r9, r2
 4124 0042 0E46     		mov	r6, r1
 4125 0044 0446     		mov	r4, r0
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4126              		.loc 1 2431 0 discriminator 2
 4127 0046 4FF0010A 		mov	r10, #1
 4128 004a 80F840A0 		strb	r10, [r0, #64]
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4129              		.loc 1 2434 0 discriminator 2
 4130 004e FFF7FEFF 		bl	HAL_GetTick
 4131              	.LVL325:
 4132 0052 0746     		mov	r7, r0
 4133              	.LVL326:
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4134              		.loc 1 2436 0 discriminator 2
 4135 0054 0090     		str	r0, [sp]
 4136 0056 1923     		movs	r3, #25
 4137 0058 5246     		mov	r2, r10
 4138 005a 4FF40041 		mov	r1, #32768
 4139 005e 2046     		mov	r0, r4
 4140              	.LVL327:
 4141 0060 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4142              	.LVL328:
 4143 0064 08B1     		cbz	r0, .L382
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4144              		.loc 1 2438 0
 4145 0066 0123     		movs	r3, #1
 4146 0068 D5E7     		b	.L364
 4147              	.L382:
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
ARM GAS  /tmp/cc1k1gAU.s 			page 199


 4148              		.loc 1 2441 0
 4149 006a 2223     		movs	r3, #34
 4150 006c 84F84130 		strb	r3, [r4, #65]
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4151              		.loc 1 2442 0
 4152 0070 4023     		movs	r3, #64
 4153 0072 84F84230 		strb	r3, [r4, #66]
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4154              		.loc 1 2443 0
 4155 0076 0023     		movs	r3, #0
 4156 0078 6364     		str	r3, [r4, #68]
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4157              		.loc 1 2446 0
 4158 007a 0A9A     		ldr	r2, [sp, #40]
 4159 007c 6262     		str	r2, [r4, #36]
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4160              		.loc 1 2447 0
 4161 007e 6585     		strh	r5, [r4, #42]	@ movhi
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4162              		.loc 1 2448 0
 4163 0080 6363     		str	r3, [r4, #52]
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4164              		.loc 1 2451 0
 4165 0082 0197     		str	r7, [sp, #4]
 4166 0084 0C9B     		ldr	r3, [sp, #48]
 4167 0086 0093     		str	r3, [sp]
 4168 0088 4346     		mov	r3, r8
 4169 008a 4A46     		mov	r2, r9
 4170 008c 3146     		mov	r1, r6
 4171 008e 2046     		mov	r0, r4
 4172 0090 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4173              	.LVL329:
 4174 0094 70B9     		cbnz	r0, .L383
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4175              		.loc 1 2460 0
 4176 0096 638D     		ldrh	r3, [r4, #42]
 4177 0098 9BB2     		uxth	r3, r3
 4178 009a FF2B     		cmp	r3, #255
 4179 009c 0FD9     		bls	.L367
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 4180              		.loc 1 2462 0
 4181 009e FF22     		movs	r2, #255
 4182 00a0 2285     		strh	r2, [r4, #40]	@ movhi
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4183              		.loc 1 2463 0
 4184 00a2 414B     		ldr	r3, .L385
 4185 00a4 0093     		str	r3, [sp]
 4186 00a6 4FF08073 		mov	r3, #16777216
 4187 00aa 3146     		mov	r1, r6
 4188 00ac 2046     		mov	r0, r4
 4189 00ae FFF7FEFF 		bl	I2C_TransferConfig
 4190              	.LVL330:
 4191 00b2 21E0     		b	.L371
 4192              	.L383:
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4193              		.loc 1 2454 0
 4194 00b4 0023     		movs	r3, #0
ARM GAS  /tmp/cc1k1gAU.s 			page 200


 4195 00b6 84F84030 		strb	r3, [r4, #64]
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4196              		.loc 1 2455 0
 4197 00ba 5346     		mov	r3, r10
 4198 00bc ABE7     		b	.L364
 4199              	.L367:
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 4200              		.loc 1 2467 0
 4201 00be 628D     		ldrh	r2, [r4, #42]
 4202 00c0 92B2     		uxth	r2, r2
 4203 00c2 2285     		strh	r2, [r4, #40]	@ movhi
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4204              		.loc 1 2468 0
 4205 00c4 384B     		ldr	r3, .L385
 4206 00c6 0093     		str	r3, [sp]
 4207 00c8 4FF00073 		mov	r3, #33554432
 4208 00cc D2B2     		uxtb	r2, r2
 4209 00ce 3146     		mov	r1, r6
 4210 00d0 2046     		mov	r0, r4
 4211 00d2 FFF7FEFF 		bl	I2C_TransferConfig
 4212              	.LVL331:
 4213 00d6 0FE0     		b	.L371
 4214              	.L370:
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 4215              		.loc 1 2503 0
 4216 00d8 628D     		ldrh	r2, [r4, #42]
 4217 00da 92B2     		uxth	r2, r2
 4218 00dc 2285     		strh	r2, [r4, #40]	@ movhi
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4219              		.loc 1 2504 0
 4220 00de 0023     		movs	r3, #0
 4221 00e0 0093     		str	r3, [sp]
 4222 00e2 4FF00073 		mov	r3, #33554432
 4223 00e6 D2B2     		uxtb	r2, r2
 4224 00e8 3146     		mov	r1, r6
 4225 00ea 2046     		mov	r0, r4
 4226 00ec FFF7FEFF 		bl	I2C_TransferConfig
 4227              	.LVL332:
 4228              	.L369:
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4229              		.loc 1 2508 0
 4230 00f0 638D     		ldrh	r3, [r4, #42]
 4231 00f2 9BB2     		uxth	r3, r3
 4232 00f4 002B     		cmp	r3, #0
 4233 00f6 34D0     		beq	.L384
 4234              	.L371:
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4235              		.loc 1 2474 0
 4236 00f8 0097     		str	r7, [sp]
 4237 00fa 0C9B     		ldr	r3, [sp, #48]
 4238 00fc 0022     		movs	r2, #0
 4239 00fe 0421     		movs	r1, #4
 4240 0100 2046     		mov	r0, r4
 4241 0102 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4242              	.LVL333:
 4243 0106 0028     		cmp	r0, #0
 4244 0108 48D1     		bne	.L375
ARM GAS  /tmp/cc1k1gAU.s 			page 201


2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4245              		.loc 1 2480 0
 4246 010a 636A     		ldr	r3, [r4, #36]
 4247 010c 2268     		ldr	r2, [r4]
 4248 010e 526A     		ldr	r2, [r2, #36]
 4249 0110 1A70     		strb	r2, [r3]
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4250              		.loc 1 2483 0
 4251 0112 636A     		ldr	r3, [r4, #36]
 4252 0114 0133     		adds	r3, r3, #1
 4253 0116 6362     		str	r3, [r4, #36]
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 4254              		.loc 1 2485 0
 4255 0118 228D     		ldrh	r2, [r4, #40]
 4256 011a 013A     		subs	r2, r2, #1
 4257 011c 92B2     		uxth	r2, r2
 4258 011e 2285     		strh	r2, [r4, #40]	@ movhi
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4259              		.loc 1 2486 0
 4260 0120 638D     		ldrh	r3, [r4, #42]
 4261 0122 9BB2     		uxth	r3, r3
 4262 0124 013B     		subs	r3, r3, #1
 4263 0126 9BB2     		uxth	r3, r3
 4264 0128 6385     		strh	r3, [r4, #42]	@ movhi
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4265              		.loc 1 2488 0
 4266 012a 638D     		ldrh	r3, [r4, #42]
 4267 012c 9BB2     		uxth	r3, r3
 4268 012e 002B     		cmp	r3, #0
 4269 0130 DED0     		beq	.L369
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4270              		.loc 1 2488 0 is_stmt 0 discriminator 1
 4271 0132 002A     		cmp	r2, #0
 4272 0134 DCD1     		bne	.L369
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4273              		.loc 1 2491 0 is_stmt 1
 4274 0136 0097     		str	r7, [sp]
 4275 0138 0C9B     		ldr	r3, [sp, #48]
 4276 013a 8021     		movs	r1, #128
 4277 013c 2046     		mov	r0, r4
 4278 013e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4279              	.LVL334:
 4280 0142 68BB     		cbnz	r0, .L376
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4281              		.loc 1 2496 0
 4282 0144 638D     		ldrh	r3, [r4, #42]
 4283 0146 9BB2     		uxth	r3, r3
 4284 0148 FF2B     		cmp	r3, #255
 4285 014a C5D9     		bls	.L370
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
 4286              		.loc 1 2498 0
 4287 014c FF22     		movs	r2, #255
 4288 014e 2285     		strh	r2, [r4, #40]	@ movhi
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4289              		.loc 1 2499 0
 4290 0150 0023     		movs	r3, #0
 4291 0152 0093     		str	r3, [sp]
ARM GAS  /tmp/cc1k1gAU.s 			page 202


 4292 0154 4FF08073 		mov	r3, #16777216
 4293 0158 3146     		mov	r1, r6
 4294 015a 2046     		mov	r0, r4
 4295 015c FFF7FEFF 		bl	I2C_TransferConfig
 4296              	.LVL335:
 4297 0160 C6E7     		b	.L369
 4298              	.L384:
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4299              		.loc 1 2512 0
 4300 0162 3A46     		mov	r2, r7
 4301 0164 0C99     		ldr	r1, [sp, #48]
 4302 0166 2046     		mov	r0, r4
 4303 0168 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4304              	.LVL336:
 4305 016c 0346     		mov	r3, r0
 4306 016e C8B9     		cbnz	r0, .L377
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4307              		.loc 1 2518 0
 4308 0170 2268     		ldr	r2, [r4]
 4309 0172 2021     		movs	r1, #32
 4310 0174 D161     		str	r1, [r2, #28]
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4311              		.loc 1 2521 0
 4312 0176 2068     		ldr	r0, [r4]
 4313 0178 4268     		ldr	r2, [r0, #4]
 4314 017a 22F0FF72 		bic	r2, r2, #33423360
 4315 017e 22F48B32 		bic	r2, r2, #71168
 4316 0182 22F4FF72 		bic	r2, r2, #510
 4317 0186 22F00102 		bic	r2, r2, #1
 4318 018a 4260     		str	r2, [r0, #4]
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4319              		.loc 1 2523 0
 4320 018c 84F84110 		strb	r1, [r4, #65]
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4321              		.loc 1 2524 0
 4322 0190 0022     		movs	r2, #0
 4323 0192 84F84220 		strb	r2, [r4, #66]
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4324              		.loc 1 2527 0
 4325 0196 84F84020 		strb	r2, [r4, #64]
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4326              		.loc 1 2529 0
 4327 019a 3CE7     		b	.L364
 4328              	.L375:
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4329              		.loc 1 2476 0
 4330 019c 0123     		movs	r3, #1
 4331 019e 3AE7     		b	.L364
 4332              	.L376:
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4333              		.loc 1 2493 0
 4334 01a0 0123     		movs	r3, #1
 4335 01a2 38E7     		b	.L364
 4336              	.L377:
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4337              		.loc 1 2514 0
 4338 01a4 0123     		movs	r3, #1
ARM GAS  /tmp/cc1k1gAU.s 			page 203


 4339 01a6 36E7     		b	.L364
 4340              	.L386:
 4341              		.align	2
 4342              	.L385:
 4343 01a8 00240080 		.word	-2147474432
 4344              		.cfi_endproc
 4345              	.LFE158:
 4347              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4348              		.align	1
 4349              		.global	HAL_I2C_Mem_Write_IT
 4350              		.syntax unified
 4351              		.thumb
 4352              		.thumb_func
 4353              		.fpu fpv5-sp-d16
 4355              	HAL_I2C_Mem_Write_IT:
 4356              	.LFB159:
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4357              		.loc 1 2549 0
 4358              		.cfi_startproc
 4359              		@ args = 8, pretend = 0, frame = 0
 4360              		@ frame_needed = 0, uses_anonymous_args = 0
 4361              	.LVL337:
 4362 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4363              	.LCFI67:
 4364              		.cfi_def_cfa_offset 24
 4365              		.cfi_offset 4, -24
 4366              		.cfi_offset 5, -20
 4367              		.cfi_offset 6, -16
 4368              		.cfi_offset 7, -12
 4369              		.cfi_offset 8, -8
 4370              		.cfi_offset 14, -4
 4371 0004 82B0     		sub	sp, sp, #8
 4372              	.LCFI68:
 4373              		.cfi_def_cfa_offset 32
 4374 0006 BDF82450 		ldrh	r5, [sp, #36]
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4375              		.loc 1 2556 0
 4376 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4377 000e E4B2     		uxtb	r4, r4
 4378 0010 202C     		cmp	r4, #32
 4379 0012 04D0     		beq	.L397
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4380              		.loc 1 2623 0
 4381 0014 0224     		movs	r4, #2
 4382              	.LVL338:
 4383              	.L388:
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4384              		.loc 1 2625 0
 4385 0016 2046     		mov	r0, r4
 4386 0018 02B0     		add	sp, sp, #8
 4387              	.LCFI69:
 4388              		.cfi_remember_state
 4389              		.cfi_def_cfa_offset 24
 4390              		@ sp needed
 4391 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4392              	.LVL339:
 4393              	.L397:
ARM GAS  /tmp/cc1k1gAU.s 			page 204


 4394              	.LCFI70:
 4395              		.cfi_restore_state
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4396              		.loc 1 2558 0
 4397 001e 089C     		ldr	r4, [sp, #32]
 4398 0020 002D     		cmp	r5, #0
 4399 0022 18BF     		it	ne
 4400 0024 002C     		cmpne	r4, #0
 4401 0026 06D0     		beq	.L398
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4402              		.loc 1 2564 0
 4403 0028 0468     		ldr	r4, [r0]
 4404 002a A469     		ldr	r4, [r4, #24]
 4405 002c 14F4004F 		tst	r4, #32768
 4406 0030 06D0     		beq	.L399
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4407              		.loc 1 2566 0
 4408 0032 0224     		movs	r4, #2
 4409 0034 EFE7     		b	.L388
 4410              	.L398:
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4411              		.loc 1 2560 0
 4412 0036 4FF40073 		mov	r3, #512
 4413              	.LVL340:
 4414 003a 4364     		str	r3, [r0, #68]
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4415              		.loc 1 2561 0
 4416 003c 0124     		movs	r4, #1
 4417 003e EAE7     		b	.L388
 4418              	.LVL341:
 4419              	.L399:
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4420              		.loc 1 2570 0
 4421 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4422 0044 012C     		cmp	r4, #1
 4423 0046 01D1     		bne	.L400
 4424 0048 0224     		movs	r4, #2
 4425 004a E4E7     		b	.L388
 4426              	.L400:
 4427 004c 1F46     		mov	r7, r3
 4428 004e 1446     		mov	r4, r2
 4429 0050 0E46     		mov	r6, r1
 4430 0052 8046     		mov	r8, r0
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4431              		.loc 1 2570 0 is_stmt 0 discriminator 2
 4432 0054 0123     		movs	r3, #1
 4433              	.LVL342:
 4434 0056 80F84030 		strb	r3, [r0, #64]
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4435              		.loc 1 2573 0 is_stmt 1 discriminator 2
 4436 005a FFF7FEFF 		bl	HAL_GetTick
 4437              	.LVL343:
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4438              		.loc 1 2575 0 discriminator 2
 4439 005e 2123     		movs	r3, #33
 4440 0060 88F84130 		strb	r3, [r8, #65]
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
ARM GAS  /tmp/cc1k1gAU.s 			page 205


 4441              		.loc 1 2576 0 discriminator 2
 4442 0064 4023     		movs	r3, #64
 4443 0066 88F84230 		strb	r3, [r8, #66]
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4444              		.loc 1 2577 0 discriminator 2
 4445 006a 0023     		movs	r3, #0
 4446 006c C8F84430 		str	r3, [r8, #68]
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4447              		.loc 1 2580 0 discriminator 2
 4448 0070 089B     		ldr	r3, [sp, #32]
 4449 0072 C8F82430 		str	r3, [r8, #36]
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4450              		.loc 1 2581 0 discriminator 2
 4451 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4452              		.loc 1 2582 0 discriminator 2
 4453 007a 1B4B     		ldr	r3, .L401
 4454 007c C8F82C30 		str	r3, [r8, #44]
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4455              		.loc 1 2583 0 discriminator 2
 4456 0080 1A4B     		ldr	r3, .L401+4
 4457 0082 C8F83430 		str	r3, [r8, #52]
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4458              		.loc 1 2585 0 discriminator 2
 4459 0086 B8F82A30 		ldrh	r3, [r8, #42]
 4460 008a 9BB2     		uxth	r3, r3
 4461 008c FF2B     		cmp	r3, #255
 4462 008e 14D9     		bls	.L390
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4463              		.loc 1 2587 0
 4464 0090 FF23     		movs	r3, #255
 4465 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4466              	.LVL344:
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4467              		.loc 1 2588 0
 4468 0096 4FF08075 		mov	r5, #16777216
 4469              	.LVL345:
 4470              	.L391:
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4471              		.loc 1 2597 0
 4472 009a 0190     		str	r0, [sp, #4]
 4473 009c 1923     		movs	r3, #25
 4474 009e 0093     		str	r3, [sp]
 4475 00a0 3B46     		mov	r3, r7
 4476 00a2 2246     		mov	r2, r4
 4477 00a4 3146     		mov	r1, r6
 4478 00a6 4046     		mov	r0, r8
 4479              	.LVL346:
 4480 00a8 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4481              	.LVL347:
 4482 00ac 0446     		mov	r4, r0
 4483 00ae 58B1     		cbz	r0, .L392
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4484              		.loc 1 2600 0
 4485 00b0 0023     		movs	r3, #0
 4486 00b2 88F84030 		strb	r3, [r8, #64]
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1k1gAU.s 			page 206


 4487              		.loc 1 2601 0
 4488 00b6 0124     		movs	r4, #1
 4489 00b8 ADE7     		b	.L388
 4490              	.LVL348:
 4491              	.L390:
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4492              		.loc 1 2592 0
 4493 00ba B8F82A30 		ldrh	r3, [r8, #42]
 4494 00be A8F82830 		strh	r3, [r8, #40]	@ movhi
 4495              	.LVL349:
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4496              		.loc 1 2593 0
 4497 00c2 4FF00075 		mov	r5, #33554432
 4498 00c6 E8E7     		b	.L391
 4499              	.LVL350:
 4500              	.L392:
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4501              		.loc 1 2605 0
 4502 00c8 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4503 00cc 0027     		movs	r7, #0
 4504 00ce 0097     		str	r7, [sp]
 4505 00d0 2B46     		mov	r3, r5
 4506 00d2 3146     		mov	r1, r6
 4507 00d4 4046     		mov	r0, r8
 4508 00d6 FFF7FEFF 		bl	I2C_TransferConfig
 4509              	.LVL351:
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4510              		.loc 1 2608 0
 4511 00da 88F84070 		strb	r7, [r8, #64]
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4512              		.loc 1 2617 0
 4513 00de 0121     		movs	r1, #1
 4514 00e0 4046     		mov	r0, r8
 4515 00e2 FFF7FEFF 		bl	I2C_Enable_IRQ
 4516              	.LVL352:
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4517              		.loc 1 2619 0
 4518 00e6 96E7     		b	.L388
 4519              	.L402:
 4520              		.align	2
 4521              	.L401:
 4522 00e8 0000FFFF 		.word	-65536
 4523 00ec 00000000 		.word	I2C_Master_ISR_IT
 4524              		.cfi_endproc
 4525              	.LFE159:
 4527              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4528              		.align	1
 4529              		.global	HAL_I2C_Mem_Read_IT
 4530              		.syntax unified
 4531              		.thumb
 4532              		.thumb_func
 4533              		.fpu fpv5-sp-d16
 4535              	HAL_I2C_Mem_Read_IT:
 4536              	.LFB160:
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4537              		.loc 1 2640 0
 4538              		.cfi_startproc
ARM GAS  /tmp/cc1k1gAU.s 			page 207


 4539              		@ args = 8, pretend = 0, frame = 0
 4540              		@ frame_needed = 0, uses_anonymous_args = 0
 4541              	.LVL353:
 4542 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4543              	.LCFI71:
 4544              		.cfi_def_cfa_offset 24
 4545              		.cfi_offset 4, -24
 4546              		.cfi_offset 5, -20
 4547              		.cfi_offset 6, -16
 4548              		.cfi_offset 7, -12
 4549              		.cfi_offset 8, -8
 4550              		.cfi_offset 14, -4
 4551 0004 82B0     		sub	sp, sp, #8
 4552              	.LCFI72:
 4553              		.cfi_def_cfa_offset 32
 4554 0006 BDF82450 		ldrh	r5, [sp, #36]
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4555              		.loc 1 2647 0
 4556 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4557 000e E4B2     		uxtb	r4, r4
 4558 0010 202C     		cmp	r4, #32
 4559 0012 04D0     		beq	.L413
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4560              		.loc 1 2714 0
 4561 0014 0224     		movs	r4, #2
 4562              	.LVL354:
 4563              	.L404:
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4564              		.loc 1 2716 0
 4565 0016 2046     		mov	r0, r4
 4566 0018 02B0     		add	sp, sp, #8
 4567              	.LCFI73:
 4568              		.cfi_remember_state
 4569              		.cfi_def_cfa_offset 24
 4570              		@ sp needed
 4571 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4572              	.LVL355:
 4573              	.L413:
 4574              	.LCFI74:
 4575              		.cfi_restore_state
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4576              		.loc 1 2649 0
 4577 001e 089C     		ldr	r4, [sp, #32]
 4578 0020 002D     		cmp	r5, #0
 4579 0022 18BF     		it	ne
 4580 0024 002C     		cmpne	r4, #0
 4581 0026 06D0     		beq	.L414
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4582              		.loc 1 2655 0
 4583 0028 0468     		ldr	r4, [r0]
 4584 002a A469     		ldr	r4, [r4, #24]
 4585 002c 14F4004F 		tst	r4, #32768
 4586 0030 06D0     		beq	.L415
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4587              		.loc 1 2657 0
 4588 0032 0224     		movs	r4, #2
 4589 0034 EFE7     		b	.L404
ARM GAS  /tmp/cc1k1gAU.s 			page 208


 4590              	.L414:
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4591              		.loc 1 2651 0
 4592 0036 4FF40073 		mov	r3, #512
 4593              	.LVL356:
 4594 003a 4364     		str	r3, [r0, #68]
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4595              		.loc 1 2652 0
 4596 003c 0124     		movs	r4, #1
 4597 003e EAE7     		b	.L404
 4598              	.LVL357:
 4599              	.L415:
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4600              		.loc 1 2661 0
 4601 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4602 0044 012C     		cmp	r4, #1
 4603 0046 01D1     		bne	.L416
 4604 0048 0224     		movs	r4, #2
 4605 004a E4E7     		b	.L404
 4606              	.L416:
 4607 004c 1F46     		mov	r7, r3
 4608 004e 1446     		mov	r4, r2
 4609 0050 0E46     		mov	r6, r1
 4610 0052 8046     		mov	r8, r0
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4611              		.loc 1 2661 0 is_stmt 0 discriminator 2
 4612 0054 0123     		movs	r3, #1
 4613              	.LVL358:
 4614 0056 80F84030 		strb	r3, [r0, #64]
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4615              		.loc 1 2664 0 is_stmt 1 discriminator 2
 4616 005a FFF7FEFF 		bl	HAL_GetTick
 4617              	.LVL359:
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4618              		.loc 1 2666 0 discriminator 2
 4619 005e 2223     		movs	r3, #34
 4620 0060 88F84130 		strb	r3, [r8, #65]
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4621              		.loc 1 2667 0 discriminator 2
 4622 0064 4023     		movs	r3, #64
 4623 0066 88F84230 		strb	r3, [r8, #66]
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4624              		.loc 1 2668 0 discriminator 2
 4625 006a 0023     		movs	r3, #0
 4626 006c C8F84430 		str	r3, [r8, #68]
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4627              		.loc 1 2671 0 discriminator 2
 4628 0070 089B     		ldr	r3, [sp, #32]
 4629 0072 C8F82430 		str	r3, [r8, #36]
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4630              		.loc 1 2672 0 discriminator 2
 4631 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4632              		.loc 1 2673 0 discriminator 2
 4633 007a 1C4B     		ldr	r3, .L417
 4634 007c C8F82C30 		str	r3, [r8, #44]
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 209


 4635              		.loc 1 2674 0 discriminator 2
 4636 0080 1B4B     		ldr	r3, .L417+4
 4637 0082 C8F83430 		str	r3, [r8, #52]
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4638              		.loc 1 2676 0 discriminator 2
 4639 0086 B8F82A30 		ldrh	r3, [r8, #42]
 4640 008a 9BB2     		uxth	r3, r3
 4641 008c FF2B     		cmp	r3, #255
 4642 008e 14D9     		bls	.L406
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4643              		.loc 1 2678 0
 4644 0090 FF23     		movs	r3, #255
 4645 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4646              	.LVL360:
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4647              		.loc 1 2679 0
 4648 0096 4FF08075 		mov	r5, #16777216
 4649              	.LVL361:
 4650              	.L407:
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4651              		.loc 1 2688 0
 4652 009a 0190     		str	r0, [sp, #4]
 4653 009c 1923     		movs	r3, #25
 4654 009e 0093     		str	r3, [sp]
 4655 00a0 3B46     		mov	r3, r7
 4656 00a2 2246     		mov	r2, r4
 4657 00a4 3146     		mov	r1, r6
 4658 00a6 4046     		mov	r0, r8
 4659              	.LVL362:
 4660 00a8 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4661              	.LVL363:
 4662 00ac 0446     		mov	r4, r0
 4663 00ae 58B1     		cbz	r0, .L408
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4664              		.loc 1 2691 0
 4665 00b0 0023     		movs	r3, #0
 4666 00b2 88F84030 		strb	r3, [r8, #64]
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4667              		.loc 1 2692 0
 4668 00b6 0124     		movs	r4, #1
 4669 00b8 ADE7     		b	.L404
 4670              	.LVL364:
 4671              	.L406:
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4672              		.loc 1 2683 0
 4673 00ba B8F82A30 		ldrh	r3, [r8, #42]
 4674 00be A8F82830 		strh	r3, [r8, #40]	@ movhi
 4675              	.LVL365:
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4676              		.loc 1 2684 0
 4677 00c2 4FF00075 		mov	r5, #33554432
 4678 00c6 E8E7     		b	.L407
 4679              	.LVL366:
 4680              	.L408:
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4681              		.loc 1 2696 0
 4682 00c8 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
ARM GAS  /tmp/cc1k1gAU.s 			page 210


 4683 00cc 094B     		ldr	r3, .L417+8
 4684 00ce 0093     		str	r3, [sp]
 4685 00d0 2B46     		mov	r3, r5
 4686 00d2 3146     		mov	r1, r6
 4687 00d4 4046     		mov	r0, r8
 4688 00d6 FFF7FEFF 		bl	I2C_TransferConfig
 4689              	.LVL367:
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4690              		.loc 1 2699 0
 4691 00da 0023     		movs	r3, #0
 4692 00dc 88F84030 		strb	r3, [r8, #64]
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4693              		.loc 1 2708 0
 4694 00e0 0221     		movs	r1, #2
 4695 00e2 4046     		mov	r0, r8
 4696 00e4 FFF7FEFF 		bl	I2C_Enable_IRQ
 4697              	.LVL368:
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4698              		.loc 1 2710 0
 4699 00e8 95E7     		b	.L404
 4700              	.L418:
 4701 00ea 00BF     		.align	2
 4702              	.L417:
 4703 00ec 0000FFFF 		.word	-65536
 4704 00f0 00000000 		.word	I2C_Master_ISR_IT
 4705 00f4 00240080 		.word	-2147474432
 4706              		.cfi_endproc
 4707              	.LFE160:
 4709              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4710              		.align	1
 4711              		.global	HAL_I2C_Mem_Write_DMA
 4712              		.syntax unified
 4713              		.thumb
 4714              		.thumb_func
 4715              		.fpu fpv5-sp-d16
 4717              	HAL_I2C_Mem_Write_DMA:
 4718              	.LFB161:
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4719              		.loc 1 2730 0
 4720              		.cfi_startproc
 4721              		@ args = 8, pretend = 0, frame = 0
 4722              		@ frame_needed = 0, uses_anonymous_args = 0
 4723              	.LVL369:
 4724 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4725              	.LCFI75:
 4726              		.cfi_def_cfa_offset 24
 4727              		.cfi_offset 4, -24
 4728              		.cfi_offset 5, -20
 4729              		.cfi_offset 6, -16
 4730              		.cfi_offset 7, -12
 4731              		.cfi_offset 8, -8
 4732              		.cfi_offset 14, -4
 4733 0004 82B0     		sub	sp, sp, #8
 4734              	.LCFI76:
 4735              		.cfi_def_cfa_offset 32
 4736 0006 BDF82450 		ldrh	r5, [sp, #36]
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1k1gAU.s 			page 211


 4737              		.loc 1 2738 0
 4738 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4739 000e E4B2     		uxtb	r4, r4
 4740 0010 202C     		cmp	r4, #32
 4741 0012 04D0     		beq	.L433
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4742              		.loc 1 2857 0
 4743 0014 0224     		movs	r4, #2
 4744              	.LVL370:
 4745              	.L420:
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4746              		.loc 1 2859 0
 4747 0016 2046     		mov	r0, r4
 4748 0018 02B0     		add	sp, sp, #8
 4749              	.LCFI77:
 4750              		.cfi_remember_state
 4751              		.cfi_def_cfa_offset 24
 4752              		@ sp needed
 4753 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4754              	.LVL371:
 4755              	.L433:
 4756              	.LCFI78:
 4757              		.cfi_restore_state
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4758              		.loc 1 2740 0
 4759 001e 089C     		ldr	r4, [sp, #32]
 4760 0020 002D     		cmp	r5, #0
 4761 0022 18BF     		it	ne
 4762 0024 002C     		cmpne	r4, #0
 4763 0026 06D0     		beq	.L434
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4764              		.loc 1 2746 0
 4765 0028 0468     		ldr	r4, [r0]
 4766 002a A469     		ldr	r4, [r4, #24]
 4767 002c 14F4004F 		tst	r4, #32768
 4768 0030 06D0     		beq	.L435
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4769              		.loc 1 2748 0
 4770 0032 0224     		movs	r4, #2
 4771 0034 EFE7     		b	.L420
 4772              	.L434:
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4773              		.loc 1 2742 0
 4774 0036 4FF40073 		mov	r3, #512
 4775              	.LVL372:
 4776 003a 4364     		str	r3, [r0, #68]
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4777              		.loc 1 2743 0
 4778 003c 0124     		movs	r4, #1
 4779 003e EAE7     		b	.L420
 4780              	.LVL373:
 4781              	.L435:
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4782              		.loc 1 2752 0
 4783 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4784 0044 012C     		cmp	r4, #1
 4785 0046 01D1     		bne	.L436
ARM GAS  /tmp/cc1k1gAU.s 			page 212


 4786 0048 0224     		movs	r4, #2
 4787 004a E4E7     		b	.L420
 4788              	.L436:
 4789 004c 1F46     		mov	r7, r3
 4790 004e 1446     		mov	r4, r2
 4791 0050 0E46     		mov	r6, r1
 4792 0052 8046     		mov	r8, r0
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4793              		.loc 1 2752 0 is_stmt 0 discriminator 2
 4794 0054 0123     		movs	r3, #1
 4795              	.LVL374:
 4796 0056 80F84030 		strb	r3, [r0, #64]
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4797              		.loc 1 2755 0 is_stmt 1 discriminator 2
 4798 005a FFF7FEFF 		bl	HAL_GetTick
 4799              	.LVL375:
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4800              		.loc 1 2757 0 discriminator 2
 4801 005e 2123     		movs	r3, #33
 4802 0060 88F84130 		strb	r3, [r8, #65]
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4803              		.loc 1 2758 0 discriminator 2
 4804 0064 4023     		movs	r3, #64
 4805 0066 88F84230 		strb	r3, [r8, #66]
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4806              		.loc 1 2759 0 discriminator 2
 4807 006a 0023     		movs	r3, #0
 4808 006c C8F84430 		str	r3, [r8, #68]
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4809              		.loc 1 2762 0 discriminator 2
 4810 0070 089B     		ldr	r3, [sp, #32]
 4811 0072 C8F82430 		str	r3, [r8, #36]
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4812              		.loc 1 2763 0 discriminator 2
 4813 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4814              		.loc 1 2764 0 discriminator 2
 4815 007a 404B     		ldr	r3, .L439
 4816 007c C8F82C30 		str	r3, [r8, #44]
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4817              		.loc 1 2765 0 discriminator 2
 4818 0080 3F4B     		ldr	r3, .L439+4
 4819 0082 C8F83430 		str	r3, [r8, #52]
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4820              		.loc 1 2767 0 discriminator 2
 4821 0086 B8F82A30 		ldrh	r3, [r8, #42]
 4822 008a 9BB2     		uxth	r3, r3
 4823 008c FF2B     		cmp	r3, #255
 4824 008e 3AD9     		bls	.L422
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4825              		.loc 1 2769 0
 4826 0090 FF23     		movs	r3, #255
 4827 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4828              	.LVL376:
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4829              		.loc 1 2770 0
 4830 0096 4FF08075 		mov	r5, #16777216
ARM GAS  /tmp/cc1k1gAU.s 			page 213


 4831              	.LVL377:
 4832              	.L423:
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4833              		.loc 1 2779 0
 4834 009a 0190     		str	r0, [sp, #4]
 4835 009c 1923     		movs	r3, #25
 4836 009e 0093     		str	r3, [sp]
 4837 00a0 3B46     		mov	r3, r7
 4838 00a2 2246     		mov	r2, r4
 4839 00a4 3146     		mov	r1, r6
 4840 00a6 4046     		mov	r0, r8
 4841              	.LVL378:
 4842 00a8 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4843              	.LVL379:
 4844 00ac 90BB     		cbnz	r0, .L437
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4845              		.loc 1 2787 0
 4846 00ae D8F83830 		ldr	r3, [r8, #56]
 4847 00b2 A3B3     		cbz	r3, .L425
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4848              		.loc 1 2790 0
 4849 00b4 334A     		ldr	r2, .L439+8
 4850 00b6 DA63     		str	r2, [r3, #60]
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4851              		.loc 1 2793 0
 4852 00b8 D8F83830 		ldr	r3, [r8, #56]
 4853 00bc 324A     		ldr	r2, .L439+12
 4854 00be DA64     		str	r2, [r3, #76]
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 4855              		.loc 1 2796 0
 4856 00c0 D8F83820 		ldr	r2, [r8, #56]
 4857 00c4 0023     		movs	r3, #0
 4858 00c6 1364     		str	r3, [r2, #64]
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4859              		.loc 1 2797 0
 4860 00c8 D8F83820 		ldr	r2, [r8, #56]
 4861 00cc 1365     		str	r3, [r2, #80]
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4862              		.loc 1 2800 0
 4863 00ce D8F80020 		ldr	r2, [r8]
 4864 00d2 B8F82830 		ldrh	r3, [r8, #40]
 4865 00d6 2832     		adds	r2, r2, #40
 4866 00d8 0899     		ldr	r1, [sp, #32]
 4867 00da D8F83800 		ldr	r0, [r8, #56]
 4868 00de FFF7FEFF 		bl	HAL_DMA_Start_IT
 4869              	.LVL380:
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4870              		.loc 1 2817 0
 4871 00e2 0446     		mov	r4, r0
 4872 00e4 58B3     		cbz	r0, .L438
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4873              		.loc 1 2841 0
 4874 00e6 2023     		movs	r3, #32
 4875 00e8 88F84130 		strb	r3, [r8, #65]
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4876              		.loc 1 2842 0
 4877 00ec 0022     		movs	r2, #0
ARM GAS  /tmp/cc1k1gAU.s 			page 214


 4878 00ee 88F84220 		strb	r2, [r8, #66]
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4879              		.loc 1 2845 0
 4880 00f2 D8F84430 		ldr	r3, [r8, #68]
 4881 00f6 43F01003 		orr	r3, r3, #16
 4882 00fa C8F84430 		str	r3, [r8, #68]
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4883              		.loc 1 2848 0
 4884 00fe 88F84020 		strb	r2, [r8, #64]
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4885              		.loc 1 2850 0
 4886 0102 0124     		movs	r4, #1
 4887 0104 87E7     		b	.L420
 4888              	.LVL381:
 4889              	.L422:
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4890              		.loc 1 2774 0
 4891 0106 B8F82A30 		ldrh	r3, [r8, #42]
 4892 010a A8F82830 		strh	r3, [r8, #40]	@ movhi
 4893              	.LVL382:
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4894              		.loc 1 2775 0
 4895 010e 4FF00075 		mov	r5, #33554432
 4896 0112 C2E7     		b	.L423
 4897              	.LVL383:
 4898              	.L437:
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4899              		.loc 1 2782 0
 4900 0114 0023     		movs	r3, #0
 4901 0116 88F84030 		strb	r3, [r8, #64]
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4902              		.loc 1 2783 0
 4903 011a 0124     		movs	r4, #1
 4904 011c 7BE7     		b	.L420
 4905              	.L425:
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4906              		.loc 1 2805 0
 4907 011e 2023     		movs	r3, #32
 4908 0120 88F84130 		strb	r3, [r8, #65]
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4909              		.loc 1 2806 0
 4910 0124 0022     		movs	r2, #0
 4911 0126 88F84220 		strb	r2, [r8, #66]
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4912              		.loc 1 2809 0
 4913 012a D8F84430 		ldr	r3, [r8, #68]
 4914 012e 43F08003 		orr	r3, r3, #128
 4915 0132 C8F84430 		str	r3, [r8, #68]
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4916              		.loc 1 2812 0
 4917 0136 88F84020 		strb	r2, [r8, #64]
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4918              		.loc 1 2814 0
 4919 013a 0124     		movs	r4, #1
 4920 013c 6BE7     		b	.L420
 4921              	.LVL384:
 4922              	.L438:
ARM GAS  /tmp/cc1k1gAU.s 			page 215


2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4923              		.loc 1 2821 0
 4924 013e 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4925 0142 0027     		movs	r7, #0
 4926 0144 0097     		str	r7, [sp]
 4927 0146 2B46     		mov	r3, r5
 4928 0148 3146     		mov	r1, r6
 4929 014a 4046     		mov	r0, r8
 4930              	.LVL385:
 4931 014c FFF7FEFF 		bl	I2C_TransferConfig
 4932              	.LVL386:
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4933              		.loc 1 2824 0
 4934 0150 B8F82A30 		ldrh	r3, [r8, #42]
 4935 0154 9BB2     		uxth	r3, r3
 4936 0156 B8F82820 		ldrh	r2, [r8, #40]
 4937 015a 9B1A     		subs	r3, r3, r2
 4938 015c 9BB2     		uxth	r3, r3
 4939 015e A8F82A30 		strh	r3, [r8, #42]	@ movhi
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4940              		.loc 1 2827 0
 4941 0162 88F84070 		strb	r7, [r8, #64]
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4942              		.loc 1 2833 0
 4943 0166 1121     		movs	r1, #17
 4944 0168 4046     		mov	r0, r8
 4945 016a FFF7FEFF 		bl	I2C_Enable_IRQ
 4946              	.LVL387:
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4947              		.loc 1 2836 0
 4948 016e D8F80020 		ldr	r2, [r8]
 4949 0172 1368     		ldr	r3, [r2]
 4950 0174 43F48043 		orr	r3, r3, #16384
 4951 0178 1360     		str	r3, [r2]
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4952              		.loc 1 2853 0
 4953 017a 4CE7     		b	.L420
 4954              	.L440:
 4955              		.align	2
 4956              	.L439:
 4957 017c 0000FFFF 		.word	-65536
 4958 0180 00000000 		.word	I2C_Master_ISR_DMA
 4959 0184 00000000 		.word	I2C_DMAMasterTransmitCplt
 4960 0188 00000000 		.word	I2C_DMAError
 4961              		.cfi_endproc
 4962              	.LFE161:
 4964              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 4965              		.align	1
 4966              		.global	HAL_I2C_Mem_Read_DMA
 4967              		.syntax unified
 4968              		.thumb
 4969              		.thumb_func
 4970              		.fpu fpv5-sp-d16
 4972              	HAL_I2C_Mem_Read_DMA:
 4973              	.LFB162:
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4974              		.loc 1 2874 0
ARM GAS  /tmp/cc1k1gAU.s 			page 216


 4975              		.cfi_startproc
 4976              		@ args = 8, pretend = 0, frame = 0
 4977              		@ frame_needed = 0, uses_anonymous_args = 0
 4978              	.LVL388:
 4979 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4980              	.LCFI79:
 4981              		.cfi_def_cfa_offset 24
 4982              		.cfi_offset 4, -24
 4983              		.cfi_offset 5, -20
 4984              		.cfi_offset 6, -16
 4985              		.cfi_offset 7, -12
 4986              		.cfi_offset 8, -8
 4987              		.cfi_offset 14, -4
 4988 0004 82B0     		sub	sp, sp, #8
 4989              	.LCFI80:
 4990              		.cfi_def_cfa_offset 32
 4991 0006 BDF82450 		ldrh	r5, [sp, #36]
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4992              		.loc 1 2882 0
 4993 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4994 000e E4B2     		uxtb	r4, r4
 4995 0010 202C     		cmp	r4, #32
 4996 0012 04D0     		beq	.L455
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4997              		.loc 1 2999 0
 4998 0014 0224     		movs	r4, #2
 4999              	.LVL389:
 5000              	.L442:
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5001              		.loc 1 3001 0
 5002 0016 2046     		mov	r0, r4
 5003 0018 02B0     		add	sp, sp, #8
 5004              	.LCFI81:
 5005              		.cfi_remember_state
 5006              		.cfi_def_cfa_offset 24
 5007              		@ sp needed
 5008 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5009              	.LVL390:
 5010              	.L455:
 5011              	.LCFI82:
 5012              		.cfi_restore_state
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5013              		.loc 1 2884 0
 5014 001e 089C     		ldr	r4, [sp, #32]
 5015 0020 002D     		cmp	r5, #0
 5016 0022 18BF     		it	ne
 5017 0024 002C     		cmpne	r4, #0
 5018 0026 06D0     		beq	.L456
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5019              		.loc 1 2890 0
 5020 0028 0468     		ldr	r4, [r0]
 5021 002a A469     		ldr	r4, [r4, #24]
 5022 002c 14F4004F 		tst	r4, #32768
 5023 0030 06D0     		beq	.L457
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5024              		.loc 1 2892 0
 5025 0032 0224     		movs	r4, #2
ARM GAS  /tmp/cc1k1gAU.s 			page 217


 5026 0034 EFE7     		b	.L442
 5027              	.L456:
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 5028              		.loc 1 2886 0
 5029 0036 4FF40073 		mov	r3, #512
 5030              	.LVL391:
 5031 003a 4364     		str	r3, [r0, #68]
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5032              		.loc 1 2887 0
 5033 003c 0124     		movs	r4, #1
 5034 003e EAE7     		b	.L442
 5035              	.LVL392:
 5036              	.L457:
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5037              		.loc 1 2896 0
 5038 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5039 0044 012C     		cmp	r4, #1
 5040 0046 01D1     		bne	.L458
 5041 0048 0224     		movs	r4, #2
 5042 004a E4E7     		b	.L442
 5043              	.L458:
 5044 004c 1F46     		mov	r7, r3
 5045 004e 1446     		mov	r4, r2
 5046 0050 0E46     		mov	r6, r1
 5047 0052 8046     		mov	r8, r0
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5048              		.loc 1 2896 0 is_stmt 0 discriminator 2
 5049 0054 0123     		movs	r3, #1
 5050              	.LVL393:
 5051 0056 80F84030 		strb	r3, [r0, #64]
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5052              		.loc 1 2899 0 is_stmt 1 discriminator 2
 5053 005a FFF7FEFF 		bl	HAL_GetTick
 5054              	.LVL394:
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5055              		.loc 1 2901 0 discriminator 2
 5056 005e 2223     		movs	r3, #34
 5057 0060 88F84130 		strb	r3, [r8, #65]
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5058              		.loc 1 2902 0 discriminator 2
 5059 0064 4023     		movs	r3, #64
 5060 0066 88F84230 		strb	r3, [r8, #66]
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5061              		.loc 1 2903 0 discriminator 2
 5062 006a 0023     		movs	r3, #0
 5063 006c C8F84430 		str	r3, [r8, #68]
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5064              		.loc 1 2906 0 discriminator 2
 5065 0070 089B     		ldr	r3, [sp, #32]
 5066 0072 C8F82430 		str	r3, [r8, #36]
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5067              		.loc 1 2907 0 discriminator 2
 5068 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5069              		.loc 1 2908 0 discriminator 2
 5070 007a 414B     		ldr	r3, .L461
 5071 007c C8F82C30 		str	r3, [r8, #44]
ARM GAS  /tmp/cc1k1gAU.s 			page 218


2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5072              		.loc 1 2909 0 discriminator 2
 5073 0080 404B     		ldr	r3, .L461+4
 5074 0082 C8F83430 		str	r3, [r8, #52]
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5075              		.loc 1 2911 0 discriminator 2
 5076 0086 B8F82A30 		ldrh	r3, [r8, #42]
 5077 008a 9BB2     		uxth	r3, r3
 5078 008c FF2B     		cmp	r3, #255
 5079 008e 3AD9     		bls	.L444
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5080              		.loc 1 2913 0
 5081 0090 FF23     		movs	r3, #255
 5082 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 5083              	.LVL395:
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5084              		.loc 1 2914 0
 5085 0096 4FF08075 		mov	r5, #16777216
 5086              	.LVL396:
 5087              	.L445:
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5088              		.loc 1 2923 0
 5089 009a 0190     		str	r0, [sp, #4]
 5090 009c 1923     		movs	r3, #25
 5091 009e 0093     		str	r3, [sp]
 5092 00a0 3B46     		mov	r3, r7
 5093 00a2 2246     		mov	r2, r4
 5094 00a4 3146     		mov	r1, r6
 5095 00a6 4046     		mov	r0, r8
 5096              	.LVL397:
 5097 00a8 FFF7FEFF 		bl	I2C_RequestMemoryRead
 5098              	.LVL398:
 5099 00ac 90BB     		cbnz	r0, .L459
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5100              		.loc 1 2930 0
 5101 00ae D8F83C30 		ldr	r3, [r8, #60]
 5102 00b2 A3B3     		cbz	r3, .L447
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5103              		.loc 1 2933 0
 5104 00b4 344A     		ldr	r2, .L461+8
 5105 00b6 DA63     		str	r2, [r3, #60]
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5106              		.loc 1 2936 0
 5107 00b8 D8F83C30 		ldr	r3, [r8, #60]
 5108 00bc 334A     		ldr	r2, .L461+12
 5109 00be DA64     		str	r2, [r3, #76]
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 5110              		.loc 1 2939 0
 5111 00c0 D8F83C20 		ldr	r2, [r8, #60]
 5112 00c4 0023     		movs	r3, #0
 5113 00c6 1364     		str	r3, [r2, #64]
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5114              		.loc 1 2940 0
 5115 00c8 D8F83C20 		ldr	r2, [r8, #60]
 5116 00cc 1365     		str	r3, [r2, #80]
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5117              		.loc 1 2943 0
ARM GAS  /tmp/cc1k1gAU.s 			page 219


 5118 00ce D8F80010 		ldr	r1, [r8]
 5119 00d2 B8F82830 		ldrh	r3, [r8, #40]
 5120 00d6 089A     		ldr	r2, [sp, #32]
 5121 00d8 2431     		adds	r1, r1, #36
 5122 00da D8F83C00 		ldr	r0, [r8, #60]
 5123 00de FFF7FEFF 		bl	HAL_DMA_Start_IT
 5124              	.LVL399:
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5125              		.loc 1 2960 0
 5126 00e2 0446     		mov	r4, r0
 5127 00e4 58B3     		cbz	r0, .L460
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5128              		.loc 1 2983 0
 5129 00e6 2023     		movs	r3, #32
 5130 00e8 88F84130 		strb	r3, [r8, #65]
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5131              		.loc 1 2984 0
 5132 00ec 0022     		movs	r2, #0
 5133 00ee 88F84220 		strb	r2, [r8, #66]
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5134              		.loc 1 2987 0
 5135 00f2 D8F84430 		ldr	r3, [r8, #68]
 5136 00f6 43F01003 		orr	r3, r3, #16
 5137 00fa C8F84430 		str	r3, [r8, #68]
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5138              		.loc 1 2990 0
 5139 00fe 88F84020 		strb	r2, [r8, #64]
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5140              		.loc 1 2992 0
 5141 0102 0124     		movs	r4, #1
 5142 0104 87E7     		b	.L442
 5143              	.LVL400:
 5144              	.L444:
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5145              		.loc 1 2918 0
 5146 0106 B8F82A30 		ldrh	r3, [r8, #42]
 5147 010a A8F82830 		strh	r3, [r8, #40]	@ movhi
 5148              	.LVL401:
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5149              		.loc 1 2919 0
 5150 010e 4FF00075 		mov	r5, #33554432
 5151 0112 C2E7     		b	.L445
 5152              	.LVL402:
 5153              	.L459:
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 5154              		.loc 1 2926 0
 5155 0114 0023     		movs	r3, #0
 5156 0116 88F84030 		strb	r3, [r8, #64]
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5157              		.loc 1 2927 0
 5158 011a 0124     		movs	r4, #1
 5159 011c 7BE7     		b	.L442
 5160              	.L447:
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5161              		.loc 1 2948 0
 5162 011e 2023     		movs	r3, #32
 5163 0120 88F84130 		strb	r3, [r8, #65]
ARM GAS  /tmp/cc1k1gAU.s 			page 220


2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5164              		.loc 1 2949 0
 5165 0124 0022     		movs	r2, #0
 5166 0126 88F84220 		strb	r2, [r8, #66]
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5167              		.loc 1 2952 0
 5168 012a D8F84430 		ldr	r3, [r8, #68]
 5169 012e 43F08003 		orr	r3, r3, #128
 5170 0132 C8F84430 		str	r3, [r8, #68]
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5171              		.loc 1 2955 0
 5172 0136 88F84020 		strb	r2, [r8, #64]
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5173              		.loc 1 2957 0
 5174 013a 0124     		movs	r4, #1
 5175 013c 6BE7     		b	.L442
 5176              	.LVL403:
 5177              	.L460:
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5178              		.loc 1 2963 0
 5179 013e 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 5180 0142 134B     		ldr	r3, .L461+16
 5181 0144 0093     		str	r3, [sp]
 5182 0146 2B46     		mov	r3, r5
 5183 0148 3146     		mov	r1, r6
 5184 014a 4046     		mov	r0, r8
 5185              	.LVL404:
 5186 014c FFF7FEFF 		bl	I2C_TransferConfig
 5187              	.LVL405:
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5188              		.loc 1 2966 0
 5189 0150 B8F82A30 		ldrh	r3, [r8, #42]
 5190 0154 9BB2     		uxth	r3, r3
 5191 0156 B8F82820 		ldrh	r2, [r8, #40]
 5192 015a 9B1A     		subs	r3, r3, r2
 5193 015c 9BB2     		uxth	r3, r3
 5194 015e A8F82A30 		strh	r3, [r8, #42]	@ movhi
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5195              		.loc 1 2969 0
 5196 0162 0023     		movs	r3, #0
 5197 0164 88F84030 		strb	r3, [r8, #64]
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5198              		.loc 1 2975 0
 5199 0168 1121     		movs	r1, #17
 5200 016a 4046     		mov	r0, r8
 5201 016c FFF7FEFF 		bl	I2C_Enable_IRQ
 5202              	.LVL406:
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5203              		.loc 1 2978 0
 5204 0170 D8F80020 		ldr	r2, [r8]
 5205 0174 1368     		ldr	r3, [r2]
 5206 0176 43F40043 		orr	r3, r3, #32768
 5207 017a 1360     		str	r3, [r2]
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5208              		.loc 1 2995 0
 5209 017c 4BE7     		b	.L442
 5210              	.L462:
ARM GAS  /tmp/cc1k1gAU.s 			page 221


 5211 017e 00BF     		.align	2
 5212              	.L461:
 5213 0180 0000FFFF 		.word	-65536
 5214 0184 00000000 		.word	I2C_Master_ISR_DMA
 5215 0188 00000000 		.word	I2C_DMAMasterReceiveCplt
 5216 018c 00000000 		.word	I2C_DMAError
 5217 0190 00240080 		.word	-2147474432
 5218              		.cfi_endproc
 5219              	.LFE162:
 5221              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5222              		.align	1
 5223              		.global	HAL_I2C_IsDeviceReady
 5224              		.syntax unified
 5225              		.thumb
 5226              		.thumb_func
 5227              		.fpu fpv5-sp-d16
 5229              	HAL_I2C_IsDeviceReady:
 5230              	.LFB163:
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 5231              		.loc 1 3015 0
 5232              		.cfi_startproc
 5233              		@ args = 0, pretend = 0, frame = 8
 5234              		@ frame_needed = 0, uses_anonymous_args = 0
 5235              	.LVL407:
 5236 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5237              	.LCFI83:
 5238              		.cfi_def_cfa_offset 28
 5239              		.cfi_offset 4, -28
 5240              		.cfi_offset 5, -24
 5241              		.cfi_offset 6, -20
 5242              		.cfi_offset 7, -16
 5243              		.cfi_offset 8, -12
 5244              		.cfi_offset 9, -8
 5245              		.cfi_offset 14, -4
 5246 0004 85B0     		sub	sp, sp, #20
 5247              	.LCFI84:
 5248              		.cfi_def_cfa_offset 48
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5249              		.loc 1 3018 0
 5250 0006 0024     		movs	r4, #0
 5251 0008 0394     		str	r4, [sp, #12]
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5252              		.loc 1 3023 0
 5253 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5254 000e E4B2     		uxtb	r4, r4
 5255 0010 202C     		cmp	r4, #32
 5256 0012 04D0     		beq	.L481
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5257              		.loc 1 3140 0
 5258 0014 0223     		movs	r3, #2
 5259              	.LVL408:
 5260              	.L464:
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5261              		.loc 1 3142 0
 5262 0016 1846     		mov	r0, r3
 5263 0018 05B0     		add	sp, sp, #20
 5264              	.LCFI85:
ARM GAS  /tmp/cc1k1gAU.s 			page 222


 5265              		.cfi_remember_state
 5266              		.cfi_def_cfa_offset 28
 5267              		@ sp needed
 5268 001a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5269              	.LVL409:
 5270              	.L481:
 5271              	.LCFI86:
 5272              		.cfi_restore_state
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5273              		.loc 1 3025 0
 5274 001e 0468     		ldr	r4, [r0]
 5275 0020 A469     		ldr	r4, [r4, #24]
 5276 0022 14F4004F 		tst	r4, #32768
 5277 0026 01D0     		beq	.L482
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5278              		.loc 1 3027 0
 5279 0028 0223     		movs	r3, #2
 5280              	.LVL410:
 5281 002a F4E7     		b	.L464
 5282              	.LVL411:
 5283              	.L482:
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5284              		.loc 1 3031 0
 5285 002c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5286 0030 012C     		cmp	r4, #1
 5287 0032 00F09880 		beq	.L476
 5288 0036 1E46     		mov	r6, r3
 5289 0038 9046     		mov	r8, r2
 5290 003a 0F46     		mov	r7, r1
 5291 003c 0546     		mov	r5, r0
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5292              		.loc 1 3031 0 is_stmt 0 discriminator 2
 5293 003e 0123     		movs	r3, #1
 5294              	.LVL412:
 5295 0040 80F84030 		strb	r3, [r0, #64]
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5296              		.loc 1 3033 0 is_stmt 1 discriminator 2
 5297 0044 2423     		movs	r3, #36
 5298 0046 80F84130 		strb	r3, [r0, #65]
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5299              		.loc 1 3034 0 discriminator 2
 5300 004a 0023     		movs	r3, #0
 5301 004c 4364     		str	r3, [r0, #68]
 5302              	.LVL413:
 5303              	.L473:
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5304              		.loc 1 3039 0
 5305 004e 2A68     		ldr	r2, [r5]
 5306 0050 EB68     		ldr	r3, [r5, #12]
 5307 0052 012B     		cmp	r3, #1
 5308 0054 0FD0     		beq	.L483
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5309              		.loc 1 3039 0 is_stmt 0 discriminator 2
 5310 0056 C7F30903 		ubfx	r3, r7, #0, #10
 5311 005a 43F42053 		orr	r3, r3, #10240
 5312              	.L466:
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 223


 5313              		.loc 1 3039 0 discriminator 4
 5314 005e 5360     		str	r3, [r2, #4]
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5315              		.loc 1 3043 0 is_stmt 1 discriminator 4
 5316 0060 FFF7FEFF 		bl	HAL_GetTick
 5317              	.LVL414:
 5318 0064 8146     		mov	r9, r0
 5319              	.LVL415:
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5320              		.loc 1 3045 0 discriminator 4
 5321 0066 2A68     		ldr	r2, [r5]
 5322 0068 9369     		ldr	r3, [r2, #24]
 5323 006a C3F34013 		ubfx	r3, r3, #5, #1
 5324              	.LVL416:
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5325              		.loc 1 3046 0 discriminator 4
 5326 006e 9469     		ldr	r4, [r2, #24]
 5327 0070 C4F30014 		ubfx	r4, r4, #4, #1
 5328              	.LVL417:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5329              		.loc 1 3048 0 discriminator 4
 5330 0074 0BE0     		b	.L467
 5331              	.LVL418:
 5332              	.L483:
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5333              		.loc 1 3039 0 discriminator 1
 5334 0076 C7F30901 		ubfx	r1, r7, #0, #10
 5335 007a 3F4B     		ldr	r3, .L487
 5336 007c 0B43     		orrs	r3, r3, r1
 5337 007e EEE7     		b	.L466
 5338              	.LVL419:
 5339              	.L468:
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5340              		.loc 1 3067 0
 5341 0080 2A68     		ldr	r2, [r5]
 5342 0082 9369     		ldr	r3, [r2, #24]
 5343 0084 C3F34013 		ubfx	r3, r3, #5, #1
 5344              	.LVL420:
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5345              		.loc 1 3068 0
 5346 0088 9469     		ldr	r4, [r2, #24]
 5347 008a C4F30014 		ubfx	r4, r4, #4, #1
 5348              	.LVL421:
 5349              	.L467:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5350              		.loc 1 3048 0
 5351 008e 83F00103 		eor	r3, r3, #1
 5352              	.LVL422:
 5353 0092 84F00104 		eor	r4, r4, #1
 5354              	.LVL423:
 5355 0096 2342     		tst	r3, r4
 5356 0098 16D0     		beq	.L484
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5357              		.loc 1 3050 0
 5358 009a B6F1FF3F 		cmp	r6, #-1
 5359 009e EFD0     		beq	.L468
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
ARM GAS  /tmp/cc1k1gAU.s 			page 224


 5360              		.loc 1 3052 0
 5361 00a0 FFF7FEFF 		bl	HAL_GetTick
 5362              	.LVL424:
 5363 00a4 A0EB0900 		sub	r0, r0, r9
 5364 00a8 8642     		cmp	r6, r0
 5365 00aa 01D3     		bcc	.L469
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5366              		.loc 1 3052 0 is_stmt 0 discriminator 1
 5367 00ac 002E     		cmp	r6, #0
 5368 00ae E7D1     		bne	.L468
 5369              	.L469:
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5370              		.loc 1 3055 0 is_stmt 1
 5371 00b0 2023     		movs	r3, #32
 5372 00b2 85F84130 		strb	r3, [r5, #65]
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5373              		.loc 1 3058 0
 5374 00b6 6B6C     		ldr	r3, [r5, #68]
 5375 00b8 43F02003 		orr	r3, r3, #32
 5376 00bc 6B64     		str	r3, [r5, #68]
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5377              		.loc 1 3061 0
 5378 00be 0023     		movs	r3, #0
 5379 00c0 85F84030 		strb	r3, [r5, #64]
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 5380              		.loc 1 3063 0
 5381 00c4 0123     		movs	r3, #1
 5382 00c6 A6E7     		b	.L464
 5383              	.L484:
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5384              		.loc 1 3072 0
 5385 00c8 2B68     		ldr	r3, [r5]
 5386 00ca 9B69     		ldr	r3, [r3, #24]
 5387 00cc 13F0100F 		tst	r3, #16
 5388 00d0 24D0     		beq	.L485
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5389              		.loc 1 3094 0
 5390 00d2 CDF80090 		str	r9, [sp]
 5391 00d6 3346     		mov	r3, r6
 5392 00d8 0022     		movs	r2, #0
 5393 00da 2021     		movs	r1, #32
 5394 00dc 2846     		mov	r0, r5
 5395 00de FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5396              	.LVL425:
 5397 00e2 0028     		cmp	r0, #0
 5398 00e4 43D1     		bne	.L478
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5399              		.loc 1 3100 0
 5400 00e6 2B68     		ldr	r3, [r5]
 5401 00e8 1022     		movs	r2, #16
 5402 00ea DA61     		str	r2, [r3, #28]
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5403              		.loc 1 3103 0
 5404 00ec 2B68     		ldr	r3, [r5]
 5405 00ee 2022     		movs	r2, #32
 5406 00f0 DA61     		str	r2, [r3, #28]
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
ARM GAS  /tmp/cc1k1gAU.s 			page 225


 5407              		.loc 1 3107 0
 5408 00f2 039B     		ldr	r3, [sp, #12]
 5409 00f4 4345     		cmp	r3, r8
 5410 00f6 24D0     		beq	.L486
 5411              	.L472:
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5412              		.loc 1 3123 0
 5413 00f8 039B     		ldr	r3, [sp, #12]
 5414 00fa 0133     		adds	r3, r3, #1
 5415 00fc 0393     		str	r3, [sp, #12]
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5416              		.loc 1 3125 0
 5417 00fe 039B     		ldr	r3, [sp, #12]
 5418 0100 9845     		cmp	r8, r3
 5419 0102 A4D8     		bhi	.L473
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5420              		.loc 1 3128 0
 5421 0104 2023     		movs	r3, #32
 5422 0106 85F84130 		strb	r3, [r5, #65]
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5423              		.loc 1 3131 0
 5424 010a 6B6C     		ldr	r3, [r5, #68]
 5425 010c 43F02003 		orr	r3, r3, #32
 5426 0110 6B64     		str	r3, [r5, #68]
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5427              		.loc 1 3134 0
 5428 0112 0023     		movs	r3, #0
 5429 0114 85F84030 		strb	r3, [r5, #64]
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5430              		.loc 1 3136 0
 5431 0118 0123     		movs	r3, #1
 5432 011a 7CE7     		b	.L464
 5433              	.L485:
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5434              		.loc 1 3075 0
 5435 011c CDF80090 		str	r9, [sp]
 5436 0120 3346     		mov	r3, r6
 5437 0122 0022     		movs	r2, #0
 5438 0124 2021     		movs	r1, #32
 5439 0126 2846     		mov	r0, r5
 5440 0128 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5441              	.LVL426:
 5442 012c 0346     		mov	r3, r0
 5443 012e E0B9     		cbnz	r0, .L477
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5444              		.loc 1 3081 0
 5445 0130 2968     		ldr	r1, [r5]
 5446 0132 2022     		movs	r2, #32
 5447 0134 CA61     		str	r2, [r1, #28]
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5448              		.loc 1 3084 0
 5449 0136 85F84120 		strb	r2, [r5, #65]
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5450              		.loc 1 3087 0
 5451 013a 0022     		movs	r2, #0
 5452 013c 85F84020 		strb	r2, [r5, #64]
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
ARM GAS  /tmp/cc1k1gAU.s 			page 226


 5453              		.loc 1 3089 0
 5454 0140 69E7     		b	.L464
 5455              	.L486:
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5456              		.loc 1 3110 0
 5457 0142 2A68     		ldr	r2, [r5]
 5458 0144 5368     		ldr	r3, [r2, #4]
 5459 0146 43F48043 		orr	r3, r3, #16384
 5460 014a 5360     		str	r3, [r2, #4]
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5461              		.loc 1 3113 0
 5462 014c CDF80090 		str	r9, [sp]
 5463 0150 3346     		mov	r3, r6
 5464 0152 0022     		movs	r2, #0
 5465 0154 2021     		movs	r1, #32
 5466 0156 2846     		mov	r0, r5
 5467 0158 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5468              	.LVL427:
 5469 015c 48B9     		cbnz	r0, .L479
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5470              		.loc 1 3119 0
 5471 015e 2B68     		ldr	r3, [r5]
 5472 0160 2022     		movs	r2, #32
 5473 0162 DA61     		str	r2, [r3, #28]
 5474 0164 C8E7     		b	.L472
 5475              	.LVL428:
 5476              	.L476:
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5477              		.loc 1 3031 0
 5478 0166 0223     		movs	r3, #2
 5479              	.LVL429:
 5480 0168 55E7     		b	.L464
 5481              	.LVL430:
 5482              	.L477:
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5483              		.loc 1 3077 0
 5484 016a 0123     		movs	r3, #1
 5485 016c 53E7     		b	.L464
 5486              	.L478:
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5487              		.loc 1 3096 0
 5488 016e 0123     		movs	r3, #1
 5489 0170 51E7     		b	.L464
 5490              	.L479:
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5491              		.loc 1 3115 0
 5492 0172 0123     		movs	r3, #1
 5493 0174 4FE7     		b	.L464
 5494              	.L488:
 5495 0176 00BF     		.align	2
 5496              	.L487:
 5497 0178 00200002 		.word	33562624
 5498              		.cfi_endproc
 5499              	.LFE163:
 5501              		.section	.text.HAL_I2C_Master_Seq_Transmit_IT,"ax",%progbits
 5502              		.align	1
 5503              		.global	HAL_I2C_Master_Seq_Transmit_IT
ARM GAS  /tmp/cc1k1gAU.s 			page 227


 5504              		.syntax unified
 5505              		.thumb
 5506              		.thumb_func
 5507              		.fpu fpv5-sp-d16
 5509              	HAL_I2C_Master_Seq_Transmit_IT:
 5510              	.LFB164:
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5511              		.loc 1 3157 0
 5512              		.cfi_startproc
 5513              		@ args = 4, pretend = 0, frame = 0
 5514              		@ frame_needed = 0, uses_anonymous_args = 0
 5515              	.LVL431:
 5516 0000 70B5     		push	{r4, r5, r6, lr}
 5517              	.LCFI87:
 5518              		.cfi_def_cfa_offset 16
 5519              		.cfi_offset 4, -16
 5520              		.cfi_offset 5, -12
 5521              		.cfi_offset 6, -8
 5522              		.cfi_offset 14, -4
 5523 0002 82B0     		sub	sp, sp, #8
 5524              	.LCFI88:
 5525              		.cfi_def_cfa_offset 24
 5526              	.LVL432:
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5527              		.loc 1 3164 0
 5528 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5529 0008 E4B2     		uxtb	r4, r4
 5530 000a 202C     		cmp	r4, #32
 5531 000c 02D0     		beq	.L500
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5532              		.loc 1 3224 0
 5533 000e 0220     		movs	r0, #2
 5534              	.LVL433:
 5535              	.L490:
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5536              		.loc 1 3226 0
 5537 0010 02B0     		add	sp, sp, #8
 5538              	.LCFI89:
 5539              		.cfi_remember_state
 5540              		.cfi_def_cfa_offset 16
 5541              		@ sp needed
 5542 0012 70BD     		pop	{r4, r5, r6, pc}
 5543              	.LVL434:
 5544              	.L500:
 5545              	.LCFI90:
 5546              		.cfi_restore_state
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5547              		.loc 1 3167 0
 5548 0014 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5549 0018 012C     		cmp	r4, #1
 5550 001a 45D0     		beq	.L496
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5551              		.loc 1 3167 0 is_stmt 0 discriminator 2
 5552 001c 0124     		movs	r4, #1
 5553 001e 80F84040 		strb	r4, [r0, #64]
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5554              		.loc 1 3169 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cc1k1gAU.s 			page 228


 5555 0022 2124     		movs	r4, #33
 5556 0024 80F84140 		strb	r4, [r0, #65]
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5557              		.loc 1 3170 0 discriminator 2
 5558 0028 1024     		movs	r4, #16
 5559 002a 80F84240 		strb	r4, [r0, #66]
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5560              		.loc 1 3171 0 discriminator 2
 5561 002e 0024     		movs	r4, #0
 5562 0030 4464     		str	r4, [r0, #68]
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5563              		.loc 1 3174 0 discriminator 2
 5564 0032 4262     		str	r2, [r0, #36]
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5565              		.loc 1 3175 0 discriminator 2
 5566 0034 4385     		strh	r3, [r0, #42]	@ movhi
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5567              		.loc 1 3176 0 discriminator 2
 5568 0036 069B     		ldr	r3, [sp, #24]
 5569              	.LVL435:
 5570 0038 C362     		str	r3, [r0, #44]
 5571              	.LVL436:
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5572              		.loc 1 3177 0 discriminator 2
 5573 003a 1C4B     		ldr	r3, .L502
 5574 003c 4363     		str	r3, [r0, #52]
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5575              		.loc 1 3180 0 discriminator 2
 5576 003e 438D     		ldrh	r3, [r0, #42]
 5577 0040 9BB2     		uxth	r3, r3
 5578 0042 FF2B     		cmp	r3, #255
 5579 0044 22D9     		bls	.L491
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5580              		.loc 1 3182 0
 5581 0046 FF23     		movs	r3, #255
 5582 0048 0385     		strh	r3, [r0, #40]	@ movhi
 5583              	.LVL437:
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5584              		.loc 1 3183 0
 5585 004a 4FF08076 		mov	r6, #16777216
 5586              	.LVL438:
 5587              	.L492:
 5588 004e 0D46     		mov	r5, r1
 5589 0050 0446     		mov	r4, r0
 5590              	.LVL439:
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5591              		.loc 1 3193 0
 5592 0052 036B     		ldr	r3, [r0, #48]
 5593 0054 112B     		cmp	r3, #17
 5594 0056 1DD0     		beq	.L501
 5595              	.L493:
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5596              		.loc 1 3200 0
 5597 0058 2046     		mov	r0, r4
 5598              	.LVL440:
 5599 005a FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5600              	.LVL441:
ARM GAS  /tmp/cc1k1gAU.s 			page 229


3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5601              		.loc 1 3203 0
 5602 005e 638D     		ldrh	r3, [r4, #42]
 5603 0060 9BB2     		uxth	r3, r3
 5604 0062 FE2B     		cmp	r3, #254
 5605 0064 1ED8     		bhi	.L498
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5606              		.loc 1 3205 0
 5607 0066 E66A     		ldr	r6, [r4, #44]
 5608              	.LVL442:
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5609              		.loc 1 3159 0
 5610 0068 114B     		ldr	r3, .L502+4
 5611              	.L494:
 5612              	.LVL443:
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5613              		.loc 1 3210 0
 5614 006a 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5615 006e 0093     		str	r3, [sp]
 5616 0070 3346     		mov	r3, r6
 5617              	.LVL444:
 5618 0072 2946     		mov	r1, r5
 5619 0074 2046     		mov	r0, r4
 5620 0076 FFF7FEFF 		bl	I2C_TransferConfig
 5621              	.LVL445:
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5622              		.loc 1 3213 0
 5623 007a 0025     		movs	r5, #0
 5624 007c 84F84050 		strb	r5, [r4, #64]
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5625              		.loc 1 3218 0
 5626 0080 0121     		movs	r1, #1
 5627 0082 2046     		mov	r0, r4
 5628 0084 FFF7FEFF 		bl	I2C_Enable_IRQ
 5629              	.LVL446:
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5630              		.loc 1 3220 0
 5631 0088 2846     		mov	r0, r5
 5632 008a C1E7     		b	.L490
 5633              	.LVL447:
 5634              	.L491:
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5635              		.loc 1 3187 0
 5636 008c 438D     		ldrh	r3, [r0, #42]
 5637 008e 0385     		strh	r3, [r0, #40]	@ movhi
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5638              		.loc 1 3188 0
 5639 0090 C66A     		ldr	r6, [r0, #44]
 5640              	.LVL448:
 5641 0092 DCE7     		b	.L492
 5642              	.L501:
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5643              		.loc 1 3193 0 discriminator 1
 5644 0094 069B     		ldr	r3, [sp, #24]
 5645 0096 B3F52A4F 		cmp	r3, #43520
 5646 009a 18BF     		it	ne
 5647 009c AA2B     		cmpne	r3, #170
ARM GAS  /tmp/cc1k1gAU.s 			page 230


 5648 009e DBD0     		beq	.L493
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5649              		.loc 1 3195 0
 5650 00a0 0023     		movs	r3, #0
 5651 00a2 E2E7     		b	.L494
 5652              	.LVL449:
 5653              	.L498:
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5654              		.loc 1 3159 0
 5655 00a4 024B     		ldr	r3, .L502+4
 5656 00a6 E0E7     		b	.L494
 5657              	.LVL450:
 5658              	.L496:
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5659              		.loc 1 3167 0
 5660 00a8 0220     		movs	r0, #2
 5661              	.LVL451:
 5662 00aa B1E7     		b	.L490
 5663              	.L503:
 5664              		.align	2
 5665              	.L502:
 5666 00ac 00000000 		.word	I2C_Master_ISR_IT
 5667 00b0 00200080 		.word	-2147475456
 5668              		.cfi_endproc
 5669              	.LFE164:
 5671              		.section	.text.HAL_I2C_Master_Seq_Transmit_DMA,"ax",%progbits
 5672              		.align	1
 5673              		.global	HAL_I2C_Master_Seq_Transmit_DMA
 5674              		.syntax unified
 5675              		.thumb
 5676              		.thumb_func
 5677              		.fpu fpv5-sp-d16
 5679              	HAL_I2C_Master_Seq_Transmit_DMA:
 5680              	.LFB165:
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5681              		.loc 1 3241 0
 5682              		.cfi_startproc
 5683              		@ args = 4, pretend = 0, frame = 0
 5684              		@ frame_needed = 0, uses_anonymous_args = 0
 5685              	.LVL452:
 5686 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5687              	.LCFI91:
 5688              		.cfi_def_cfa_offset 24
 5689              		.cfi_offset 4, -24
 5690              		.cfi_offset 5, -20
 5691              		.cfi_offset 6, -16
 5692              		.cfi_offset 7, -12
 5693              		.cfi_offset 8, -8
 5694              		.cfi_offset 14, -4
 5695 0004 82B0     		sub	sp, sp, #8
 5696              	.LCFI92:
 5697              		.cfi_def_cfa_offset 32
 5698              	.LVL453:
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5699              		.loc 1 3249 0
 5700 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5701 000a E4B2     		uxtb	r4, r4
ARM GAS  /tmp/cc1k1gAU.s 			page 231


 5702 000c 202C     		cmp	r4, #32
 5703 000e 04D0     		beq	.L520
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5704              		.loc 1 3386 0
 5705 0010 0224     		movs	r4, #2
 5706              	.LVL454:
 5707              	.L505:
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5708              		.loc 1 3388 0
 5709 0012 2046     		mov	r0, r4
 5710 0014 02B0     		add	sp, sp, #8
 5711              	.LCFI93:
 5712              		.cfi_remember_state
 5713              		.cfi_def_cfa_offset 24
 5714              		@ sp needed
 5715 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5716              	.LVL455:
 5717              	.L520:
 5718              	.LCFI94:
 5719              		.cfi_restore_state
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5720              		.loc 1 3252 0
 5721 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5722 001e 012C     		cmp	r4, #1
 5723 0020 00F09980 		beq	.L515
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5724              		.loc 1 3252 0 is_stmt 0 discriminator 2
 5725 0024 0124     		movs	r4, #1
 5726 0026 80F84040 		strb	r4, [r0, #64]
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5727              		.loc 1 3254 0 is_stmt 1 discriminator 2
 5728 002a 2124     		movs	r4, #33
 5729 002c 80F84140 		strb	r4, [r0, #65]
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5730              		.loc 1 3255 0 discriminator 2
 5731 0030 1024     		movs	r4, #16
 5732 0032 80F84240 		strb	r4, [r0, #66]
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5733              		.loc 1 3256 0 discriminator 2
 5734 0036 0024     		movs	r4, #0
 5735 0038 4464     		str	r4, [r0, #68]
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5736              		.loc 1 3259 0 discriminator 2
 5737 003a 4262     		str	r2, [r0, #36]
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5738              		.loc 1 3260 0 discriminator 2
 5739 003c 4385     		strh	r3, [r0, #42]	@ movhi
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5740              		.loc 1 3261 0 discriminator 2
 5741 003e 089B     		ldr	r3, [sp, #32]
 5742              	.LVL456:
 5743 0040 C362     		str	r3, [r0, #44]
 5744              	.LVL457:
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5745              		.loc 1 3262 0 discriminator 2
 5746 0042 464B     		ldr	r3, .L523
 5747 0044 4363     		str	r3, [r0, #52]
ARM GAS  /tmp/cc1k1gAU.s 			page 232


3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5748              		.loc 1 3265 0 discriminator 2
 5749 0046 438D     		ldrh	r3, [r0, #42]
 5750 0048 9BB2     		uxth	r3, r3
 5751 004a FF2B     		cmp	r3, #255
 5752 004c 39D9     		bls	.L506
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5753              		.loc 1 3267 0
 5754 004e FF23     		movs	r3, #255
 5755 0050 0385     		strh	r3, [r0, #40]	@ movhi
 5756              	.LVL458:
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5757              		.loc 1 3268 0
 5758 0052 4FF08077 		mov	r7, #16777216
 5759              	.LVL459:
 5760              	.L507:
 5761 0056 1446     		mov	r4, r2
 5762 0058 8846     		mov	r8, r1
 5763 005a 0546     		mov	r5, r0
 5764              	.LVL460:
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5765              		.loc 1 3278 0
 5766 005c 036B     		ldr	r3, [r0, #48]
 5767 005e 112B     		cmp	r3, #17
 5768 0060 33D0     		beq	.L521
 5769              	.L508:
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5770              		.loc 1 3285 0
 5771 0062 2846     		mov	r0, r5
 5772              	.LVL461:
 5773 0064 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5774              	.LVL462:
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5775              		.loc 1 3288 0
 5776 0068 6B8D     		ldrh	r3, [r5, #42]
 5777 006a 9BB2     		uxth	r3, r3
 5778 006c FE2B     		cmp	r3, #254
 5779 006e 34D8     		bhi	.L517
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5780              		.loc 1 3290 0
 5781 0070 EF6A     		ldr	r7, [r5, #44]
 5782              	.LVL463:
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5783              		.loc 1 3243 0
 5784 0072 3B4E     		ldr	r6, .L523+4
 5785              	.L509:
 5786              	.LVL464:
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5787              		.loc 1 3294 0
 5788 0074 2A8D     		ldrh	r2, [r5, #40]
 5789 0076 002A     		cmp	r2, #0
 5790 0078 5AD0     		beq	.L510
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5791              		.loc 1 3296 0
 5792 007a AB6B     		ldr	r3, [r5, #56]
 5793 007c 002B     		cmp	r3, #0
 5794 007e 2ED0     		beq	.L511
ARM GAS  /tmp/cc1k1gAU.s 			page 233


3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5795              		.loc 1 3299 0
 5796 0080 384A     		ldr	r2, .L523+8
 5797 0082 DA63     		str	r2, [r3, #60]
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5798              		.loc 1 3302 0
 5799 0084 AB6B     		ldr	r3, [r5, #56]
 5800 0086 384A     		ldr	r2, .L523+12
 5801 0088 DA64     		str	r2, [r3, #76]
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 5802              		.loc 1 3305 0
 5803 008a AA6B     		ldr	r2, [r5, #56]
 5804 008c 0023     		movs	r3, #0
 5805 008e 1364     		str	r3, [r2, #64]
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5806              		.loc 1 3306 0
 5807 0090 AA6B     		ldr	r2, [r5, #56]
 5808 0092 1365     		str	r3, [r2, #80]
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5809              		.loc 1 3309 0
 5810 0094 2A68     		ldr	r2, [r5]
 5811 0096 2B8D     		ldrh	r3, [r5, #40]
 5812 0098 2832     		adds	r2, r2, #40
 5813 009a 2146     		mov	r1, r4
 5814 009c A86B     		ldr	r0, [r5, #56]
 5815 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 5816              	.LVL465:
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5817              		.loc 1 3326 0
 5818 00a2 0446     		mov	r4, r0
 5819              	.LVL466:
 5820 00a4 48B3     		cbz	r0, .L522
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5821              		.loc 1 3349 0
 5822 00a6 2023     		movs	r3, #32
 5823 00a8 85F84130 		strb	r3, [r5, #65]
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5824              		.loc 1 3350 0
 5825 00ac 0022     		movs	r2, #0
 5826 00ae 85F84220 		strb	r2, [r5, #66]
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5827              		.loc 1 3353 0
 5828 00b2 6B6C     		ldr	r3, [r5, #68]
 5829 00b4 43F01003 		orr	r3, r3, #16
 5830 00b8 6B64     		str	r3, [r5, #68]
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5831              		.loc 1 3356 0
 5832 00ba 85F84020 		strb	r2, [r5, #64]
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5833              		.loc 1 3358 0
 5834 00be 0124     		movs	r4, #1
 5835 00c0 A7E7     		b	.L505
 5836              	.LVL467:
 5837              	.L506:
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5838              		.loc 1 3272 0
 5839 00c2 438D     		ldrh	r3, [r0, #42]
ARM GAS  /tmp/cc1k1gAU.s 			page 234


 5840 00c4 0385     		strh	r3, [r0, #40]	@ movhi
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5841              		.loc 1 3273 0
 5842 00c6 C76A     		ldr	r7, [r0, #44]
 5843              	.LVL468:
 5844 00c8 C5E7     		b	.L507
 5845              	.L521:
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5846              		.loc 1 3278 0 discriminator 1
 5847 00ca 089B     		ldr	r3, [sp, #32]
 5848 00cc B3F52A4F 		cmp	r3, #43520
 5849 00d0 18BF     		it	ne
 5850 00d2 AA2B     		cmpne	r3, #170
 5851 00d4 C5D0     		beq	.L508
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5852              		.loc 1 3280 0
 5853 00d6 0026     		movs	r6, #0
 5854 00d8 CCE7     		b	.L509
 5855              	.LVL469:
 5856              	.L517:
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5857              		.loc 1 3243 0
 5858 00da 214E     		ldr	r6, .L523+4
 5859 00dc CAE7     		b	.L509
 5860              	.LVL470:
 5861              	.L511:
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5862              		.loc 1 3314 0
 5863 00de 2023     		movs	r3, #32
 5864 00e0 85F84130 		strb	r3, [r5, #65]
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5865              		.loc 1 3315 0
 5866 00e4 0022     		movs	r2, #0
 5867 00e6 85F84220 		strb	r2, [r5, #66]
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5868              		.loc 1 3318 0
 5869 00ea 6B6C     		ldr	r3, [r5, #68]
 5870 00ec 43F08003 		orr	r3, r3, #128
 5871 00f0 6B64     		str	r3, [r5, #68]
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5872              		.loc 1 3321 0
 5873 00f2 85F84020 		strb	r2, [r5, #64]
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5874              		.loc 1 3323 0
 5875 00f6 0124     		movs	r4, #1
 5876              	.LVL471:
 5877 00f8 8BE7     		b	.L505
 5878              	.LVL472:
 5879              	.L522:
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5880              		.loc 1 3329 0
 5881 00fa 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 5882 00fe 0096     		str	r6, [sp]
 5883 0100 3B46     		mov	r3, r7
 5884 0102 4146     		mov	r1, r8
 5885 0104 2846     		mov	r0, r5
 5886              	.LVL473:
ARM GAS  /tmp/cc1k1gAU.s 			page 235


 5887 0106 FFF7FEFF 		bl	I2C_TransferConfig
 5888              	.LVL474:
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5889              		.loc 1 3332 0
 5890 010a 6B8D     		ldrh	r3, [r5, #42]
 5891 010c 9BB2     		uxth	r3, r3
 5892 010e 2A8D     		ldrh	r2, [r5, #40]
 5893 0110 9B1A     		subs	r3, r3, r2
 5894 0112 9BB2     		uxth	r3, r3
 5895 0114 6B85     		strh	r3, [r5, #42]	@ movhi
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5896              		.loc 1 3335 0
 5897 0116 0023     		movs	r3, #0
 5898 0118 85F84030 		strb	r3, [r5, #64]
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5899              		.loc 1 3341 0
 5900 011c 1121     		movs	r1, #17
 5901 011e 2846     		mov	r0, r5
 5902 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
 5903              	.LVL475:
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5904              		.loc 1 3344 0
 5905 0124 2A68     		ldr	r2, [r5]
 5906 0126 1368     		ldr	r3, [r2]
 5907 0128 43F48043 		orr	r3, r3, #16384
 5908 012c 1360     		str	r3, [r2]
 5909 012e 70E7     		b	.L505
 5910              	.LVL476:
 5911              	.L510:
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5912              		.loc 1 3364 0
 5913 0130 0E4B     		ldr	r3, .L523+16
 5914 0132 6B63     		str	r3, [r5, #52]
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5915              		.loc 1 3368 0
 5916 0134 0A4B     		ldr	r3, .L523+4
 5917 0136 0093     		str	r3, [sp]
 5918 0138 4FF00073 		mov	r3, #33554432
 5919 013c D2B2     		uxtb	r2, r2
 5920 013e 4146     		mov	r1, r8
 5921 0140 2846     		mov	r0, r5
 5922 0142 FFF7FEFF 		bl	I2C_TransferConfig
 5923              	.LVL477:
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5924              		.loc 1 3371 0
 5925 0146 0024     		movs	r4, #0
 5926              	.LVL478:
 5927 0148 85F84040 		strb	r4, [r5, #64]
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5928              		.loc 1 3379 0
 5929 014c 0121     		movs	r1, #1
 5930 014e 2846     		mov	r0, r5
 5931 0150 FFF7FEFF 		bl	I2C_Enable_IRQ
 5932              	.LVL479:
 5933 0154 5DE7     		b	.L505
 5934              	.LVL480:
 5935              	.L515:
ARM GAS  /tmp/cc1k1gAU.s 			page 236


3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5936              		.loc 1 3252 0
 5937 0156 0224     		movs	r4, #2
 5938 0158 5BE7     		b	.L505
 5939              	.L524:
 5940 015a 00BF     		.align	2
 5941              	.L523:
 5942 015c 00000000 		.word	I2C_Master_ISR_DMA
 5943 0160 00200080 		.word	-2147475456
 5944 0164 00000000 		.word	I2C_DMAMasterTransmitCplt
 5945 0168 00000000 		.word	I2C_DMAError
 5946 016c 00000000 		.word	I2C_Master_ISR_IT
 5947              		.cfi_endproc
 5948              	.LFE165:
 5950              		.section	.text.HAL_I2C_Master_Seq_Receive_IT,"ax",%progbits
 5951              		.align	1
 5952              		.global	HAL_I2C_Master_Seq_Receive_IT
 5953              		.syntax unified
 5954              		.thumb
 5955              		.thumb_func
 5956              		.fpu fpv5-sp-d16
 5958              	HAL_I2C_Master_Seq_Receive_IT:
 5959              	.LFB166:
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5960              		.loc 1 3403 0
 5961              		.cfi_startproc
 5962              		@ args = 4, pretend = 0, frame = 0
 5963              		@ frame_needed = 0, uses_anonymous_args = 0
 5964              	.LVL481:
 5965 0000 70B5     		push	{r4, r5, r6, lr}
 5966              	.LCFI95:
 5967              		.cfi_def_cfa_offset 16
 5968              		.cfi_offset 4, -16
 5969              		.cfi_offset 5, -12
 5970              		.cfi_offset 6, -8
 5971              		.cfi_offset 14, -4
 5972 0002 82B0     		sub	sp, sp, #8
 5973              	.LCFI96:
 5974              		.cfi_def_cfa_offset 24
 5975              	.LVL482:
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5976              		.loc 1 3410 0
 5977 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5978 0008 E4B2     		uxtb	r4, r4
 5979 000a 202C     		cmp	r4, #32
 5980 000c 02D0     		beq	.L536
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5981              		.loc 1 3470 0
 5982 000e 0220     		movs	r0, #2
 5983              	.LVL483:
 5984              	.L526:
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5985              		.loc 1 3472 0
 5986 0010 02B0     		add	sp, sp, #8
 5987              	.LCFI97:
 5988              		.cfi_remember_state
 5989              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc1k1gAU.s 			page 237


 5990              		@ sp needed
 5991 0012 70BD     		pop	{r4, r5, r6, pc}
 5992              	.LVL484:
 5993              	.L536:
 5994              	.LCFI98:
 5995              		.cfi_restore_state
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5996              		.loc 1 3413 0
 5997 0014 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5998 0018 012C     		cmp	r4, #1
 5999 001a 45D0     		beq	.L532
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6000              		.loc 1 3413 0 is_stmt 0 discriminator 2
 6001 001c 0124     		movs	r4, #1
 6002 001e 80F84040 		strb	r4, [r0, #64]
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6003              		.loc 1 3415 0 is_stmt 1 discriminator 2
 6004 0022 2224     		movs	r4, #34
 6005 0024 80F84140 		strb	r4, [r0, #65]
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6006              		.loc 1 3416 0 discriminator 2
 6007 0028 1024     		movs	r4, #16
 6008 002a 80F84240 		strb	r4, [r0, #66]
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6009              		.loc 1 3417 0 discriminator 2
 6010 002e 0024     		movs	r4, #0
 6011 0030 4464     		str	r4, [r0, #68]
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6012              		.loc 1 3420 0 discriminator 2
 6013 0032 4262     		str	r2, [r0, #36]
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6014              		.loc 1 3421 0 discriminator 2
 6015 0034 4385     		strh	r3, [r0, #42]	@ movhi
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 6016              		.loc 1 3422 0 discriminator 2
 6017 0036 069B     		ldr	r3, [sp, #24]
 6018              	.LVL485:
 6019 0038 C362     		str	r3, [r0, #44]
 6020              	.LVL486:
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6021              		.loc 1 3423 0 discriminator 2
 6022 003a 1C4B     		ldr	r3, .L538
 6023 003c 4363     		str	r3, [r0, #52]
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6024              		.loc 1 3426 0 discriminator 2
 6025 003e 438D     		ldrh	r3, [r0, #42]
 6026 0040 9BB2     		uxth	r3, r3
 6027 0042 FF2B     		cmp	r3, #255
 6028 0044 22D9     		bls	.L527
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6029              		.loc 1 3428 0
 6030 0046 FF23     		movs	r3, #255
 6031 0048 0385     		strh	r3, [r0, #40]	@ movhi
 6032              	.LVL487:
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6033              		.loc 1 3429 0
 6034 004a 4FF08076 		mov	r6, #16777216
ARM GAS  /tmp/cc1k1gAU.s 			page 238


 6035              	.LVL488:
 6036              	.L528:
 6037 004e 0D46     		mov	r5, r1
 6038 0050 0446     		mov	r4, r0
 6039              	.LVL489:
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6040              		.loc 1 3439 0
 6041 0052 036B     		ldr	r3, [r0, #48]
 6042 0054 122B     		cmp	r3, #18
 6043 0056 1DD0     		beq	.L537
 6044              	.L529:
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6045              		.loc 1 3446 0
 6046 0058 2046     		mov	r0, r4
 6047              	.LVL490:
 6048 005a FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6049              	.LVL491:
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6050              		.loc 1 3449 0
 6051 005e 638D     		ldrh	r3, [r4, #42]
 6052 0060 9BB2     		uxth	r3, r3
 6053 0062 FE2B     		cmp	r3, #254
 6054 0064 1ED8     		bhi	.L534
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6055              		.loc 1 3451 0
 6056 0066 E66A     		ldr	r6, [r4, #44]
 6057              	.LVL492:
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6058              		.loc 1 3405 0
 6059 0068 114B     		ldr	r3, .L538+4
 6060              	.L530:
 6061              	.LVL493:
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6062              		.loc 1 3456 0
 6063 006a 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6064 006e 0093     		str	r3, [sp]
 6065 0070 3346     		mov	r3, r6
 6066              	.LVL494:
 6067 0072 2946     		mov	r1, r5
 6068 0074 2046     		mov	r0, r4
 6069 0076 FFF7FEFF 		bl	I2C_TransferConfig
 6070              	.LVL495:
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6071              		.loc 1 3459 0
 6072 007a 0025     		movs	r5, #0
 6073 007c 84F84050 		strb	r5, [r4, #64]
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6074              		.loc 1 3464 0
 6075 0080 0221     		movs	r1, #2
 6076 0082 2046     		mov	r0, r4
 6077 0084 FFF7FEFF 		bl	I2C_Enable_IRQ
 6078              	.LVL496:
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6079              		.loc 1 3466 0
 6080 0088 2846     		mov	r0, r5
 6081 008a C1E7     		b	.L526
 6082              	.LVL497:
ARM GAS  /tmp/cc1k1gAU.s 			page 239


 6083              	.L527:
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6084              		.loc 1 3433 0
 6085 008c 438D     		ldrh	r3, [r0, #42]
 6086 008e 0385     		strh	r3, [r0, #40]	@ movhi
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6087              		.loc 1 3434 0
 6088 0090 C66A     		ldr	r6, [r0, #44]
 6089              	.LVL498:
 6090 0092 DCE7     		b	.L528
 6091              	.L537:
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6092              		.loc 1 3439 0 discriminator 1
 6093 0094 069B     		ldr	r3, [sp, #24]
 6094 0096 B3F52A4F 		cmp	r3, #43520
 6095 009a 18BF     		it	ne
 6096 009c AA2B     		cmpne	r3, #170
 6097 009e DBD0     		beq	.L529
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6098              		.loc 1 3441 0
 6099 00a0 0023     		movs	r3, #0
 6100 00a2 E2E7     		b	.L530
 6101              	.LVL499:
 6102              	.L534:
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6103              		.loc 1 3405 0
 6104 00a4 024B     		ldr	r3, .L538+4
 6105 00a6 E0E7     		b	.L530
 6106              	.LVL500:
 6107              	.L532:
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6108              		.loc 1 3413 0
 6109 00a8 0220     		movs	r0, #2
 6110              	.LVL501:
 6111 00aa B1E7     		b	.L526
 6112              	.L539:
 6113              		.align	2
 6114              	.L538:
 6115 00ac 00000000 		.word	I2C_Master_ISR_IT
 6116 00b0 00240080 		.word	-2147474432
 6117              		.cfi_endproc
 6118              	.LFE166:
 6120              		.section	.text.HAL_I2C_Master_Seq_Receive_DMA,"ax",%progbits
 6121              		.align	1
 6122              		.global	HAL_I2C_Master_Seq_Receive_DMA
 6123              		.syntax unified
 6124              		.thumb
 6125              		.thumb_func
 6126              		.fpu fpv5-sp-d16
 6128              	HAL_I2C_Master_Seq_Receive_DMA:
 6129              	.LFB167:
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 6130              		.loc 1 3487 0
 6131              		.cfi_startproc
 6132              		@ args = 4, pretend = 0, frame = 0
 6133              		@ frame_needed = 0, uses_anonymous_args = 0
 6134              	.LVL502:
ARM GAS  /tmp/cc1k1gAU.s 			page 240


 6135 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6136              	.LCFI99:
 6137              		.cfi_def_cfa_offset 24
 6138              		.cfi_offset 4, -24
 6139              		.cfi_offset 5, -20
 6140              		.cfi_offset 6, -16
 6141              		.cfi_offset 7, -12
 6142              		.cfi_offset 8, -8
 6143              		.cfi_offset 14, -4
 6144 0004 82B0     		sub	sp, sp, #8
 6145              	.LCFI100:
 6146              		.cfi_def_cfa_offset 32
 6147              	.LVL503:
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6148              		.loc 1 3495 0
 6149 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6150 000a E4B2     		uxtb	r4, r4
 6151 000c 202C     		cmp	r4, #32
 6152 000e 04D0     		beq	.L556
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6153              		.loc 1 3632 0
 6154 0010 0224     		movs	r4, #2
 6155              	.LVL504:
 6156              	.L541:
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6157              		.loc 1 3634 0
 6158 0012 2046     		mov	r0, r4
 6159 0014 02B0     		add	sp, sp, #8
 6160              	.LCFI101:
 6161              		.cfi_remember_state
 6162              		.cfi_def_cfa_offset 24
 6163              		@ sp needed
 6164 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6165              	.LVL505:
 6166              	.L556:
 6167              	.LCFI102:
 6168              		.cfi_restore_state
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6169              		.loc 1 3498 0
 6170 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6171 001e 012C     		cmp	r4, #1
 6172 0020 00F09980 		beq	.L551
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6173              		.loc 1 3498 0 is_stmt 0 discriminator 2
 6174 0024 0124     		movs	r4, #1
 6175 0026 80F84040 		strb	r4, [r0, #64]
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6176              		.loc 1 3500 0 is_stmt 1 discriminator 2
 6177 002a 2224     		movs	r4, #34
 6178 002c 80F84140 		strb	r4, [r0, #65]
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6179              		.loc 1 3501 0 discriminator 2
 6180 0030 1024     		movs	r4, #16
 6181 0032 80F84240 		strb	r4, [r0, #66]
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6182              		.loc 1 3502 0 discriminator 2
 6183 0036 0024     		movs	r4, #0
ARM GAS  /tmp/cc1k1gAU.s 			page 241


 6184 0038 4464     		str	r4, [r0, #68]
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6185              		.loc 1 3505 0 discriminator 2
 6186 003a 4262     		str	r2, [r0, #36]
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6187              		.loc 1 3506 0 discriminator 2
 6188 003c 4385     		strh	r3, [r0, #42]	@ movhi
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 6189              		.loc 1 3507 0 discriminator 2
 6190 003e 089B     		ldr	r3, [sp, #32]
 6191              	.LVL506:
 6192 0040 C362     		str	r3, [r0, #44]
 6193              	.LVL507:
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6194              		.loc 1 3508 0 discriminator 2
 6195 0042 464B     		ldr	r3, .L559
 6196 0044 4363     		str	r3, [r0, #52]
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6197              		.loc 1 3511 0 discriminator 2
 6198 0046 438D     		ldrh	r3, [r0, #42]
 6199 0048 9BB2     		uxth	r3, r3
 6200 004a FF2B     		cmp	r3, #255
 6201 004c 39D9     		bls	.L542
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6202              		.loc 1 3513 0
 6203 004e FF23     		movs	r3, #255
 6204 0050 0385     		strh	r3, [r0, #40]	@ movhi
 6205              	.LVL508:
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6206              		.loc 1 3514 0
 6207 0052 4FF08077 		mov	r7, #16777216
 6208              	.LVL509:
 6209              	.L543:
 6210 0056 1446     		mov	r4, r2
 6211 0058 8846     		mov	r8, r1
 6212 005a 0546     		mov	r5, r0
 6213              	.LVL510:
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6214              		.loc 1 3524 0
 6215 005c 036B     		ldr	r3, [r0, #48]
 6216 005e 122B     		cmp	r3, #18
 6217 0060 33D0     		beq	.L557
 6218              	.L544:
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6219              		.loc 1 3531 0
 6220 0062 2846     		mov	r0, r5
 6221              	.LVL511:
 6222 0064 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6223              	.LVL512:
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6224              		.loc 1 3534 0
 6225 0068 6B8D     		ldrh	r3, [r5, #42]
 6226 006a 9BB2     		uxth	r3, r3
 6227 006c FE2B     		cmp	r3, #254
 6228 006e 34D8     		bhi	.L553
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6229              		.loc 1 3536 0
ARM GAS  /tmp/cc1k1gAU.s 			page 242


 6230 0070 EF6A     		ldr	r7, [r5, #44]
 6231              	.LVL513:
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6232              		.loc 1 3489 0
 6233 0072 3B4E     		ldr	r6, .L559+4
 6234              	.L545:
 6235              	.LVL514:
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6236              		.loc 1 3540 0
 6237 0074 2A8D     		ldrh	r2, [r5, #40]
 6238 0076 002A     		cmp	r2, #0
 6239 0078 5AD0     		beq	.L546
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6240              		.loc 1 3542 0
 6241 007a EB6B     		ldr	r3, [r5, #60]
 6242 007c 002B     		cmp	r3, #0
 6243 007e 2ED0     		beq	.L547
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6244              		.loc 1 3545 0
 6245 0080 384A     		ldr	r2, .L559+8
 6246 0082 DA63     		str	r2, [r3, #60]
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6247              		.loc 1 3548 0
 6248 0084 EB6B     		ldr	r3, [r5, #60]
 6249 0086 384A     		ldr	r2, .L559+12
 6250 0088 DA64     		str	r2, [r3, #76]
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 6251              		.loc 1 3551 0
 6252 008a EA6B     		ldr	r2, [r5, #60]
 6253 008c 0023     		movs	r3, #0
 6254 008e 1364     		str	r3, [r2, #64]
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6255              		.loc 1 3552 0
 6256 0090 EA6B     		ldr	r2, [r5, #60]
 6257 0092 1365     		str	r3, [r2, #80]
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6258              		.loc 1 3555 0
 6259 0094 2968     		ldr	r1, [r5]
 6260 0096 2B8D     		ldrh	r3, [r5, #40]
 6261 0098 2246     		mov	r2, r4
 6262 009a 2431     		adds	r1, r1, #36
 6263 009c E86B     		ldr	r0, [r5, #60]
 6264 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 6265              	.LVL515:
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6266              		.loc 1 3572 0
 6267 00a2 0446     		mov	r4, r0
 6268              	.LVL516:
 6269 00a4 48B3     		cbz	r0, .L558
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6270              		.loc 1 3595 0
 6271 00a6 2023     		movs	r3, #32
 6272 00a8 85F84130 		strb	r3, [r5, #65]
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6273              		.loc 1 3596 0
 6274 00ac 0022     		movs	r2, #0
 6275 00ae 85F84220 		strb	r2, [r5, #66]
ARM GAS  /tmp/cc1k1gAU.s 			page 243


3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6276              		.loc 1 3599 0
 6277 00b2 6B6C     		ldr	r3, [r5, #68]
 6278 00b4 43F01003 		orr	r3, r3, #16
 6279 00b8 6B64     		str	r3, [r5, #68]
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6280              		.loc 1 3602 0
 6281 00ba 85F84020 		strb	r2, [r5, #64]
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6282              		.loc 1 3604 0
 6283 00be 0124     		movs	r4, #1
 6284 00c0 A7E7     		b	.L541
 6285              	.LVL517:
 6286              	.L542:
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6287              		.loc 1 3518 0
 6288 00c2 438D     		ldrh	r3, [r0, #42]
 6289 00c4 0385     		strh	r3, [r0, #40]	@ movhi
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6290              		.loc 1 3519 0
 6291 00c6 C76A     		ldr	r7, [r0, #44]
 6292              	.LVL518:
 6293 00c8 C5E7     		b	.L543
 6294              	.L557:
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6295              		.loc 1 3524 0 discriminator 1
 6296 00ca 089B     		ldr	r3, [sp, #32]
 6297 00cc B3F52A4F 		cmp	r3, #43520
 6298 00d0 18BF     		it	ne
 6299 00d2 AA2B     		cmpne	r3, #170
 6300 00d4 C5D0     		beq	.L544
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6301              		.loc 1 3526 0
 6302 00d6 0026     		movs	r6, #0
 6303 00d8 CCE7     		b	.L545
 6304              	.LVL519:
 6305              	.L553:
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6306              		.loc 1 3489 0
 6307 00da 214E     		ldr	r6, .L559+4
 6308 00dc CAE7     		b	.L545
 6309              	.LVL520:
 6310              	.L547:
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6311              		.loc 1 3560 0
 6312 00de 2023     		movs	r3, #32
 6313 00e0 85F84130 		strb	r3, [r5, #65]
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6314              		.loc 1 3561 0
 6315 00e4 0022     		movs	r2, #0
 6316 00e6 85F84220 		strb	r2, [r5, #66]
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6317              		.loc 1 3564 0
 6318 00ea 6B6C     		ldr	r3, [r5, #68]
 6319 00ec 43F08003 		orr	r3, r3, #128
 6320 00f0 6B64     		str	r3, [r5, #68]
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 244


 6321              		.loc 1 3567 0
 6322 00f2 85F84020 		strb	r2, [r5, #64]
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6323              		.loc 1 3569 0
 6324 00f6 0124     		movs	r4, #1
 6325              	.LVL521:
 6326 00f8 8BE7     		b	.L541
 6327              	.LVL522:
 6328              	.L558:
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6329              		.loc 1 3575 0
 6330 00fa 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 6331 00fe 0096     		str	r6, [sp]
 6332 0100 3B46     		mov	r3, r7
 6333 0102 4146     		mov	r1, r8
 6334 0104 2846     		mov	r0, r5
 6335              	.LVL523:
 6336 0106 FFF7FEFF 		bl	I2C_TransferConfig
 6337              	.LVL524:
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6338              		.loc 1 3578 0
 6339 010a 6B8D     		ldrh	r3, [r5, #42]
 6340 010c 9BB2     		uxth	r3, r3
 6341 010e 2A8D     		ldrh	r2, [r5, #40]
 6342 0110 9B1A     		subs	r3, r3, r2
 6343 0112 9BB2     		uxth	r3, r3
 6344 0114 6B85     		strh	r3, [r5, #42]	@ movhi
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6345              		.loc 1 3581 0
 6346 0116 0023     		movs	r3, #0
 6347 0118 85F84030 		strb	r3, [r5, #64]
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6348              		.loc 1 3587 0
 6349 011c 1121     		movs	r1, #17
 6350 011e 2846     		mov	r0, r5
 6351 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
 6352              	.LVL525:
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6353              		.loc 1 3590 0
 6354 0124 2A68     		ldr	r2, [r5]
 6355 0126 1368     		ldr	r3, [r2]
 6356 0128 43F40043 		orr	r3, r3, #32768
 6357 012c 1360     		str	r3, [r2]
 6358 012e 70E7     		b	.L541
 6359              	.LVL526:
 6360              	.L546:
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6361              		.loc 1 3610 0
 6362 0130 0E4B     		ldr	r3, .L559+16
 6363 0132 6B63     		str	r3, [r5, #52]
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6364              		.loc 1 3614 0
 6365 0134 0A4B     		ldr	r3, .L559+4
 6366 0136 0093     		str	r3, [sp]
 6367 0138 4FF00073 		mov	r3, #33554432
 6368 013c D2B2     		uxtb	r2, r2
 6369 013e 4146     		mov	r1, r8
ARM GAS  /tmp/cc1k1gAU.s 			page 245


 6370 0140 2846     		mov	r0, r5
 6371 0142 FFF7FEFF 		bl	I2C_TransferConfig
 6372              	.LVL527:
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6373              		.loc 1 3617 0
 6374 0146 0024     		movs	r4, #0
 6375              	.LVL528:
 6376 0148 85F84040 		strb	r4, [r5, #64]
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6377              		.loc 1 3625 0
 6378 014c 0121     		movs	r1, #1
 6379 014e 2846     		mov	r0, r5
 6380 0150 FFF7FEFF 		bl	I2C_Enable_IRQ
 6381              	.LVL529:
 6382 0154 5DE7     		b	.L541
 6383              	.LVL530:
 6384              	.L551:
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6385              		.loc 1 3498 0
 6386 0156 0224     		movs	r4, #2
 6387 0158 5BE7     		b	.L541
 6388              	.L560:
 6389 015a 00BF     		.align	2
 6390              	.L559:
 6391 015c 00000000 		.word	I2C_Master_ISR_DMA
 6392 0160 00240080 		.word	-2147474432
 6393 0164 00000000 		.word	I2C_DMAMasterReceiveCplt
 6394 0168 00000000 		.word	I2C_DMAError
 6395 016c 00000000 		.word	I2C_Master_ISR_IT
 6396              		.cfi_endproc
 6397              	.LFE167:
 6399              		.section	.text.HAL_I2C_Slave_Seq_Transmit_IT,"ax",%progbits
 6400              		.align	1
 6401              		.global	HAL_I2C_Slave_Seq_Transmit_IT
 6402              		.syntax unified
 6403              		.thumb
 6404              		.thumb_func
 6405              		.fpu fpv5-sp-d16
 6407              	HAL_I2C_Slave_Seq_Transmit_IT:
 6408              	.LFB168:
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6409              		.loc 1 3647 0
 6410              		.cfi_startproc
 6411              		@ args = 0, pretend = 0, frame = 0
 6412              		@ frame_needed = 0, uses_anonymous_args = 0
 6413              	.LVL531:
 6414 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6415              	.LCFI103:
 6416              		.cfi_def_cfa_offset 24
 6417              		.cfi_offset 3, -24
 6418              		.cfi_offset 4, -20
 6419              		.cfi_offset 5, -16
 6420              		.cfi_offset 6, -12
 6421              		.cfi_offset 7, -8
 6422              		.cfi_offset 14, -4
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6423              		.loc 1 3651 0
ARM GAS  /tmp/cc1k1gAU.s 			page 246


 6424 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6425 0006 04F02804 		and	r4, r4, #40
 6426 000a 282C     		cmp	r4, #40
 6427 000c 01D0     		beq	.L569
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6428              		.loc 1 3727 0
 6429 000e 0120     		movs	r0, #1
 6430              	.LVL532:
 6431 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6432              	.LVL533:
 6433              	.L569:
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6434              		.loc 1 3653 0
 6435 0012 002A     		cmp	r2, #0
 6436 0014 18BF     		it	ne
 6437 0016 0029     		cmpne	r1, #0
 6438 0018 04D1     		bne	.L563
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6439              		.loc 1 3655 0
 6440 001a 4FF40073 		mov	r3, #512
 6441              	.LVL534:
 6442 001e 4364     		str	r3, [r0, #68]
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6443              		.loc 1 3656 0
 6444 0020 0120     		movs	r0, #1
 6445              	.LVL535:
 6446 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6447              	.LVL536:
 6448              	.L563:
 6449 0024 1F46     		mov	r7, r3
 6450 0026 1646     		mov	r6, r2
 6451 0028 0D46     		mov	r5, r1
 6452 002a 0446     		mov	r4, r0
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6453              		.loc 1 3660 0
 6454 002c 0521     		movs	r1, #5
 6455              	.LVL537:
 6456 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 6457              	.LVL538:
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6458              		.loc 1 3663 0
 6459 0032 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6460 0036 012B     		cmp	r3, #1
 6461 0038 46D0     		beq	.L567
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6462              		.loc 1 3663 0 is_stmt 0 discriminator 2
 6463 003a 0123     		movs	r3, #1
 6464 003c 84F84030 		strb	r3, [r4, #64]
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6465              		.loc 1 3667 0 is_stmt 1 discriminator 2
 6466 0040 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6467 0044 DBB2     		uxtb	r3, r3
 6468 0046 2A2B     		cmp	r3, #42
 6469 0048 23D0     		beq	.L570
 6470              	.L564:
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6471              		.loc 1 3693 0
ARM GAS  /tmp/cc1k1gAU.s 			page 247


 6472 004a 2923     		movs	r3, #41
 6473 004c 84F84130 		strb	r3, [r4, #65]
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6474              		.loc 1 3694 0
 6475 0050 2023     		movs	r3, #32
 6476 0052 84F84230 		strb	r3, [r4, #66]
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6477              		.loc 1 3695 0
 6478 0056 0023     		movs	r3, #0
 6479 0058 6364     		str	r3, [r4, #68]
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6480              		.loc 1 3698 0
 6481 005a 2268     		ldr	r2, [r4]
 6482 005c 5368     		ldr	r3, [r2, #4]
 6483 005e 23F40043 		bic	r3, r3, #32768
 6484 0062 5360     		str	r3, [r2, #4]
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6485              		.loc 1 3701 0
 6486 0064 6562     		str	r5, [r4, #36]
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6487              		.loc 1 3702 0
 6488 0066 6685     		strh	r6, [r4, #42]	@ movhi
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6489              		.loc 1 3703 0
 6490 0068 638D     		ldrh	r3, [r4, #42]
 6491 006a 2385     		strh	r3, [r4, #40]	@ movhi
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6492              		.loc 1 3704 0
 6493 006c E762     		str	r7, [r4, #44]
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6494              		.loc 1 3705 0
 6495 006e 174B     		ldr	r3, .L571
 6496 0070 6363     		str	r3, [r4, #52]
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6497              		.loc 1 3707 0
 6498 0072 2368     		ldr	r3, [r4]
 6499 0074 9A69     		ldr	r2, [r3, #24]
 6500 0076 12F4803F 		tst	r2, #65536
 6501 007a 01D0     		beq	.L565
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6502              		.loc 1 3711 0
 6503 007c 0822     		movs	r2, #8
 6504 007e DA61     		str	r2, [r3, #28]
 6505              	.L565:
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6506              		.loc 1 3715 0
 6507 0080 0025     		movs	r5, #0
 6508              	.LVL539:
 6509 0082 84F84050 		strb	r5, [r4, #64]
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6510              		.loc 1 3721 0
 6511 0086 0521     		movs	r1, #5
 6512 0088 2046     		mov	r0, r4
 6513 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6514              	.LVL540:
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6515              		.loc 1 3723 0
ARM GAS  /tmp/cc1k1gAU.s 			page 248


 6516 008e 2846     		mov	r0, r5
 6517 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6518              	.LVL541:
 6519              	.L570:
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6520              		.loc 1 3670 0
 6521 0092 0221     		movs	r1, #2
 6522 0094 2046     		mov	r0, r4
 6523 0096 FFF7FEFF 		bl	I2C_Disable_IRQ
 6524              	.LVL542:
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6525              		.loc 1 3673 0
 6526 009a 2368     		ldr	r3, [r4]
 6527 009c 1A68     		ldr	r2, [r3]
 6528 009e 12F4004F 		tst	r2, #32768
 6529 00a2 D2D0     		beq	.L564
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6530              		.loc 1 3675 0
 6531 00a4 1A68     		ldr	r2, [r3]
 6532 00a6 22F40042 		bic	r2, r2, #32768
 6533 00aa 1A60     		str	r2, [r3]
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6534              		.loc 1 3677 0
 6535 00ac E36B     		ldr	r3, [r4, #60]
 6536 00ae 002B     		cmp	r3, #0
 6537 00b0 CBD0     		beq	.L564
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6538              		.loc 1 3681 0
 6539 00b2 074A     		ldr	r2, .L571+4
 6540 00b4 1A65     		str	r2, [r3, #80]
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6541              		.loc 1 3684 0
 6542 00b6 E06B     		ldr	r0, [r4, #60]
 6543 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6544              	.LVL543:
 6545 00bc 0028     		cmp	r0, #0
 6546 00be C4D0     		beq	.L564
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6547              		.loc 1 3687 0
 6548 00c0 E06B     		ldr	r0, [r4, #60]
 6549 00c2 036D     		ldr	r3, [r0, #80]
 6550 00c4 9847     		blx	r3
 6551              	.LVL544:
 6552 00c6 C0E7     		b	.L564
 6553              	.L567:
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6554              		.loc 1 3663 0
 6555 00c8 0220     		movs	r0, #2
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6556              		.loc 1 3729 0
 6557 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6558              	.LVL545:
 6559              	.L572:
 6560              		.align	2
 6561              	.L571:
 6562 00cc 00000000 		.word	I2C_Slave_ISR_IT
 6563 00d0 00000000 		.word	I2C_DMAAbort
ARM GAS  /tmp/cc1k1gAU.s 			page 249


 6564              		.cfi_endproc
 6565              	.LFE168:
 6567              		.section	.text.HAL_I2C_Slave_Seq_Transmit_DMA,"ax",%progbits
 6568              		.align	1
 6569              		.global	HAL_I2C_Slave_Seq_Transmit_DMA
 6570              		.syntax unified
 6571              		.thumb
 6572              		.thumb_func
 6573              		.fpu fpv5-sp-d16
 6575              	HAL_I2C_Slave_Seq_Transmit_DMA:
 6576              	.LFB169:
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6577              		.loc 1 3742 0
 6578              		.cfi_startproc
 6579              		@ args = 0, pretend = 0, frame = 0
 6580              		@ frame_needed = 0, uses_anonymous_args = 0
 6581              	.LVL546:
 6582 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6583              	.LCFI104:
 6584              		.cfi_def_cfa_offset 24
 6585              		.cfi_offset 3, -24
 6586              		.cfi_offset 4, -20
 6587              		.cfi_offset 5, -16
 6588              		.cfi_offset 6, -12
 6589              		.cfi_offset 7, -8
 6590              		.cfi_offset 14, -4
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6591              		.loc 1 3748 0
 6592 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6593 0006 04F02804 		and	r4, r4, #40
 6594 000a 282C     		cmp	r4, #40
 6595 000c 02D0     		beq	.L587
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6596              		.loc 1 3906 0
 6597 000e 0125     		movs	r5, #1
 6598              	.LVL547:
 6599              	.L574:
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6600              		.loc 1 3908 0
 6601 0010 2846     		mov	r0, r5
 6602 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6603              	.LVL548:
 6604              	.L587:
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6605              		.loc 1 3750 0
 6606 0014 002A     		cmp	r2, #0
 6607 0016 18BF     		it	ne
 6608 0018 0029     		cmpne	r1, #0
 6609 001a 05D0     		beq	.L588
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6610              		.loc 1 3757 0
 6611 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6612 0020 012C     		cmp	r4, #1
 6613 0022 06D1     		bne	.L589
 6614 0024 0225     		movs	r5, #2
 6615 0026 F3E7     		b	.L574
 6616              	.L588:
ARM GAS  /tmp/cc1k1gAU.s 			page 250


3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6617              		.loc 1 3752 0
 6618 0028 4FF40073 		mov	r3, #512
 6619              	.LVL549:
 6620 002c 4364     		str	r3, [r0, #68]
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6621              		.loc 1 3753 0
 6622 002e 0125     		movs	r5, #1
 6623 0030 EEE7     		b	.L574
 6624              	.LVL550:
 6625              	.L589:
 6626 0032 1F46     		mov	r7, r3
 6627 0034 1646     		mov	r6, r2
 6628 0036 0D46     		mov	r5, r1
 6629 0038 0446     		mov	r4, r0
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6630              		.loc 1 3757 0 discriminator 2
 6631 003a 0123     		movs	r3, #1
 6632              	.LVL551:
 6633 003c 80F84030 		strb	r3, [r0, #64]
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6634              		.loc 1 3760 0 discriminator 2
 6635 0040 0521     		movs	r1, #5
 6636              	.LVL552:
 6637 0042 FFF7FEFF 		bl	I2C_Disable_IRQ
 6638              	.LVL553:
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6639              		.loc 1 3764 0 discriminator 2
 6640 0046 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6641 004a DBB2     		uxtb	r3, r3
 6642 004c 2A2B     		cmp	r3, #42
 6643 004e 49D0     		beq	.L590
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6644              		.loc 1 3789 0
 6645 0050 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6646 0054 DBB2     		uxtb	r3, r3
 6647 0056 292B     		cmp	r3, #41
 6648 0058 60D0     		beq	.L591
 6649              	.L577:
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6650              		.loc 1 3816 0
 6651 005a 2923     		movs	r3, #41
 6652 005c 84F84130 		strb	r3, [r4, #65]
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6653              		.loc 1 3817 0
 6654 0060 2023     		movs	r3, #32
 6655 0062 84F84230 		strb	r3, [r4, #66]
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6656              		.loc 1 3818 0
 6657 0066 0023     		movs	r3, #0
 6658 0068 6364     		str	r3, [r4, #68]
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6659              		.loc 1 3821 0
 6660 006a 2268     		ldr	r2, [r4]
 6661 006c 5368     		ldr	r3, [r2, #4]
 6662 006e 23F40043 		bic	r3, r3, #32768
 6663 0072 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc1k1gAU.s 			page 251


3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6664              		.loc 1 3824 0
 6665 0074 6562     		str	r5, [r4, #36]
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6666              		.loc 1 3825 0
 6667 0076 6685     		strh	r6, [r4, #42]	@ movhi
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6668              		.loc 1 3826 0
 6669 0078 638D     		ldrh	r3, [r4, #42]
 6670 007a 2385     		strh	r3, [r4, #40]	@ movhi
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6671              		.loc 1 3827 0
 6672 007c E762     		str	r7, [r4, #44]
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6673              		.loc 1 3828 0
 6674 007e 424B     		ldr	r3, .L593
 6675 0080 6363     		str	r3, [r4, #52]
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6676              		.loc 1 3830 0
 6677 0082 A36B     		ldr	r3, [r4, #56]
 6678 0084 002B     		cmp	r3, #0
 6679 0086 60D0     		beq	.L578
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6680              		.loc 1 3833 0
 6681 0088 404A     		ldr	r2, .L593+4
 6682 008a DA63     		str	r2, [r3, #60]
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6683              		.loc 1 3836 0
 6684 008c A36B     		ldr	r3, [r4, #56]
 6685 008e 404A     		ldr	r2, .L593+8
 6686 0090 DA64     		str	r2, [r3, #76]
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 6687              		.loc 1 3839 0
 6688 0092 A26B     		ldr	r2, [r4, #56]
 6689 0094 0023     		movs	r3, #0
 6690 0096 1364     		str	r3, [r2, #64]
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6691              		.loc 1 3840 0
 6692 0098 A26B     		ldr	r2, [r4, #56]
 6693 009a 1365     		str	r3, [r2, #80]
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6694              		.loc 1 3843 0
 6695 009c 2268     		ldr	r2, [r4]
 6696 009e 238D     		ldrh	r3, [r4, #40]
 6697 00a0 2832     		adds	r2, r2, #40
 6698 00a2 2946     		mov	r1, r5
 6699 00a4 A06B     		ldr	r0, [r4, #56]
 6700 00a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6701              	.LVL554:
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6702              		.loc 1 3860 0
 6703 00aa 0546     		mov	r5, r0
 6704              	.LVL555:
 6705 00ac 0028     		cmp	r0, #0
 6706 00ae 5AD1     		bne	.L592
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6707              		.loc 1 3863 0
ARM GAS  /tmp/cc1k1gAU.s 			page 252


 6708 00b0 638D     		ldrh	r3, [r4, #42]
 6709 00b2 9BB2     		uxth	r3, r3
 6710 00b4 228D     		ldrh	r2, [r4, #40]
 6711 00b6 9B1A     		subs	r3, r3, r2
 6712 00b8 9BB2     		uxth	r3, r3
 6713 00ba 6385     		strh	r3, [r4, #42]	@ movhi
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6714              		.loc 1 3866 0
 6715 00bc 0023     		movs	r3, #0
 6716 00be 2385     		strh	r3, [r4, #40]	@ movhi
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6717              		.loc 1 3883 0
 6718 00c0 2368     		ldr	r3, [r4]
 6719 00c2 9A69     		ldr	r2, [r3, #24]
 6720 00c4 12F4803F 		tst	r2, #65536
 6721 00c8 5BD1     		bne	.L581
 6722              	.L582:
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6723              		.loc 1 3891 0
 6724 00ca 0023     		movs	r3, #0
 6725 00cc 84F84030 		strb	r3, [r4, #64]
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6726              		.loc 1 3897 0
 6727 00d0 0421     		movs	r1, #4
 6728 00d2 2046     		mov	r0, r4
 6729              	.LVL556:
 6730 00d4 FFF7FEFF 		bl	I2C_Enable_IRQ
 6731              	.LVL557:
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6732              		.loc 1 3900 0
 6733 00d8 2268     		ldr	r2, [r4]
 6734 00da 1368     		ldr	r3, [r2]
 6735 00dc 43F48043 		orr	r3, r3, #16384
 6736 00e0 1360     		str	r3, [r2]
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6737              		.loc 1 3902 0
 6738 00e2 95E7     		b	.L574
 6739              	.LVL558:
 6740              	.L590:
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6741              		.loc 1 3767 0
 6742 00e4 0221     		movs	r1, #2
 6743 00e6 2046     		mov	r0, r4
 6744 00e8 FFF7FEFF 		bl	I2C_Disable_IRQ
 6745              	.LVL559:
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6746              		.loc 1 3769 0
 6747 00ec 2368     		ldr	r3, [r4]
 6748 00ee 1A68     		ldr	r2, [r3]
 6749 00f0 12F4004F 		tst	r2, #32768
 6750 00f4 B1D0     		beq	.L577
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6751              		.loc 1 3772 0
 6752 00f6 E26B     		ldr	r2, [r4, #60]
 6753 00f8 002A     		cmp	r2, #0
 6754 00fa AED0     		beq	.L577
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 253


 6755              		.loc 1 3774 0
 6756 00fc 1A68     		ldr	r2, [r3]
 6757 00fe 22F40042 		bic	r2, r2, #32768
 6758 0102 1A60     		str	r2, [r3]
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6759              		.loc 1 3778 0
 6760 0104 E36B     		ldr	r3, [r4, #60]
 6761 0106 234A     		ldr	r2, .L593+12
 6762 0108 1A65     		str	r2, [r3, #80]
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6763              		.loc 1 3781 0
 6764 010a E06B     		ldr	r0, [r4, #60]
 6765 010c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6766              	.LVL560:
 6767 0110 0028     		cmp	r0, #0
 6768 0112 A2D0     		beq	.L577
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6769              		.loc 1 3784 0
 6770 0114 E06B     		ldr	r0, [r4, #60]
 6771 0116 036D     		ldr	r3, [r0, #80]
 6772 0118 9847     		blx	r3
 6773              	.LVL561:
 6774 011a 9EE7     		b	.L577
 6775              	.L591:
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6776              		.loc 1 3791 0
 6777 011c 2368     		ldr	r3, [r4]
 6778 011e 1A68     		ldr	r2, [r3]
 6779 0120 12F4804F 		tst	r2, #16384
 6780 0124 99D0     		beq	.L577
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6781              		.loc 1 3793 0
 6782 0126 1A68     		ldr	r2, [r3]
 6783 0128 22F48042 		bic	r2, r2, #16384
 6784 012c 1A60     		str	r2, [r3]
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6785              		.loc 1 3796 0
 6786 012e A36B     		ldr	r3, [r4, #56]
 6787 0130 002B     		cmp	r3, #0
 6788 0132 92D0     		beq	.L577
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6789              		.loc 1 3800 0
 6790 0134 174A     		ldr	r2, .L593+12
 6791 0136 1A65     		str	r2, [r3, #80]
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6792              		.loc 1 3803 0
 6793 0138 A06B     		ldr	r0, [r4, #56]
 6794 013a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6795              	.LVL562:
 6796 013e 0028     		cmp	r0, #0
 6797 0140 8BD0     		beq	.L577
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6798              		.loc 1 3806 0
 6799 0142 A06B     		ldr	r0, [r4, #56]
 6800 0144 036D     		ldr	r3, [r0, #80]
 6801 0146 9847     		blx	r3
 6802              	.LVL563:
ARM GAS  /tmp/cc1k1gAU.s 			page 254


 6803 0148 87E7     		b	.L577
 6804              	.L578:
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6805              		.loc 1 3848 0
 6806 014a 2823     		movs	r3, #40
 6807 014c 84F84130 		strb	r3, [r4, #65]
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6808              		.loc 1 3849 0
 6809 0150 0022     		movs	r2, #0
 6810 0152 84F84220 		strb	r2, [r4, #66]
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6811              		.loc 1 3852 0
 6812 0156 636C     		ldr	r3, [r4, #68]
 6813 0158 43F08003 		orr	r3, r3, #128
 6814 015c 6364     		str	r3, [r4, #68]
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6815              		.loc 1 3855 0
 6816 015e 84F84020 		strb	r2, [r4, #64]
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6817              		.loc 1 3857 0
 6818 0162 0125     		movs	r5, #1
 6819              	.LVL564:
 6820 0164 54E7     		b	.L574
 6821              	.LVL565:
 6822              	.L592:
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6823              		.loc 1 3871 0
 6824 0166 2823     		movs	r3, #40
 6825 0168 84F84130 		strb	r3, [r4, #65]
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6826              		.loc 1 3872 0
 6827 016c 0022     		movs	r2, #0
 6828 016e 84F84220 		strb	r2, [r4, #66]
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6829              		.loc 1 3875 0
 6830 0172 636C     		ldr	r3, [r4, #68]
 6831 0174 43F01003 		orr	r3, r3, #16
 6832 0178 6364     		str	r3, [r4, #68]
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6833              		.loc 1 3878 0
 6834 017a 84F84020 		strb	r2, [r4, #64]
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6835              		.loc 1 3880 0
 6836 017e 0125     		movs	r5, #1
 6837 0180 46E7     		b	.L574
 6838              	.L581:
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6839              		.loc 1 3887 0
 6840 0182 0822     		movs	r2, #8
 6841 0184 DA61     		str	r2, [r3, #28]
 6842 0186 A0E7     		b	.L582
 6843              	.L594:
 6844              		.align	2
 6845              	.L593:
 6846 0188 00000000 		.word	I2C_Slave_ISR_DMA
 6847 018c 00000000 		.word	I2C_DMASlaveTransmitCplt
 6848 0190 00000000 		.word	I2C_DMAError
ARM GAS  /tmp/cc1k1gAU.s 			page 255


 6849 0194 00000000 		.word	I2C_DMAAbort
 6850              		.cfi_endproc
 6851              	.LFE169:
 6853              		.section	.text.HAL_I2C_Slave_Seq_Receive_IT,"ax",%progbits
 6854              		.align	1
 6855              		.global	HAL_I2C_Slave_Seq_Receive_IT
 6856              		.syntax unified
 6857              		.thumb
 6858              		.thumb_func
 6859              		.fpu fpv5-sp-d16
 6861              	HAL_I2C_Slave_Seq_Receive_IT:
 6862              	.LFB170:
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6863              		.loc 1 3921 0
 6864              		.cfi_startproc
 6865              		@ args = 0, pretend = 0, frame = 0
 6866              		@ frame_needed = 0, uses_anonymous_args = 0
 6867              	.LVL566:
 6868 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6869              	.LCFI105:
 6870              		.cfi_def_cfa_offset 24
 6871              		.cfi_offset 3, -24
 6872              		.cfi_offset 4, -20
 6873              		.cfi_offset 5, -16
 6874              		.cfi_offset 6, -12
 6875              		.cfi_offset 7, -8
 6876              		.cfi_offset 14, -4
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6877              		.loc 1 3925 0
 6878 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6879 0006 04F02804 		and	r4, r4, #40
 6880 000a 282C     		cmp	r4, #40
 6881 000c 01D0     		beq	.L603
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6882              		.loc 1 4001 0
 6883 000e 0120     		movs	r0, #1
 6884              	.LVL567:
 6885 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6886              	.LVL568:
 6887              	.L603:
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6888              		.loc 1 3927 0
 6889 0012 002A     		cmp	r2, #0
 6890 0014 18BF     		it	ne
 6891 0016 0029     		cmpne	r1, #0
 6892 0018 04D1     		bne	.L597
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6893              		.loc 1 3929 0
 6894 001a 4FF40073 		mov	r3, #512
 6895              	.LVL569:
 6896 001e 4364     		str	r3, [r0, #68]
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6897              		.loc 1 3930 0
 6898 0020 0120     		movs	r0, #1
 6899              	.LVL570:
 6900 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6901              	.LVL571:
ARM GAS  /tmp/cc1k1gAU.s 			page 256


 6902              	.L597:
 6903 0024 1F46     		mov	r7, r3
 6904 0026 1646     		mov	r6, r2
 6905 0028 0D46     		mov	r5, r1
 6906 002a 0446     		mov	r4, r0
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6907              		.loc 1 3934 0
 6908 002c 0621     		movs	r1, #6
 6909              	.LVL572:
 6910 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 6911              	.LVL573:
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6912              		.loc 1 3937 0
 6913 0032 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6914 0036 012B     		cmp	r3, #1
 6915 0038 46D0     		beq	.L601
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6916              		.loc 1 3937 0 is_stmt 0 discriminator 2
 6917 003a 0123     		movs	r3, #1
 6918 003c 84F84030 		strb	r3, [r4, #64]
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6919              		.loc 1 3941 0 is_stmt 1 discriminator 2
 6920 0040 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6921 0044 DBB2     		uxtb	r3, r3
 6922 0046 292B     		cmp	r3, #41
 6923 0048 23D0     		beq	.L604
 6924              	.L598:
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6925              		.loc 1 3967 0
 6926 004a 2A23     		movs	r3, #42
 6927 004c 84F84130 		strb	r3, [r4, #65]
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6928              		.loc 1 3968 0
 6929 0050 2023     		movs	r3, #32
 6930 0052 84F84230 		strb	r3, [r4, #66]
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6931              		.loc 1 3969 0
 6932 0056 0023     		movs	r3, #0
 6933 0058 6364     		str	r3, [r4, #68]
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6934              		.loc 1 3972 0
 6935 005a 2268     		ldr	r2, [r4]
 6936 005c 5368     		ldr	r3, [r2, #4]
 6937 005e 23F40043 		bic	r3, r3, #32768
 6938 0062 5360     		str	r3, [r2, #4]
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6939              		.loc 1 3975 0
 6940 0064 6562     		str	r5, [r4, #36]
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6941              		.loc 1 3976 0
 6942 0066 6685     		strh	r6, [r4, #42]	@ movhi
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6943              		.loc 1 3977 0
 6944 0068 638D     		ldrh	r3, [r4, #42]
 6945 006a 2385     		strh	r3, [r4, #40]	@ movhi
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6946              		.loc 1 3978 0
ARM GAS  /tmp/cc1k1gAU.s 			page 257


 6947 006c E762     		str	r7, [r4, #44]
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6948              		.loc 1 3979 0
 6949 006e 174B     		ldr	r3, .L605
 6950 0070 6363     		str	r3, [r4, #52]
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6951              		.loc 1 3981 0
 6952 0072 2368     		ldr	r3, [r4]
 6953 0074 9A69     		ldr	r2, [r3, #24]
 6954 0076 12F4803F 		tst	r2, #65536
 6955 007a 01D1     		bne	.L599
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6956              		.loc 1 3985 0
 6957 007c 0822     		movs	r2, #8
 6958 007e DA61     		str	r2, [r3, #28]
 6959              	.L599:
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6960              		.loc 1 3989 0
 6961 0080 0025     		movs	r5, #0
 6962              	.LVL574:
 6963 0082 84F84050 		strb	r5, [r4, #64]
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6964              		.loc 1 3995 0
 6965 0086 0621     		movs	r1, #6
 6966 0088 2046     		mov	r0, r4
 6967 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6968              	.LVL575:
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6969              		.loc 1 3997 0
 6970 008e 2846     		mov	r0, r5
 6971 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6972              	.LVL576:
 6973              	.L604:
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6974              		.loc 1 3944 0
 6975 0092 0121     		movs	r1, #1
 6976 0094 2046     		mov	r0, r4
 6977 0096 FFF7FEFF 		bl	I2C_Disable_IRQ
 6978              	.LVL577:
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6979              		.loc 1 3946 0
 6980 009a 2368     		ldr	r3, [r4]
 6981 009c 1A68     		ldr	r2, [r3]
 6982 009e 12F4804F 		tst	r2, #16384
 6983 00a2 D2D0     		beq	.L598
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6984              		.loc 1 3948 0
 6985 00a4 1A68     		ldr	r2, [r3]
 6986 00a6 22F48042 		bic	r2, r2, #16384
 6987 00aa 1A60     		str	r2, [r3]
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6988              		.loc 1 3951 0
 6989 00ac A36B     		ldr	r3, [r4, #56]
 6990 00ae 002B     		cmp	r3, #0
 6991 00b0 CBD0     		beq	.L598
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6992              		.loc 1 3955 0
ARM GAS  /tmp/cc1k1gAU.s 			page 258


 6993 00b2 074A     		ldr	r2, .L605+4
 6994 00b4 1A65     		str	r2, [r3, #80]
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6995              		.loc 1 3958 0
 6996 00b6 A06B     		ldr	r0, [r4, #56]
 6997 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6998              	.LVL578:
 6999 00bc 0028     		cmp	r0, #0
 7000 00be C4D0     		beq	.L598
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7001              		.loc 1 3961 0
 7002 00c0 A06B     		ldr	r0, [r4, #56]
 7003 00c2 036D     		ldr	r3, [r0, #80]
 7004 00c4 9847     		blx	r3
 7005              	.LVL579:
 7006 00c6 C0E7     		b	.L598
 7007              	.L601:
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7008              		.loc 1 3937 0
 7009 00c8 0220     		movs	r0, #2
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7010              		.loc 1 4003 0
 7011 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7012              	.LVL580:
 7013              	.L606:
 7014              		.align	2
 7015              	.L605:
 7016 00cc 00000000 		.word	I2C_Slave_ISR_IT
 7017 00d0 00000000 		.word	I2C_DMAAbort
 7018              		.cfi_endproc
 7019              	.LFE170:
 7021              		.section	.text.HAL_I2C_Slave_Seq_Receive_DMA,"ax",%progbits
 7022              		.align	1
 7023              		.global	HAL_I2C_Slave_Seq_Receive_DMA
 7024              		.syntax unified
 7025              		.thumb
 7026              		.thumb_func
 7027              		.fpu fpv5-sp-d16
 7029              	HAL_I2C_Slave_Seq_Receive_DMA:
 7030              	.LFB171:
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 7031              		.loc 1 4016 0
 7032              		.cfi_startproc
 7033              		@ args = 0, pretend = 0, frame = 0
 7034              		@ frame_needed = 0, uses_anonymous_args = 0
 7035              	.LVL581:
 7036 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7037              	.LCFI106:
 7038              		.cfi_def_cfa_offset 24
 7039              		.cfi_offset 3, -24
 7040              		.cfi_offset 4, -20
 7041              		.cfi_offset 5, -16
 7042              		.cfi_offset 6, -12
 7043              		.cfi_offset 7, -8
 7044              		.cfi_offset 14, -4
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7045              		.loc 1 4022 0
ARM GAS  /tmp/cc1k1gAU.s 			page 259


 7046 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 7047 0006 05F02805 		and	r5, r5, #40
 7048 000a 282D     		cmp	r5, #40
 7049 000c 02D0     		beq	.L621
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7050              		.loc 1 4180 0
 7051 000e 0125     		movs	r5, #1
 7052              	.LVL582:
 7053              	.L608:
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7054              		.loc 1 4182 0
 7055 0010 2846     		mov	r0, r5
 7056 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7057              	.LVL583:
 7058              	.L621:
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7059              		.loc 1 4024 0
 7060 0014 002A     		cmp	r2, #0
 7061 0016 18BF     		it	ne
 7062 0018 0029     		cmpne	r1, #0
 7063 001a 04D1     		bne	.L609
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 7064              		.loc 1 4026 0
 7065 001c 4FF40073 		mov	r3, #512
 7066              	.LVL584:
 7067 0020 4364     		str	r3, [r0, #68]
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7068              		.loc 1 4027 0
 7069 0022 0125     		movs	r5, #1
 7070 0024 F4E7     		b	.L608
 7071              	.LVL585:
 7072              	.L609:
 7073 0026 1F46     		mov	r7, r3
 7074 0028 1646     		mov	r6, r2
 7075 002a 0D46     		mov	r5, r1
 7076 002c 0446     		mov	r4, r0
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7077              		.loc 1 4031 0
 7078 002e 0621     		movs	r1, #6
 7079              	.LVL586:
 7080 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
 7081              	.LVL587:
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7082              		.loc 1 4034 0
 7083 0034 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 7084 0038 012B     		cmp	r3, #1
 7085 003a 00F0A480 		beq	.L618
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7086              		.loc 1 4034 0 is_stmt 0 discriminator 2
 7087 003e 0123     		movs	r3, #1
 7088 0040 84F84030 		strb	r3, [r4, #64]
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7089              		.loc 1 4038 0 is_stmt 1 discriminator 2
 7090 0044 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7091 0048 DBB2     		uxtb	r3, r3
 7092 004a 292B     		cmp	r3, #41
 7093 004c 49D0     		beq	.L622
ARM GAS  /tmp/cc1k1gAU.s 			page 260


4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7094              		.loc 1 4063 0
 7095 004e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7096 0052 DBB2     		uxtb	r3, r3
 7097 0054 2A2B     		cmp	r3, #42
 7098 0056 60D0     		beq	.L623
 7099              	.L611:
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 7100              		.loc 1 4090 0
 7101 0058 2A23     		movs	r3, #42
 7102 005a 84F84130 		strb	r3, [r4, #65]
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 7103              		.loc 1 4091 0
 7104 005e 2023     		movs	r3, #32
 7105 0060 84F84230 		strb	r3, [r4, #66]
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7106              		.loc 1 4092 0
 7107 0064 0023     		movs	r3, #0
 7108 0066 6364     		str	r3, [r4, #68]
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7109              		.loc 1 4095 0
 7110 0068 2268     		ldr	r2, [r4]
 7111 006a 5368     		ldr	r3, [r2, #4]
 7112 006c 23F40043 		bic	r3, r3, #32768
 7113 0070 5360     		str	r3, [r2, #4]
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 7114              		.loc 1 4098 0
 7115 0072 6562     		str	r5, [r4, #36]
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 7116              		.loc 1 4099 0
 7117 0074 6685     		strh	r6, [r4, #42]	@ movhi
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 7118              		.loc 1 4100 0
 7119 0076 638D     		ldrh	r3, [r4, #42]
 7120 0078 2385     		strh	r3, [r4, #40]	@ movhi
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 7121              		.loc 1 4101 0
 7122 007a E762     		str	r7, [r4, #44]
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7123              		.loc 1 4102 0
 7124 007c 434B     		ldr	r3, .L625
 7125 007e 6363     		str	r3, [r4, #52]
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7126              		.loc 1 4104 0
 7127 0080 E36B     		ldr	r3, [r4, #60]
 7128 0082 002B     		cmp	r3, #0
 7129 0084 60D0     		beq	.L612
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7130              		.loc 1 4107 0
 7131 0086 424A     		ldr	r2, .L625+4
 7132 0088 DA63     		str	r2, [r3, #60]
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7133              		.loc 1 4110 0
 7134 008a E36B     		ldr	r3, [r4, #60]
 7135 008c 414A     		ldr	r2, .L625+8
 7136 008e DA64     		str	r2, [r3, #76]
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/cc1k1gAU.s 			page 261


 7137              		.loc 1 4113 0
 7138 0090 E26B     		ldr	r2, [r4, #60]
 7139 0092 0023     		movs	r3, #0
 7140 0094 1364     		str	r3, [r2, #64]
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7141              		.loc 1 4114 0
 7142 0096 E26B     		ldr	r2, [r4, #60]
 7143 0098 1365     		str	r3, [r2, #80]
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7144              		.loc 1 4117 0
 7145 009a 2168     		ldr	r1, [r4]
 7146 009c 238D     		ldrh	r3, [r4, #40]
 7147 009e 2A46     		mov	r2, r5
 7148 00a0 2431     		adds	r1, r1, #36
 7149 00a2 E06B     		ldr	r0, [r4, #60]
 7150 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7151              	.LVL588:
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7152              		.loc 1 4134 0
 7153 00a8 0546     		mov	r5, r0
 7154              	.LVL589:
 7155 00aa 0028     		cmp	r0, #0
 7156 00ac 5AD1     		bne	.L624
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7157              		.loc 1 4137 0
 7158 00ae 638D     		ldrh	r3, [r4, #42]
 7159 00b0 9BB2     		uxth	r3, r3
 7160 00b2 228D     		ldrh	r2, [r4, #40]
 7161 00b4 9B1A     		subs	r3, r3, r2
 7162 00b6 9BB2     		uxth	r3, r3
 7163 00b8 6385     		strh	r3, [r4, #42]	@ movhi
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7164              		.loc 1 4140 0
 7165 00ba 0023     		movs	r3, #0
 7166 00bc 2385     		strh	r3, [r4, #40]	@ movhi
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7167              		.loc 1 4157 0
 7168 00be 2368     		ldr	r3, [r4]
 7169 00c0 9A69     		ldr	r2, [r3, #24]
 7170 00c2 12F4803F 		tst	r2, #65536
 7171 00c6 5BD0     		beq	.L615
 7172              	.L616:
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7173              		.loc 1 4165 0
 7174 00c8 0023     		movs	r3, #0
 7175 00ca 84F84030 		strb	r3, [r4, #64]
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7176              		.loc 1 4171 0
 7177 00ce 0621     		movs	r1, #6
 7178 00d0 2046     		mov	r0, r4
 7179              	.LVL590:
 7180 00d2 FFF7FEFF 		bl	I2C_Enable_IRQ
 7181              	.LVL591:
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7182              		.loc 1 4174 0
 7183 00d6 2268     		ldr	r2, [r4]
 7184 00d8 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc1k1gAU.s 			page 262


 7185 00da 43F40043 		orr	r3, r3, #32768
 7186 00de 1360     		str	r3, [r2]
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7187              		.loc 1 4176 0
 7188 00e0 96E7     		b	.L608
 7189              	.LVL592:
 7190              	.L622:
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7191              		.loc 1 4041 0
 7192 00e2 0121     		movs	r1, #1
 7193 00e4 2046     		mov	r0, r4
 7194 00e6 FFF7FEFF 		bl	I2C_Disable_IRQ
 7195              	.LVL593:
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7196              		.loc 1 4043 0
 7197 00ea 2368     		ldr	r3, [r4]
 7198 00ec 1A68     		ldr	r2, [r3]
 7199 00ee 12F4804F 		tst	r2, #16384
 7200 00f2 B1D0     		beq	.L611
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7201              		.loc 1 4046 0
 7202 00f4 A26B     		ldr	r2, [r4, #56]
 7203 00f6 002A     		cmp	r2, #0
 7204 00f8 AED0     		beq	.L611
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7205              		.loc 1 4048 0
 7206 00fa 1A68     		ldr	r2, [r3]
 7207 00fc 22F48042 		bic	r2, r2, #16384
 7208 0100 1A60     		str	r2, [r3]
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7209              		.loc 1 4052 0
 7210 0102 A36B     		ldr	r3, [r4, #56]
 7211 0104 244A     		ldr	r2, .L625+12
 7212 0106 1A65     		str	r2, [r3, #80]
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7213              		.loc 1 4055 0
 7214 0108 A06B     		ldr	r0, [r4, #56]
 7215 010a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7216              	.LVL594:
 7217 010e 0028     		cmp	r0, #0
 7218 0110 A2D0     		beq	.L611
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7219              		.loc 1 4058 0
 7220 0112 A06B     		ldr	r0, [r4, #56]
 7221 0114 036D     		ldr	r3, [r0, #80]
 7222 0116 9847     		blx	r3
 7223              	.LVL595:
 7224 0118 9EE7     		b	.L611
 7225              	.L623:
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7226              		.loc 1 4065 0
 7227 011a 2368     		ldr	r3, [r4]
 7228 011c 1A68     		ldr	r2, [r3]
 7229 011e 12F4004F 		tst	r2, #32768
 7230 0122 99D0     		beq	.L611
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7231              		.loc 1 4067 0
ARM GAS  /tmp/cc1k1gAU.s 			page 263


 7232 0124 1A68     		ldr	r2, [r3]
 7233 0126 22F40042 		bic	r2, r2, #32768
 7234 012a 1A60     		str	r2, [r3]
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7235              		.loc 1 4070 0
 7236 012c E36B     		ldr	r3, [r4, #60]
 7237 012e 002B     		cmp	r3, #0
 7238 0130 92D0     		beq	.L611
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7239              		.loc 1 4074 0
 7240 0132 194A     		ldr	r2, .L625+12
 7241 0134 1A65     		str	r2, [r3, #80]
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7242              		.loc 1 4077 0
 7243 0136 E06B     		ldr	r0, [r4, #60]
 7244 0138 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7245              	.LVL596:
 7246 013c 0028     		cmp	r0, #0
 7247 013e 8BD0     		beq	.L611
4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7248              		.loc 1 4080 0
 7249 0140 E06B     		ldr	r0, [r4, #60]
 7250 0142 036D     		ldr	r3, [r0, #80]
 7251 0144 9847     		blx	r3
 7252              	.LVL597:
 7253 0146 87E7     		b	.L611
 7254              	.L612:
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7255              		.loc 1 4122 0
 7256 0148 2823     		movs	r3, #40
 7257 014a 84F84130 		strb	r3, [r4, #65]
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7258              		.loc 1 4123 0
 7259 014e 0022     		movs	r2, #0
 7260 0150 84F84220 		strb	r2, [r4, #66]
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7261              		.loc 1 4126 0
 7262 0154 636C     		ldr	r3, [r4, #68]
 7263 0156 43F08003 		orr	r3, r3, #128
 7264 015a 6364     		str	r3, [r4, #68]
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7265              		.loc 1 4129 0
 7266 015c 84F84020 		strb	r2, [r4, #64]
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7267              		.loc 1 4131 0
 7268 0160 0125     		movs	r5, #1
 7269              	.LVL598:
 7270 0162 55E7     		b	.L608
 7271              	.LVL599:
 7272              	.L624:
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7273              		.loc 1 4145 0
 7274 0164 2823     		movs	r3, #40
 7275 0166 84F84130 		strb	r3, [r4, #65]
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7276              		.loc 1 4146 0
 7277 016a 0022     		movs	r2, #0
ARM GAS  /tmp/cc1k1gAU.s 			page 264


 7278 016c 84F84220 		strb	r2, [r4, #66]
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7279              		.loc 1 4149 0
 7280 0170 636C     		ldr	r3, [r4, #68]
 7281 0172 43F01003 		orr	r3, r3, #16
 7282 0176 6364     		str	r3, [r4, #68]
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7283              		.loc 1 4152 0
 7284 0178 84F84020 		strb	r2, [r4, #64]
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7285              		.loc 1 4154 0
 7286 017c 0125     		movs	r5, #1
 7287 017e 47E7     		b	.L608
 7288              	.L615:
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7289              		.loc 1 4161 0
 7290 0180 0822     		movs	r2, #8
 7291 0182 DA61     		str	r2, [r3, #28]
 7292 0184 A0E7     		b	.L616
 7293              	.LVL600:
 7294              	.L618:
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7295              		.loc 1 4034 0
 7296 0186 0225     		movs	r5, #2
 7297              	.LVL601:
 7298 0188 42E7     		b	.L608
 7299              	.L626:
 7300 018a 00BF     		.align	2
 7301              	.L625:
 7302 018c 00000000 		.word	I2C_Slave_ISR_DMA
 7303 0190 00000000 		.word	I2C_DMASlaveReceiveCplt
 7304 0194 00000000 		.word	I2C_DMAError
 7305 0198 00000000 		.word	I2C_DMAAbort
 7306              		.cfi_endproc
 7307              	.LFE171:
 7309              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 7310              		.align	1
 7311              		.global	HAL_I2C_EnableListen_IT
 7312              		.syntax unified
 7313              		.thumb
 7314              		.thumb_func
 7315              		.fpu fpv5-sp-d16
 7317              	HAL_I2C_EnableListen_IT:
 7318              	.LFB172:
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 7319              		.loc 1 4191 0
 7320              		.cfi_startproc
 7321              		@ args = 0, pretend = 0, frame = 0
 7322              		@ frame_needed = 0, uses_anonymous_args = 0
 7323              	.LVL602:
 7324 0000 08B5     		push	{r3, lr}
 7325              	.LCFI107:
 7326              		.cfi_def_cfa_offset 8
 7327              		.cfi_offset 3, -8
 7328              		.cfi_offset 14, -4
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7329              		.loc 1 4192 0
ARM GAS  /tmp/cc1k1gAU.s 			page 265


 7330 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7331 0006 DBB2     		uxtb	r3, r3
 7332 0008 202B     		cmp	r3, #32
 7333 000a 01D0     		beq	.L631
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7334              		.loc 1 4204 0
 7335 000c 0220     		movs	r0, #2
 7336              	.LVL603:
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7337              		.loc 1 4206 0
 7338 000e 08BD     		pop	{r3, pc}
 7339              	.LVL604:
 7340              	.L631:
4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 7341              		.loc 1 4194 0
 7342 0010 2823     		movs	r3, #40
 7343 0012 80F84130 		strb	r3, [r0, #65]
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7344              		.loc 1 4195 0
 7345 0016 034B     		ldr	r3, .L632
 7346 0018 4363     		str	r3, [r0, #52]
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7347              		.loc 1 4198 0
 7348 001a 0421     		movs	r1, #4
 7349 001c FFF7FEFF 		bl	I2C_Enable_IRQ
 7350              	.LVL605:
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7351              		.loc 1 4200 0
 7352 0020 0020     		movs	r0, #0
 7353 0022 08BD     		pop	{r3, pc}
 7354              	.L633:
 7355              		.align	2
 7356              	.L632:
 7357 0024 00000000 		.word	I2C_Slave_ISR_IT
 7358              		.cfi_endproc
 7359              	.LFE172:
 7361              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 7362              		.align	1
 7363              		.global	HAL_I2C_DisableListen_IT
 7364              		.syntax unified
 7365              		.thumb
 7366              		.thumb_func
 7367              		.fpu fpv5-sp-d16
 7369              	HAL_I2C_DisableListen_IT:
 7370              	.LFB173:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7371              		.loc 1 4215 0
 7372              		.cfi_startproc
 7373              		@ args = 0, pretend = 0, frame = 0
 7374              		@ frame_needed = 0, uses_anonymous_args = 0
 7375              	.LVL606:
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7376              		.loc 1 4220 0
 7377 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7378 0004 DBB2     		uxtb	r3, r3
 7379 0006 282B     		cmp	r3, #40
 7380 0008 01D0     		beq	.L641
ARM GAS  /tmp/cc1k1gAU.s 			page 266


4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7381              		.loc 1 4235 0
 7382 000a 0220     		movs	r0, #2
 7383              	.LVL607:
 7384 000c 7047     		bx	lr
 7385              	.LVL608:
 7386              	.L641:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7387              		.loc 1 4215 0
 7388 000e 10B5     		push	{r4, lr}
 7389              	.LCFI108:
 7390              		.cfi_def_cfa_offset 8
 7391              		.cfi_offset 4, -8
 7392              		.cfi_offset 14, -4
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 7393              		.loc 1 4222 0
 7394 0010 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 7395              	.LVL609:
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7396              		.loc 1 4223 0
 7397 0014 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7398 0018 02F00302 		and	r2, r2, #3
 7399              	.LVL610:
 7400 001c 1343     		orrs	r3, r3, r2
 7401 001e 0363     		str	r3, [r0, #48]
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 7402              		.loc 1 4224 0
 7403 0020 2023     		movs	r3, #32
 7404 0022 80F84130 		strb	r3, [r0, #65]
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 7405              		.loc 1 4225 0
 7406 0026 0024     		movs	r4, #0
 7407 0028 80F84240 		strb	r4, [r0, #66]
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7408              		.loc 1 4226 0
 7409 002c 4463     		str	r4, [r0, #52]
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7410              		.loc 1 4229 0
 7411 002e 0421     		movs	r1, #4
 7412 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
 7413              	.LVL611:
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7414              		.loc 1 4231 0
 7415 0034 2046     		mov	r0, r4
 7416 0036 10BD     		pop	{r4, pc}
 7417              		.cfi_endproc
 7418              	.LFE173:
 7420              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 7421              		.align	1
 7422              		.global	HAL_I2C_Master_Abort_IT
 7423              		.syntax unified
 7424              		.thumb
 7425              		.thumb_func
 7426              		.fpu fpv5-sp-d16
 7428              	HAL_I2C_Master_Abort_IT:
 7429              	.LFB174:
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
ARM GAS  /tmp/cc1k1gAU.s 			page 267


 7430              		.loc 1 4248 0
 7431              		.cfi_startproc
 7432              		@ args = 0, pretend = 0, frame = 0
 7433              		@ frame_needed = 0, uses_anonymous_args = 0
 7434              	.LVL612:
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7435              		.loc 1 4249 0
 7436 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7437 0004 DBB2     		uxtb	r3, r3
 7438 0006 102B     		cmp	r3, #16
 7439 0008 01D0     		beq	.L650
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7440              		.loc 1 4279 0
 7441 000a 0120     		movs	r0, #1
 7442              	.LVL613:
 7443 000c 7047     		bx	lr
 7444              	.LVL614:
 7445              	.L650:
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7446              		.loc 1 4252 0
 7447 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7448 0012 012B     		cmp	r3, #1
 7449 0014 01D1     		bne	.L651
 7450 0016 0220     		movs	r0, #2
 7451              	.LVL615:
 7452 0018 7047     		bx	lr
 7453              	.LVL616:
 7454              	.L651:
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7455              		.loc 1 4248 0 discriminator 2
 7456 001a 70B5     		push	{r4, r5, r6, lr}
 7457              	.LCFI109:
 7458              		.cfi_def_cfa_offset 16
 7459              		.cfi_offset 4, -16
 7460              		.cfi_offset 5, -12
 7461              		.cfi_offset 6, -8
 7462              		.cfi_offset 14, -4
 7463 001c 82B0     		sub	sp, sp, #8
 7464              	.LCFI110:
 7465              		.cfi_def_cfa_offset 24
 7466 001e 0D46     		mov	r5, r1
 7467 0020 0446     		mov	r4, r0
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7468              		.loc 1 4252 0 discriminator 2
 7469 0022 0126     		movs	r6, #1
 7470 0024 80F84060 		strb	r6, [r0, #64]
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 7471              		.loc 1 4255 0 discriminator 2
 7472 0028 0221     		movs	r1, #2
 7473              	.LVL617:
 7474 002a FFF7FEFF 		bl	I2C_Disable_IRQ
 7475              	.LVL618:
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7476              		.loc 1 4256 0 discriminator 2
 7477 002e 3146     		mov	r1, r6
 7478 0030 2046     		mov	r0, r4
 7479 0032 FFF7FEFF 		bl	I2C_Disable_IRQ
ARM GAS  /tmp/cc1k1gAU.s 			page 268


 7480              	.LVL619:
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7481              		.loc 1 4259 0 discriminator 2
 7482 0036 6023     		movs	r3, #96
 7483 0038 84F84130 		strb	r3, [r4, #65]
4263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7484              		.loc 1 4263 0 discriminator 2
 7485 003c 094B     		ldr	r3, .L652
 7486 003e 0093     		str	r3, [sp]
 7487 0040 4FF00073 		mov	r3, #33554432
 7488 0044 3246     		mov	r2, r6
 7489 0046 2946     		mov	r1, r5
 7490 0048 2046     		mov	r0, r4
 7491 004a FFF7FEFF 		bl	I2C_TransferConfig
 7492              	.LVL620:
4266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7493              		.loc 1 4266 0 discriminator 2
 7494 004e 0025     		movs	r5, #0
 7495 0050 84F84050 		strb	r5, [r4, #64]
4271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7496              		.loc 1 4271 0 discriminator 2
 7497 0054 1221     		movs	r1, #18
 7498 0056 2046     		mov	r0, r4
 7499 0058 FFF7FEFF 		bl	I2C_Enable_IRQ
 7500              	.LVL621:
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7501              		.loc 1 4273 0 discriminator 2
 7502 005c 2846     		mov	r0, r5
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7503              		.loc 1 4281 0 discriminator 2
 7504 005e 02B0     		add	sp, sp, #8
 7505              	.LCFI111:
 7506              		.cfi_def_cfa_offset 16
 7507              		@ sp needed
 7508 0060 70BD     		pop	{r4, r5, r6, pc}
 7509              	.LVL622:
 7510              	.L653:
 7511 0062 00BF     		.align	2
 7512              	.L652:
 7513 0064 00400080 		.word	-2147467264
 7514              		.cfi_endproc
 7515              	.LFE174:
 7517              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 7518              		.align	1
 7519              		.global	HAL_I2C_EV_IRQHandler
 7520              		.syntax unified
 7521              		.thumb
 7522              		.thumb_func
 7523              		.fpu fpv5-sp-d16
 7525              	HAL_I2C_EV_IRQHandler:
 7526              	.LFB175:
4298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 7527              		.loc 1 4298 0
 7528              		.cfi_startproc
 7529              		@ args = 0, pretend = 0, frame = 0
 7530              		@ frame_needed = 0, uses_anonymous_args = 0
 7531              	.LVL623:
ARM GAS  /tmp/cc1k1gAU.s 			page 269


 7532 0000 08B5     		push	{r3, lr}
 7533              	.LCFI112:
 7534              		.cfi_def_cfa_offset 8
 7535              		.cfi_offset 3, -8
 7536              		.cfi_offset 14, -4
4300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 7537              		.loc 1 4300 0
 7538 0002 0368     		ldr	r3, [r0]
 7539 0004 9969     		ldr	r1, [r3, #24]
 7540              	.LVL624:
4301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7541              		.loc 1 4301 0
 7542 0006 1A68     		ldr	r2, [r3]
 7543              	.LVL625:
4304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7544              		.loc 1 4304 0
 7545 0008 436B     		ldr	r3, [r0, #52]
 7546 000a 03B1     		cbz	r3, .L654
4306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7547              		.loc 1 4306 0
 7548 000c 9847     		blx	r3
 7549              	.LVL626:
 7550              	.L654:
 7551 000e 08BD     		pop	{r3, pc}
 7552              		.cfi_endproc
 7553              	.LFE175:
 7555              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 7556              		.align	1
 7557              		.weak	HAL_I2C_MasterTxCpltCallback
 7558              		.syntax unified
 7559              		.thumb
 7560              		.thumb_func
 7561              		.fpu fpv5-sp-d16
 7563              	HAL_I2C_MasterTxCpltCallback:
 7564              	.LFB177:
4366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7565              		.loc 1 4366 0
 7566              		.cfi_startproc
 7567              		@ args = 0, pretend = 0, frame = 0
 7568              		@ frame_needed = 0, uses_anonymous_args = 0
 7569              		@ link register save eliminated.
 7570              	.LVL627:
 7571 0000 7047     		bx	lr
 7572              		.cfi_endproc
 7573              	.LFE177:
 7575              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 7576              		.align	1
 7577              		.weak	HAL_I2C_MasterRxCpltCallback
 7578              		.syntax unified
 7579              		.thumb
 7580              		.thumb_func
 7581              		.fpu fpv5-sp-d16
 7583              	HAL_I2C_MasterRxCpltCallback:
 7584              	.LFB178:
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7585              		.loc 1 4382 0
 7586              		.cfi_startproc
ARM GAS  /tmp/cc1k1gAU.s 			page 270


 7587              		@ args = 0, pretend = 0, frame = 0
 7588              		@ frame_needed = 0, uses_anonymous_args = 0
 7589              		@ link register save eliminated.
 7590              	.LVL628:
 7591 0000 7047     		bx	lr
 7592              		.cfi_endproc
 7593              	.LFE178:
 7595              		.section	.text.I2C_ITMasterSeqCplt,"ax",%progbits
 7596              		.align	1
 7597              		.syntax unified
 7598              		.thumb
 7599              		.thumb_func
 7600              		.fpu fpv5-sp-d16
 7602              	I2C_ITMasterSeqCplt:
 7603              	.LFB197:
5319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7604              		.loc 1 5319 0
 7605              		.cfi_startproc
 7606              		@ args = 0, pretend = 0, frame = 0
 7607              		@ frame_needed = 0, uses_anonymous_args = 0
 7608              	.LVL629:
5319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7609              		.loc 1 5319 0
 7610 0000 38B5     		push	{r3, r4, r5, lr}
 7611              	.LCFI113:
 7612              		.cfi_def_cfa_offset 16
 7613              		.cfi_offset 3, -16
 7614              		.cfi_offset 4, -12
 7615              		.cfi_offset 5, -8
 7616              		.cfi_offset 14, -4
 7617 0002 0446     		mov	r4, r0
5321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7618              		.loc 1 5321 0
 7619 0004 0023     		movs	r3, #0
 7620 0006 80F84230 		strb	r3, [r0, #66]
5325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7621              		.loc 1 5325 0
 7622 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7623 000e DBB2     		uxtb	r3, r3
 7624 0010 212B     		cmp	r3, #33
 7625 0012 0FD0     		beq	.L663
5347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7626              		.loc 1 5347 0
 7627 0014 2023     		movs	r3, #32
 7628 0016 80F84130 		strb	r3, [r0, #65]
5348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7629              		.loc 1 5348 0
 7630 001a 1223     		movs	r3, #18
 7631 001c 0363     		str	r3, [r0, #48]
5349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7632              		.loc 1 5349 0
 7633 001e 0025     		movs	r5, #0
 7634 0020 4563     		str	r5, [r0, #52]
5352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7635              		.loc 1 5352 0
 7636 0022 0221     		movs	r1, #2
 7637 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
ARM GAS  /tmp/cc1k1gAU.s 			page 271


 7638              	.LVL630:
5355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7639              		.loc 1 5355 0
 7640 0028 84F84050 		strb	r5, [r4, #64]
5361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7641              		.loc 1 5361 0
 7642 002c 2046     		mov	r0, r4
 7643 002e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7644              	.LVL631:
 7645 0032 38BD     		pop	{r3, r4, r5, pc}
 7646              	.LVL632:
 7647              	.L663:
5327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7648              		.loc 1 5327 0
 7649 0034 2023     		movs	r3, #32
 7650 0036 80F84130 		strb	r3, [r0, #65]
5328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7651              		.loc 1 5328 0
 7652 003a 1123     		movs	r3, #17
 7653 003c 0363     		str	r3, [r0, #48]
5329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7654              		.loc 1 5329 0
 7655 003e 0025     		movs	r5, #0
 7656 0040 4563     		str	r5, [r0, #52]
5332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7657              		.loc 1 5332 0
 7658 0042 0121     		movs	r1, #1
 7659 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7660              	.LVL633:
5335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7661              		.loc 1 5335 0
 7662 0048 84F84050 		strb	r5, [r4, #64]
5341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7663              		.loc 1 5341 0
 7664 004c 2046     		mov	r0, r4
 7665 004e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7666              	.LVL634:
 7667 0052 38BD     		pop	{r3, r4, r5, pc}
 7668              		.cfi_endproc
 7669              	.LFE197:
 7671              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 7672              		.align	1
 7673              		.weak	HAL_I2C_SlaveTxCpltCallback
 7674              		.syntax unified
 7675              		.thumb
 7676              		.thumb_func
 7677              		.fpu fpv5-sp-d16
 7679              	HAL_I2C_SlaveTxCpltCallback:
 7680              	.LFB179:
4397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7681              		.loc 1 4397 0
 7682              		.cfi_startproc
 7683              		@ args = 0, pretend = 0, frame = 0
 7684              		@ frame_needed = 0, uses_anonymous_args = 0
 7685              		@ link register save eliminated.
 7686              	.LVL635:
 7687 0000 7047     		bx	lr
ARM GAS  /tmp/cc1k1gAU.s 			page 272


 7688              		.cfi_endproc
 7689              	.LFE179:
 7691              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 7692              		.align	1
 7693              		.weak	HAL_I2C_SlaveRxCpltCallback
 7694              		.syntax unified
 7695              		.thumb
 7696              		.thumb_func
 7697              		.fpu fpv5-sp-d16
 7699              	HAL_I2C_SlaveRxCpltCallback:
 7700              	.LFB180:
4413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7701              		.loc 1 4413 0
 7702              		.cfi_startproc
 7703              		@ args = 0, pretend = 0, frame = 0
 7704              		@ frame_needed = 0, uses_anonymous_args = 0
 7705              		@ link register save eliminated.
 7706              	.LVL636:
 7707 0000 7047     		bx	lr
 7708              		.cfi_endproc
 7709              	.LFE180:
 7711              		.section	.text.I2C_ITSlaveSeqCplt,"ax",%progbits
 7712              		.align	1
 7713              		.syntax unified
 7714              		.thumb
 7715              		.thumb_func
 7716              		.fpu fpv5-sp-d16
 7718              	I2C_ITSlaveSeqCplt:
 7719              	.LFB198:
5372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7720              		.loc 1 5372 0
 7721              		.cfi_startproc
 7722              		@ args = 0, pretend = 0, frame = 0
 7723              		@ frame_needed = 0, uses_anonymous_args = 0
 7724              	.LVL637:
5372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7725              		.loc 1 5372 0
 7726 0000 10B5     		push	{r4, lr}
 7727              	.LCFI114:
 7728              		.cfi_def_cfa_offset 8
 7729              		.cfi_offset 4, -8
 7730              		.cfi_offset 14, -4
 7731 0002 0446     		mov	r4, r0
5374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7732              		.loc 1 5374 0
 7733 0004 0023     		movs	r3, #0
 7734 0006 80F84230 		strb	r3, [r0, #66]
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7735              		.loc 1 5376 0
 7736 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7737 000e DBB2     		uxtb	r3, r3
 7738 0010 292B     		cmp	r3, #41
 7739 0012 05D0     		beq	.L670
5396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7740              		.loc 1 5396 0
 7741 0014 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7742 0018 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc1k1gAU.s 			page 273


 7743 001a 2A2B     		cmp	r3, #42
 7744 001c 0FD0     		beq	.L671
 7745              	.LVL638:
 7746              	.L666:
 7747 001e 10BD     		pop	{r4, pc}
 7748              	.LVL639:
 7749              	.L670:
5379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 7750              		.loc 1 5379 0
 7751 0020 2823     		movs	r3, #40
 7752 0022 80F84130 		strb	r3, [r0, #65]
5380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7753              		.loc 1 5380 0
 7754 0026 2123     		movs	r3, #33
 7755 0028 0363     		str	r3, [r0, #48]
5383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7756              		.loc 1 5383 0
 7757 002a 0121     		movs	r1, #1
 7758 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 7759              	.LVL640:
5386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7760              		.loc 1 5386 0
 7761 0030 0023     		movs	r3, #0
 7762 0032 84F84030 		strb	r3, [r4, #64]
5392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7763              		.loc 1 5392 0
 7764 0036 2046     		mov	r0, r4
 7765 0038 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7766              	.LVL641:
 7767 003c 10BD     		pop	{r4, pc}
 7768              	.LVL642:
 7769              	.L671:
5399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 7770              		.loc 1 5399 0
 7771 003e 2823     		movs	r3, #40
 7772 0040 80F84130 		strb	r3, [r0, #65]
5400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7773              		.loc 1 5400 0
 7774 0044 2223     		movs	r3, #34
 7775 0046 0363     		str	r3, [r0, #48]
5403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7776              		.loc 1 5403 0
 7777 0048 0221     		movs	r1, #2
 7778 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 7779              	.LVL643:
5406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7780              		.loc 1 5406 0
 7781 004e 0023     		movs	r3, #0
 7782 0050 84F84030 		strb	r3, [r4, #64]
5412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7783              		.loc 1 5412 0
 7784 0054 2046     		mov	r0, r4
 7785 0056 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7786              	.LVL644:
5419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7787              		.loc 1 5419 0
 7788 005a E0E7     		b	.L666
ARM GAS  /tmp/cc1k1gAU.s 			page 274


 7789              		.cfi_endproc
 7790              	.LFE198:
 7792              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 7793              		.align	1
 7794              		.syntax unified
 7795              		.thumb
 7796              		.thumb_func
 7797              		.fpu fpv5-sp-d16
 7799              	I2C_DMASlaveTransmitCplt:
 7800              	.LFB205:
5922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7801              		.loc 1 5922 0
 7802              		.cfi_startproc
 7803              		@ args = 0, pretend = 0, frame = 0
 7804              		@ frame_needed = 0, uses_anonymous_args = 0
 7805              	.LVL645:
 7806 0000 08B5     		push	{r3, lr}
 7807              	.LCFI115:
 7808              		.cfi_def_cfa_offset 8
 7809              		.cfi_offset 3, -8
 7810              		.cfi_offset 14, -4
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7811              		.loc 1 5923 0
 7812 0002 806B     		ldr	r0, [r0, #56]
 7813              	.LVL646:
5924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7814              		.loc 1 5924 0
 7815 0004 C36A     		ldr	r3, [r0, #44]
 7816              	.LVL647:
5926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7817              		.loc 1 5926 0
 7818 0006 002B     		cmp	r3, #0
 7819 0008 18BF     		it	ne
 7820 000a B3F1807F 		cmpne	r3, #16777216
 7821 000e 00D0     		beq	.L675
 7822              	.LVL648:
 7823              	.L672:
 7824 0010 08BD     		pop	{r3, pc}
 7825              	.LVL649:
 7826              	.L675:
5929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7827              		.loc 1 5929 0
 7828 0012 0268     		ldr	r2, [r0]
 7829 0014 1368     		ldr	r3, [r2]
 7830              	.LVL650:
 7831 0016 23F48043 		bic	r3, r3, #16384
 7832 001a 1360     		str	r3, [r2]
5933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7833              		.loc 1 5933 0
 7834 001c FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7835              	.LVL651:
5941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7836              		.loc 1 5941 0
 7837 0020 F6E7     		b	.L672
 7838              		.cfi_endproc
 7839              	.LFE205:
 7841              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
ARM GAS  /tmp/cc1k1gAU.s 			page 275


 7842              		.align	1
 7843              		.syntax unified
 7844              		.thumb
 7845              		.thumb_func
 7846              		.fpu fpv5-sp-d16
 7848              	I2C_DMASlaveReceiveCplt:
 7849              	.LFB207:
5997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7850              		.loc 1 5997 0
 7851              		.cfi_startproc
 7852              		@ args = 0, pretend = 0, frame = 0
 7853              		@ frame_needed = 0, uses_anonymous_args = 0
 7854              	.LVL652:
 7855 0000 08B5     		push	{r3, lr}
 7856              	.LCFI116:
 7857              		.cfi_def_cfa_offset 8
 7858              		.cfi_offset 3, -8
 7859              		.cfi_offset 14, -4
5998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7860              		.loc 1 5998 0
 7861 0002 806B     		ldr	r0, [r0, #56]
 7862              	.LVL653:
5999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7863              		.loc 1 5999 0
 7864 0004 C26A     		ldr	r2, [r0, #44]
 7865              	.LVL654:
6001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7866              		.loc 1 6001 0
 7867 0006 C36B     		ldr	r3, [r0, #60]
 7868 0008 1B68     		ldr	r3, [r3]
 7869 000a 5B68     		ldr	r3, [r3, #4]
 7870 000c 4BB9     		cbnz	r3, .L676
6001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7871              		.loc 1 6001 0 is_stmt 0 discriminator 1
 7872 000e 12F5803F 		cmn	r2, #65536
 7873 0012 06D0     		beq	.L676
6005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7874              		.loc 1 6005 0 is_stmt 1
 7875 0014 0268     		ldr	r2, [r0]
 7876              	.LVL655:
 7877 0016 1368     		ldr	r3, [r2]
 7878 0018 23F40043 		bic	r3, r3, #32768
 7879 001c 1360     		str	r3, [r2]
6008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7880              		.loc 1 6008 0
 7881 001e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7882              	.LVL656:
 7883              	.L676:
 7884 0022 08BD     		pop	{r3, pc}
 7885              		.cfi_endproc
 7886              	.LFE207:
 7888              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 7889              		.align	1
 7890              		.weak	HAL_I2C_AddrCallback
 7891              		.syntax unified
 7892              		.thumb
 7893              		.thumb_func
ARM GAS  /tmp/cc1k1gAU.s 			page 276


 7894              		.fpu fpv5-sp-d16
 7896              	HAL_I2C_AddrCallback:
 7897              	.LFB181:
4431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7898              		.loc 1 4431 0
 7899              		.cfi_startproc
 7900              		@ args = 0, pretend = 0, frame = 0
 7901              		@ frame_needed = 0, uses_anonymous_args = 0
 7902              		@ link register save eliminated.
 7903              	.LVL657:
 7904 0000 7047     		bx	lr
 7905              		.cfi_endproc
 7906              	.LFE181:
 7908              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 7909              		.align	1
 7910              		.syntax unified
 7911              		.thumb
 7912              		.thumb_func
 7913              		.fpu fpv5-sp-d16
 7915              	I2C_ITAddrCplt:
 7916              	.LFB196:
5224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
 7917              		.loc 1 5224 0
 7918              		.cfi_startproc
 7919              		@ args = 0, pretend = 0, frame = 0
 7920              		@ frame_needed = 0, uses_anonymous_args = 0
 7921              	.LVL658:
5224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
 7922              		.loc 1 5224 0
 7923 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7924              	.LCFI117:
 7925              		.cfi_def_cfa_offset 24
 7926              		.cfi_offset 3, -24
 7927              		.cfi_offset 4, -20
 7928              		.cfi_offset 5, -16
 7929              		.cfi_offset 6, -12
 7930              		.cfi_offset 7, -8
 7931              		.cfi_offset 14, -4
5234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7932              		.loc 1 5234 0
 7933 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7934 0006 03F02803 		and	r3, r3, #40
 7935 000a 282B     		cmp	r3, #40
 7936 000c 06D0     		beq	.L686
5306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7937              		.loc 1 5306 0
 7938 000e 0368     		ldr	r3, [r0]
 7939 0010 0822     		movs	r2, #8
 7940 0012 DA61     		str	r2, [r3, #28]
5309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7941              		.loc 1 5309 0
 7942 0014 0023     		movs	r3, #0
 7943 0016 80F84030 		strb	r3, [r0, #64]
 7944              	.LVL659:
 7945              	.L680:
 7946 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7947              	.LVL660:
ARM GAS  /tmp/cc1k1gAU.s 			page 277


 7948              	.L686:
 7949 001c 0446     		mov	r4, r0
5236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 7950              		.loc 1 5236 0
 7951 001e 0368     		ldr	r3, [r0]
 7952 0020 9E69     		ldr	r6, [r3, #24]
 7953 0022 C6F30046 		ubfx	r6, r6, #16, #1
 7954              	.LVL661:
5237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 7955              		.loc 1 5237 0
 7956 0026 9A69     		ldr	r2, [r3, #24]
 7957 0028 120C     		lsrs	r2, r2, #16
 7958 002a 02F0FE05 		and	r5, r2, #254
 7959              	.LVL662:
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 7960              		.loc 1 5238 0
 7961 002e 9A68     		ldr	r2, [r3, #8]
 7962 0030 C2F30902 		ubfx	r2, r2, #0, #10
 7963              	.LVL663:
5239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7964              		.loc 1 5239 0
 7965 0034 DF68     		ldr	r7, [r3, #12]
 7966 0036 07F0FE07 		and	r7, r7, #254
 7967              	.LVL664:
5242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7968              		.loc 1 5242 0
 7969 003a C168     		ldr	r1, [r0, #12]
 7970              	.LVL665:
 7971 003c 0229     		cmp	r1, #2
 7972 003e 21D1     		bne	.L682
5244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7973              		.loc 1 5244 0
 7974 0040 85EAD215 		eor	r5, r5, r2, lsr #7
 7975              	.LVL666:
 7976 0044 15F0060F 		tst	r5, #6
 7977 0048 10D1     		bne	.L683
 7978              	.LVL667:
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 7979              		.loc 1 5247 0
 7980 004a 816C     		ldr	r1, [r0, #72]
 7981 004c 0131     		adds	r1, r1, #1
 7982 004e 8164     		str	r1, [r0, #72]
5248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7983              		.loc 1 5248 0
 7984 0050 816C     		ldr	r1, [r0, #72]
 7985 0052 0229     		cmp	r1, #2
 7986 0054 E1D1     		bne	.L680
5251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7987              		.loc 1 5251 0
 7988 0056 0021     		movs	r1, #0
 7989 0058 8164     		str	r1, [r0, #72]
5254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7990              		.loc 1 5254 0
 7991 005a 0820     		movs	r0, #8
 7992              	.LVL668:
 7993 005c D861     		str	r0, [r3, #28]
5257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 278


 7994              		.loc 1 5257 0
 7995 005e 84F84010 		strb	r1, [r4, #64]
5263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7996              		.loc 1 5263 0
 7997 0062 3146     		mov	r1, r6
 7998 0064 2046     		mov	r0, r4
 7999 0066 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8000              	.LVL669:
 8001 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8002              	.LVL670:
 8003              	.L683:
5272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8004              		.loc 1 5272 0
 8005 006c 0421     		movs	r1, #4
 8006 006e FFF7FEFF 		bl	I2C_Disable_IRQ
 8007              	.LVL671:
5275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8008              		.loc 1 5275 0
 8009 0072 0023     		movs	r3, #0
 8010 0074 84F84030 		strb	r3, [r4, #64]
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8011              		.loc 1 5281 0
 8012 0078 3A46     		mov	r2, r7
 8013 007a 3146     		mov	r1, r6
 8014 007c 2046     		mov	r0, r4
 8015 007e FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8016              	.LVL672:
 8017 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8018              	.LVL673:
 8019              	.L682:
5289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8020              		.loc 1 5289 0
 8021 0084 0421     		movs	r1, #4
 8022 0086 FFF7FEFF 		bl	I2C_Disable_IRQ
 8023              	.LVL674:
5292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8024              		.loc 1 5292 0
 8025 008a 0023     		movs	r3, #0
 8026 008c 84F84030 		strb	r3, [r4, #64]
5298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8027              		.loc 1 5298 0
 8028 0090 2A46     		mov	r2, r5
 8029 0092 3146     		mov	r1, r6
 8030 0094 2046     		mov	r0, r4
 8031 0096 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8032              	.LVL675:
 8033 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8034              		.cfi_endproc
 8035              	.LFE196:
 8037              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 8038              		.align	1
 8039              		.weak	HAL_I2C_ListenCpltCallback
 8040              		.syntax unified
 8041              		.thumb
 8042              		.thumb_func
 8043              		.fpu fpv5-sp-d16
 8045              	HAL_I2C_ListenCpltCallback:
ARM GAS  /tmp/cc1k1gAU.s 			page 279


 8046              	.LFB182:
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8047              		.loc 1 4449 0
 8048              		.cfi_startproc
 8049              		@ args = 0, pretend = 0, frame = 0
 8050              		@ frame_needed = 0, uses_anonymous_args = 0
 8051              		@ link register save eliminated.
 8052              	.LVL676:
 8053 0000 7047     		bx	lr
 8054              		.cfi_endproc
 8055              	.LFE182:
 8057              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 8058              		.align	1
 8059              		.syntax unified
 8060              		.thumb
 8061              		.thumb_func
 8062              		.fpu fpv5-sp-d16
 8064              	I2C_ITListenCplt:
 8065              	.LFB201:
5684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 8066              		.loc 1 5684 0
 8067              		.cfi_startproc
 8068              		@ args = 0, pretend = 0, frame = 0
 8069              		@ frame_needed = 0, uses_anonymous_args = 0
 8070              	.LVL677:
5684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 8071              		.loc 1 5684 0
 8072 0000 10B5     		push	{r4, lr}
 8073              	.LCFI118:
 8074              		.cfi_def_cfa_offset 8
 8075              		.cfi_offset 4, -8
 8076              		.cfi_offset 14, -4
 8077 0002 0446     		mov	r4, r0
5686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8078              		.loc 1 5686 0
 8079 0004 174B     		ldr	r3, .L691
 8080 0006 C362     		str	r3, [r0, #44]
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 8081              		.loc 1 5687 0
 8082 0008 0023     		movs	r3, #0
 8083 000a 0363     		str	r3, [r0, #48]
5688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8084              		.loc 1 5688 0
 8085 000c 2022     		movs	r2, #32
 8086 000e 80F84120 		strb	r2, [r0, #65]
5689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8087              		.loc 1 5689 0
 8088 0012 80F84230 		strb	r3, [r0, #66]
5690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8089              		.loc 1 5690 0
 8090 0016 4363     		str	r3, [r0, #52]
5693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8091              		.loc 1 5693 0
 8092 0018 11F0040F 		tst	r1, #4
 8093 001c 13D0     		beq	.L689
5696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8094              		.loc 1 5696 0
ARM GAS  /tmp/cc1k1gAU.s 			page 280


 8095 001e 436A     		ldr	r3, [r0, #36]
 8096 0020 0268     		ldr	r2, [r0]
 8097 0022 526A     		ldr	r2, [r2, #36]
 8098 0024 1A70     		strb	r2, [r3]
5699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8099              		.loc 1 5699 0
 8100 0026 436A     		ldr	r3, [r0, #36]
 8101 0028 0133     		adds	r3, r3, #1
 8102 002a 4362     		str	r3, [r0, #36]
5701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8103              		.loc 1 5701 0
 8104 002c 038D     		ldrh	r3, [r0, #40]
 8105 002e 53B1     		cbz	r3, .L689
5703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8106              		.loc 1 5703 0
 8107 0030 013B     		subs	r3, r3, #1
 8108 0032 0385     		strh	r3, [r0, #40]	@ movhi
5704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8109              		.loc 1 5704 0
 8110 0034 438D     		ldrh	r3, [r0, #42]
 8111 0036 9BB2     		uxth	r3, r3
 8112 0038 013B     		subs	r3, r3, #1
 8113 003a 9BB2     		uxth	r3, r3
 8114 003c 4385     		strh	r3, [r0, #42]	@ movhi
5707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8115              		.loc 1 5707 0
 8116 003e 436C     		ldr	r3, [r0, #68]
 8117 0040 43F00403 		orr	r3, r3, #4
 8118 0044 4364     		str	r3, [r0, #68]
 8119              	.L689:
5712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8120              		.loc 1 5712 0
 8121 0046 0721     		movs	r1, #7
 8122              	.LVL678:
 8123 0048 2046     		mov	r0, r4
 8124              	.LVL679:
 8125 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 8126              	.LVL680:
5715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8127              		.loc 1 5715 0
 8128 004e 2368     		ldr	r3, [r4]
 8129 0050 1022     		movs	r2, #16
 8130 0052 DA61     		str	r2, [r3, #28]
5718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8131              		.loc 1 5718 0
 8132 0054 0023     		movs	r3, #0
 8133 0056 84F84030 		strb	r3, [r4, #64]
5724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8134              		.loc 1 5724 0
 8135 005a 2046     		mov	r0, r4
 8136 005c FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8137              	.LVL681:
 8138 0060 10BD     		pop	{r4, pc}
 8139              	.LVL682:
 8140              	.L692:
 8141 0062 00BF     		.align	2
 8142              	.L691:
ARM GAS  /tmp/cc1k1gAU.s 			page 281


 8143 0064 0000FFFF 		.word	-65536
 8144              		.cfi_endproc
 8145              	.LFE201:
 8147              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 8148              		.align	1
 8149              		.weak	HAL_I2C_MemTxCpltCallback
 8150              		.syntax unified
 8151              		.thumb
 8152              		.thumb_func
 8153              		.fpu fpv5-sp-d16
 8155              	HAL_I2C_MemTxCpltCallback:
 8156              	.LFB183:
4465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8157              		.loc 1 4465 0
 8158              		.cfi_startproc
 8159              		@ args = 0, pretend = 0, frame = 0
 8160              		@ frame_needed = 0, uses_anonymous_args = 0
 8161              		@ link register save eliminated.
 8162              	.LVL683:
 8163 0000 7047     		bx	lr
 8164              		.cfi_endproc
 8165              	.LFE183:
 8167              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 8168              		.align	1
 8169              		.weak	HAL_I2C_MemRxCpltCallback
 8170              		.syntax unified
 8171              		.thumb
 8172              		.thumb_func
 8173              		.fpu fpv5-sp-d16
 8175              	HAL_I2C_MemRxCpltCallback:
 8176              	.LFB184:
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8177              		.loc 1 4481 0
 8178              		.cfi_startproc
 8179              		@ args = 0, pretend = 0, frame = 0
 8180              		@ frame_needed = 0, uses_anonymous_args = 0
 8181              		@ link register save eliminated.
 8182              	.LVL684:
 8183 0000 7047     		bx	lr
 8184              		.cfi_endproc
 8185              	.LFE184:
 8187              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 8188              		.align	1
 8189              		.weak	HAL_I2C_ErrorCallback
 8190              		.syntax unified
 8191              		.thumb
 8192              		.thumb_func
 8193              		.fpu fpv5-sp-d16
 8195              	HAL_I2C_ErrorCallback:
 8196              	.LFB185:
4497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8197              		.loc 1 4497 0
 8198              		.cfi_startproc
 8199              		@ args = 0, pretend = 0, frame = 0
 8200              		@ frame_needed = 0, uses_anonymous_args = 0
 8201              		@ link register save eliminated.
 8202              	.LVL685:
ARM GAS  /tmp/cc1k1gAU.s 			page 282


 8203 0000 7047     		bx	lr
 8204              		.cfi_endproc
 8205              	.LFE185:
 8207              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 8208              		.align	1
 8209              		.weak	HAL_I2C_AbortCpltCallback
 8210              		.syntax unified
 8211              		.thumb
 8212              		.thumb_func
 8213              		.fpu fpv5-sp-d16
 8215              	HAL_I2C_AbortCpltCallback:
 8216              	.LFB186:
4513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8217              		.loc 1 4513 0
 8218              		.cfi_startproc
 8219              		@ args = 0, pretend = 0, frame = 0
 8220              		@ frame_needed = 0, uses_anonymous_args = 0
 8221              		@ link register save eliminated.
 8222              	.LVL686:
 8223 0000 7047     		bx	lr
 8224              		.cfi_endproc
 8225              	.LFE186:
 8227              		.section	.text.I2C_ITError,"ax",%progbits
 8228              		.align	1
 8229              		.syntax unified
 8230              		.thumb
 8231              		.thumb_func
 8232              		.fpu fpv5-sp-d16
 8234              	I2C_ITError:
 8235              	.LFB202:
5735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8236              		.loc 1 5735 0
 8237              		.cfi_startproc
 8238              		@ args = 0, pretend = 0, frame = 0
 8239              		@ frame_needed = 0, uses_anonymous_args = 0
 8240              	.LVL687:
5735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8241              		.loc 1 5735 0
 8242 0000 10B5     		push	{r4, lr}
 8243              	.LCFI119:
 8244              		.cfi_def_cfa_offset 8
 8245              		.cfi_offset 4, -8
 8246              		.cfi_offset 14, -4
 8247 0002 0446     		mov	r4, r0
5736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8248              		.loc 1 5736 0
 8249 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8250              	.LVL688:
5739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8251              		.loc 1 5739 0
 8252 0008 0022     		movs	r2, #0
 8253 000a 80F84220 		strb	r2, [r0, #66]
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 8254              		.loc 1 5740 0
 8255 000e 3648     		ldr	r0, .L708
 8256              	.LVL689:
 8257 0010 E062     		str	r0, [r4, #44]
ARM GAS  /tmp/cc1k1gAU.s 			page 283


5741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8258              		.loc 1 5741 0
 8259 0012 6285     		strh	r2, [r4, #42]	@ movhi
5744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8260              		.loc 1 5744 0
 8261 0014 626C     		ldr	r2, [r4, #68]
 8262 0016 1143     		orrs	r1, r1, r2
 8263              	.LVL690:
 8264 0018 6164     		str	r1, [r4, #68]
5748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8265              		.loc 1 5748 0
 8266 001a 283B     		subs	r3, r3, #40
 8267              	.LVL691:
 8268 001c DBB2     		uxtb	r3, r3
5747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 8269              		.loc 1 5747 0
 8270 001e 022B     		cmp	r3, #2
 8271 0020 1FD8     		bhi	.L698
5752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8272              		.loc 1 5752 0
 8273 0022 0321     		movs	r1, #3
 8274 0024 2046     		mov	r0, r4
 8275 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 8276              	.LVL692:
5755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8277              		.loc 1 5755 0
 8278 002a 2823     		movs	r3, #40
 8279 002c 84F84130 		strb	r3, [r4, #65]
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 8280              		.loc 1 5756 0
 8281 0030 0023     		movs	r3, #0
 8282 0032 2363     		str	r3, [r4, #48]
5757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8283              		.loc 1 5757 0
 8284 0034 2D4B     		ldr	r3, .L708+4
 8285 0036 6363     		str	r3, [r4, #52]
 8286              	.L699:
5776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8287              		.loc 1 5776 0
 8288 0038 2368     		ldr	r3, [r4]
 8289 003a 1A68     		ldr	r2, [r3]
 8290 003c 12F4804F 		tst	r2, #16384
 8291 0040 23D0     		beq	.L701
5778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8292              		.loc 1 5778 0
 8293 0042 1A68     		ldr	r2, [r3]
 8294 0044 22F48042 		bic	r2, r2, #16384
 8295 0048 1A60     		str	r2, [r3]
5780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8296              		.loc 1 5780 0
 8297 004a A36B     		ldr	r3, [r4, #56]
 8298 004c 43B1     		cbz	r3, .L697
5784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8299              		.loc 1 5784 0
 8300 004e 284A     		ldr	r2, .L708+8
 8301 0050 1A65     		str	r2, [r3, #80]
5787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 284


 8302              		.loc 1 5787 0
 8303 0052 0023     		movs	r3, #0
 8304 0054 84F84030 		strb	r3, [r4, #64]
5790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8305              		.loc 1 5790 0
 8306 0058 A06B     		ldr	r0, [r4, #56]
 8307 005a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8308              	.LVL693:
 8309 005e 80B9     		cbnz	r0, .L706
 8310              	.L697:
 8311 0060 10BD     		pop	{r4, pc}
 8312              	.LVL694:
 8313              	.L698:
5762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8314              		.loc 1 5762 0
 8315 0062 0721     		movs	r1, #7
 8316 0064 2046     		mov	r0, r4
 8317 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 8318              	.LVL695:
5766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8319              		.loc 1 5766 0
 8320 006a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8321 006e DBB2     		uxtb	r3, r3
 8322 0070 602B     		cmp	r3, #96
 8323 0072 02D0     		beq	.L700
5769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8324              		.loc 1 5769 0
 8325 0074 2023     		movs	r3, #32
 8326 0076 84F84130 		strb	r3, [r4, #65]
 8327              	.L700:
5771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 8328              		.loc 1 5771 0
 8329 007a 0023     		movs	r3, #0
 8330 007c 2363     		str	r3, [r4, #48]
5772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8331              		.loc 1 5772 0
 8332 007e 6363     		str	r3, [r4, #52]
 8333 0080 DAE7     		b	.L699
 8334              	.L706:
5793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8335              		.loc 1 5793 0
 8336 0082 A06B     		ldr	r0, [r4, #56]
 8337 0084 036D     		ldr	r3, [r0, #80]
 8338 0086 9847     		blx	r3
 8339              	.LVL696:
 8340 0088 10BD     		pop	{r4, pc}
 8341              	.LVL697:
 8342              	.L701:
5798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8343              		.loc 1 5798 0
 8344 008a 1A68     		ldr	r2, [r3]
 8345 008c 12F4004F 		tst	r2, #32768
 8346 0090 14D0     		beq	.L703
5800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8347              		.loc 1 5800 0
 8348 0092 1A68     		ldr	r2, [r3]
 8349 0094 22F40042 		bic	r2, r2, #32768
ARM GAS  /tmp/cc1k1gAU.s 			page 285


 8350 0098 1A60     		str	r2, [r3]
5802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8351              		.loc 1 5802 0
 8352 009a E36B     		ldr	r3, [r4, #60]
 8353 009c 002B     		cmp	r3, #0
 8354 009e DFD0     		beq	.L697
5806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8355              		.loc 1 5806 0
 8356 00a0 134A     		ldr	r2, .L708+8
 8357 00a2 1A65     		str	r2, [r3, #80]
5809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8358              		.loc 1 5809 0
 8359 00a4 0023     		movs	r3, #0
 8360 00a6 84F84030 		strb	r3, [r4, #64]
5812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8361              		.loc 1 5812 0
 8362 00aa E06B     		ldr	r0, [r4, #60]
 8363 00ac FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8364              	.LVL698:
 8365 00b0 0028     		cmp	r0, #0
 8366 00b2 D5D0     		beq	.L697
5815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8367              		.loc 1 5815 0
 8368 00b4 E06B     		ldr	r0, [r4, #60]
 8369 00b6 036D     		ldr	r3, [r0, #80]
 8370 00b8 9847     		blx	r3
 8371              	.LVL699:
 8372 00ba 10BD     		pop	{r4, pc}
 8373              	.LVL700:
 8374              	.L703:
5819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8375              		.loc 1 5819 0
 8376 00bc 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8377 00c0 DBB2     		uxtb	r3, r3
 8378 00c2 602B     		cmp	r3, #96
 8379 00c4 06D0     		beq	.L707
5836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8380              		.loc 1 5836 0
 8381 00c6 0023     		movs	r3, #0
 8382 00c8 84F84030 		strb	r3, [r4, #64]
5842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8383              		.loc 1 5842 0
 8384 00cc 2046     		mov	r0, r4
 8385 00ce FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8386              	.LVL701:
5845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8387              		.loc 1 5845 0
 8388 00d2 C5E7     		b	.L697
 8389              	.L707:
5821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8390              		.loc 1 5821 0
 8391 00d4 2023     		movs	r3, #32
 8392 00d6 84F84130 		strb	r3, [r4, #65]
5824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8393              		.loc 1 5824 0
 8394 00da 0023     		movs	r3, #0
 8395 00dc 84F84030 		strb	r3, [r4, #64]
ARM GAS  /tmp/cc1k1gAU.s 			page 286


5830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8396              		.loc 1 5830 0
 8397 00e0 2046     		mov	r0, r4
 8398 00e2 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8399              	.LVL702:
 8400 00e6 10BD     		pop	{r4, pc}
 8401              	.LVL703:
 8402              	.L709:
 8403              		.align	2
 8404              	.L708:
 8405 00e8 0000FFFF 		.word	-65536
 8406 00ec 00000000 		.word	I2C_Slave_ISR_IT
 8407 00f0 00000000 		.word	I2C_DMAAbort
 8408              		.cfi_endproc
 8409              	.LFE202:
 8411              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 8412              		.align	1
 8413              		.syntax unified
 8414              		.thumb
 8415              		.thumb_func
 8416              		.fpu fpv5-sp-d16
 8418              	I2C_ITSlaveCplt:
 8419              	.LFB200:
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8420              		.loc 1 5547 0
 8421              		.cfi_startproc
 8422              		@ args = 0, pretend = 0, frame = 0
 8423              		@ frame_needed = 0, uses_anonymous_args = 0
 8424              	.LVL704:
 8425 0000 70B5     		push	{r4, r5, r6, lr}
 8426              	.LCFI120:
 8427              		.cfi_def_cfa_offset 16
 8428              		.cfi_offset 4, -16
 8429              		.cfi_offset 5, -12
 8430              		.cfi_offset 6, -8
 8431              		.cfi_offset 14, -4
 8432 0002 0446     		mov	r4, r0
 8433 0004 0D46     		mov	r5, r1
5548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8434              		.loc 1 5548 0
 8435 0006 0368     		ldr	r3, [r0]
 8436 0008 1E68     		ldr	r6, [r3]
 8437              	.LVL705:
5552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8438              		.loc 1 5552 0
 8439 000a 2022     		movs	r2, #32
 8440 000c DA61     		str	r2, [r3, #28]
5555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8441              		.loc 1 5555 0
 8442 000e 0721     		movs	r1, #7
 8443              	.LVL706:
 8444 0010 FFF7FEFF 		bl	I2C_Disable_IRQ
 8445              	.LVL707:
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8446              		.loc 1 5558 0
 8447 0014 2268     		ldr	r2, [r4]
 8448 0016 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc1k1gAU.s 			page 287


 8449 0018 43F40043 		orr	r3, r3, #32768
 8450 001c 5360     		str	r3, [r2, #4]
5561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8451              		.loc 1 5561 0
 8452 001e 2268     		ldr	r2, [r4]
 8453 0020 5368     		ldr	r3, [r2, #4]
 8454 0022 23F0FF73 		bic	r3, r3, #33423360
 8455 0026 23F48B33 		bic	r3, r3, #71168
 8456 002a 23F4FF73 		bic	r3, r3, #510
 8457 002e 23F00103 		bic	r3, r3, #1
 8458 0032 5360     		str	r3, [r2, #4]
5564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8459              		.loc 1 5564 0
 8460 0034 2046     		mov	r0, r4
 8461 0036 FFF7FEFF 		bl	I2C_Flush_TXDR
 8462              	.LVL708:
5567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8463              		.loc 1 5567 0
 8464 003a 16F4804F 		tst	r6, #16384
 8465 003e 3BD0     		beq	.L711
5569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8466              		.loc 1 5569 0
 8467 0040 A36B     		ldr	r3, [r4, #56]
 8468 0042 1BB1     		cbz	r3, .L712
5571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8469              		.loc 1 5571 0
 8470 0044 1B68     		ldr	r3, [r3]
 8471 0046 5B68     		ldr	r3, [r3, #4]
 8472 0048 9BB2     		uxth	r3, r3
 8473 004a 6385     		strh	r3, [r4, #42]	@ movhi
 8474              	.L712:
5587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8475              		.loc 1 5587 0
 8476 004c 15F0040F 		tst	r5, #4
 8477 0050 11D0     		beq	.L713
5590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8478              		.loc 1 5590 0
 8479 0052 25F00405 		bic	r5, r5, #4
 8480              	.LVL709:
5593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8481              		.loc 1 5593 0
 8482 0056 636A     		ldr	r3, [r4, #36]
 8483 0058 2268     		ldr	r2, [r4]
 8484 005a 526A     		ldr	r2, [r2, #36]
 8485 005c 1A70     		strb	r2, [r3]
5596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8486              		.loc 1 5596 0
 8487 005e 636A     		ldr	r3, [r4, #36]
 8488 0060 0133     		adds	r3, r3, #1
 8489 0062 6362     		str	r3, [r4, #36]
5598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8490              		.loc 1 5598 0
 8491 0064 238D     		ldrh	r3, [r4, #40]
 8492 0066 33B1     		cbz	r3, .L713
5600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8493              		.loc 1 5600 0
 8494 0068 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cc1k1gAU.s 			page 288


 8495 006a 2385     		strh	r3, [r4, #40]	@ movhi
5601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8496              		.loc 1 5601 0
 8497 006c 638D     		ldrh	r3, [r4, #42]
 8498 006e 9BB2     		uxth	r3, r3
 8499 0070 013B     		subs	r3, r3, #1
 8500 0072 9BB2     		uxth	r3, r3
 8501 0074 6385     		strh	r3, [r4, #42]	@ movhi
 8502              	.L713:
5606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8503              		.loc 1 5606 0
 8504 0076 638D     		ldrh	r3, [r4, #42]
 8505 0078 9BB2     		uxth	r3, r3
 8506 007a 1BB1     		cbz	r3, .L714
5609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8507              		.loc 1 5609 0
 8508 007c 636C     		ldr	r3, [r4, #68]
 8509 007e 43F00403 		orr	r3, r3, #4
 8510 0082 6364     		str	r3, [r4, #68]
 8511              	.L714:
5612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8512              		.loc 1 5612 0
 8513 0084 0023     		movs	r3, #0
 8514 0086 2363     		str	r3, [r4, #48]
5613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8515              		.loc 1 5613 0
 8516 0088 84F84230 		strb	r3, [r4, #66]
5614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8517              		.loc 1 5614 0
 8518 008c 6363     		str	r3, [r4, #52]
5616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8519              		.loc 1 5616 0
 8520 008e 636C     		ldr	r3, [r4, #68]
 8521 0090 EBB9     		cbnz	r3, .L720
5628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8522              		.loc 1 5628 0
 8523 0092 E36A     		ldr	r3, [r4, #44]
 8524 0094 13F5803F 		cmn	r3, #65536
 8525 0098 27D1     		bne	.L721
5647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8526              		.loc 1 5647 0
 8527 009a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8528 009e DBB2     		uxtb	r3, r3
 8529 00a0 222B     		cmp	r3, #34
 8530 00a2 31D0     		beq	.L722
5663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8531              		.loc 1 5663 0
 8532 00a4 2023     		movs	r3, #32
 8533 00a6 84F84130 		strb	r3, [r4, #65]
5666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8534              		.loc 1 5666 0
 8535 00aa 0023     		movs	r3, #0
 8536 00ac 84F84030 		strb	r3, [r4, #64]
5672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8537              		.loc 1 5672 0
 8538 00b0 2046     		mov	r0, r4
 8539 00b2 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
ARM GAS  /tmp/cc1k1gAU.s 			page 289


 8540              	.LVL710:
 8541              	.L710:
 8542 00b6 70BD     		pop	{r4, r5, r6, pc}
 8543              	.LVL711:
 8544              	.L711:
5574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8545              		.loc 1 5574 0
 8546 00b8 16F4004F 		tst	r6, #32768
 8547 00bc C6D0     		beq	.L712
5576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8548              		.loc 1 5576 0
 8549 00be E36B     		ldr	r3, [r4, #60]
 8550 00c0 002B     		cmp	r3, #0
 8551 00c2 C3D0     		beq	.L712
5578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8552              		.loc 1 5578 0
 8553 00c4 1B68     		ldr	r3, [r3]
 8554 00c6 5B68     		ldr	r3, [r3, #4]
 8555 00c8 9BB2     		uxth	r3, r3
 8556 00ca 6385     		strh	r3, [r4, #42]	@ movhi
 8557 00cc BEE7     		b	.L712
 8558              	.LVL712:
 8559              	.L720:
5619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8560              		.loc 1 5619 0
 8561 00ce 616C     		ldr	r1, [r4, #68]
 8562 00d0 2046     		mov	r0, r4
 8563 00d2 FFF7FEFF 		bl	I2C_ITError
 8564              	.LVL713:
5622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8565              		.loc 1 5622 0
 8566 00d6 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8567 00da DBB2     		uxtb	r3, r3
 8568 00dc 282B     		cmp	r3, #40
 8569 00de EAD1     		bne	.L710
5625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8570              		.loc 1 5625 0
 8571 00e0 2946     		mov	r1, r5
 8572 00e2 2046     		mov	r0, r4
 8573 00e4 FFF7FEFF 		bl	I2C_ITListenCplt
 8574              	.LVL714:
 8575 00e8 70BD     		pop	{r4, r5, r6, pc}
 8576              	.LVL715:
 8577              	.L721:
5631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8578              		.loc 1 5631 0
 8579 00ea 2046     		mov	r0, r4
 8580 00ec FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8581              	.LVL716:
5633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8582              		.loc 1 5633 0
 8583 00f0 0A4B     		ldr	r3, .L723
 8584 00f2 E362     		str	r3, [r4, #44]
5634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8585              		.loc 1 5634 0
 8586 00f4 2023     		movs	r3, #32
 8587 00f6 84F84130 		strb	r3, [r4, #65]
ARM GAS  /tmp/cc1k1gAU.s 			page 290


5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8588              		.loc 1 5637 0
 8589 00fa 0023     		movs	r3, #0
 8590 00fc 84F84030 		strb	r3, [r4, #64]
5643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8591              		.loc 1 5643 0
 8592 0100 2046     		mov	r0, r4
 8593 0102 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8594              	.LVL717:
 8595 0106 70BD     		pop	{r4, r5, r6, pc}
 8596              	.LVL718:
 8597              	.L722:
5649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8598              		.loc 1 5649 0
 8599 0108 2023     		movs	r3, #32
 8600 010a 84F84130 		strb	r3, [r4, #65]
5652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8601              		.loc 1 5652 0
 8602 010e 0023     		movs	r3, #0
 8603 0110 84F84030 		strb	r3, [r4, #64]
5658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8604              		.loc 1 5658 0
 8605 0114 2046     		mov	r0, r4
 8606 0116 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 8607              	.LVL719:
 8608 011a 70BD     		pop	{r4, r5, r6, pc}
 8609              	.LVL720:
 8610              	.L724:
 8611              		.align	2
 8612              	.L723:
 8613 011c 0000FFFF 		.word	-65536
 8614              		.cfi_endproc
 8615              	.LFE200:
 8617              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 8618              		.align	1
 8619              		.syntax unified
 8620              		.thumb
 8621              		.thumb_func
 8622              		.fpu fpv5-sp-d16
 8624              	I2C_Slave_ISR_IT:
 8625              	.LFB191:
4733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 8626              		.loc 1 4733 0
 8627              		.cfi_startproc
 8628              		@ args = 0, pretend = 0, frame = 0
 8629              		@ frame_needed = 0, uses_anonymous_args = 0
 8630              	.LVL721:
 8631 0000 70B5     		push	{r4, r5, r6, lr}
 8632              	.LCFI121:
 8633              		.cfi_def_cfa_offset 16
 8634              		.cfi_offset 4, -16
 8635              		.cfi_offset 5, -12
 8636              		.cfi_offset 6, -8
 8637              		.cfi_offset 14, -4
 8638 0002 1646     		mov	r6, r2
4734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8639              		.loc 1 4734 0
ARM GAS  /tmp/cc1k1gAU.s 			page 291


 8640 0004 C26A     		ldr	r2, [r0, #44]
 8641              	.LVL722:
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8642              		.loc 1 4738 0
 8643 0006 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 8644 000a 012B     		cmp	r3, #1
 8645 000c 00F09F80 		beq	.L737
 8646 0010 0446     		mov	r4, r0
 8647 0012 0D46     		mov	r5, r1
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8648              		.loc 1 4738 0 is_stmt 0 discriminator 2
 8649 0014 0123     		movs	r3, #1
 8650 0016 80F84030 		strb	r3, [r0, #64]
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8651              		.loc 1 4740 0 is_stmt 1 discriminator 2
 8652 001a 11F0100F 		tst	r1, #16
 8653 001e 3FD0     		beq	.L727
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8654              		.loc 1 4740 0 is_stmt 0 discriminator 1
 8655 0020 16F0100F 		tst	r6, #16
 8656 0024 3CD0     		beq	.L727
4746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8657              		.loc 1 4746 0 is_stmt 1
 8658 0026 438D     		ldrh	r3, [r0, #42]
 8659 0028 9BB2     		uxth	r3, r3
 8660 002a 4BBB     		cbnz	r3, .L728
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8661              		.loc 1 4748 0
 8662 002c 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8663 0030 DBB2     		uxtb	r3, r3
 8664 0032 282B     		cmp	r3, #40
 8665 0034 11D0     		beq	.L739
 8666              	.L729:
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8667              		.loc 1 4753 0
 8668 0036 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8669 003a DBB2     		uxtb	r3, r3
 8670 003c 292B     		cmp	r3, #41
 8671 003e 12D0     		beq	.L740
 8672              	.L731:
4768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8673              		.loc 1 4768 0
 8674 0040 2368     		ldr	r3, [r4]
 8675 0042 1022     		movs	r2, #16
 8676              	.LVL723:
 8677 0044 DA61     		str	r2, [r3, #28]
 8678              	.LVL724:
 8679              	.L730:
4848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8680              		.loc 1 4848 0
 8681 0046 15F0200F 		tst	r5, #32
 8682 004a 02D0     		beq	.L736
4848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8683              		.loc 1 4848 0 is_stmt 0 discriminator 1
 8684 004c 16F0200F 		tst	r6, #32
 8685 0050 78D1     		bne	.L741
 8686              	.L736:
ARM GAS  /tmp/cc1k1gAU.s 			page 292


4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8687              		.loc 1 4855 0 is_stmt 1
 8688 0052 0020     		movs	r0, #0
 8689 0054 84F84000 		strb	r0, [r4, #64]
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 8690              		.loc 1 4857 0
 8691 0058 70BD     		pop	{r4, r5, r6, pc}
 8692              	.LVL725:
 8693              	.L739:
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8694              		.loc 1 4748 0 discriminator 1
 8695 005a B2F1007F 		cmp	r2, #33554432
 8696 005e EAD1     		bne	.L729
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8697              		.loc 1 4751 0
 8698 0060 FFF7FEFF 		bl	I2C_ITListenCplt
 8699              	.LVL726:
 8700 0064 EFE7     		b	.L730
 8701              	.LVL727:
 8702              	.L740:
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8703              		.loc 1 4753 0 discriminator 1
 8704 0066 12F5803F 		cmn	r2, #65536
 8705 006a E9D0     		beq	.L731
4756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8706              		.loc 1 4756 0
 8707 006c 2368     		ldr	r3, [r4]
 8708 006e 1022     		movs	r2, #16
 8709              	.LVL728:
 8710 0070 DA61     		str	r2, [r3, #28]
4759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8711              		.loc 1 4759 0
 8712 0072 2046     		mov	r0, r4
 8713              	.LVL729:
 8714 0074 FFF7FEFF 		bl	I2C_Flush_TXDR
 8715              	.LVL730:
4763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8716              		.loc 1 4763 0
 8717 0078 2046     		mov	r0, r4
 8718 007a FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8719              	.LVL731:
 8720 007e E2E7     		b	.L730
 8721              	.LVL732:
 8722              	.L728:
4775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8723              		.loc 1 4775 0
 8724 0080 0368     		ldr	r3, [r0]
 8725 0082 1021     		movs	r1, #16
 8726              	.LVL733:
 8727 0084 D961     		str	r1, [r3, #28]
4778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8728              		.loc 1 4778 0
 8729 0086 436C     		ldr	r3, [r0, #68]
 8730 0088 43F00403 		orr	r3, r3, #4
 8731 008c 4364     		str	r3, [r0, #68]
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8732              		.loc 1 4780 0
ARM GAS  /tmp/cc1k1gAU.s 			page 293


 8733 008e B2F1807F 		cmp	r2, #16777216
 8734 0092 18BF     		it	ne
 8735 0094 002A     		cmpne	r2, #0
 8736 0096 D6D1     		bne	.L730
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8737              		.loc 1 4783 0
 8738 0098 416C     		ldr	r1, [r0, #68]
 8739 009a FFF7FEFF 		bl	I2C_ITError
 8740              	.LVL734:
 8741 009e D2E7     		b	.L730
 8742              	.LVL735:
 8743              	.L727:
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8744              		.loc 1 4787 0
 8745 00a0 15F0040F 		tst	r5, #4
 8746 00a4 21D0     		beq	.L732
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8747              		.loc 1 4787 0 is_stmt 0 discriminator 1
 8748 00a6 16F0040F 		tst	r6, #4
 8749 00aa 1ED0     		beq	.L732
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8750              		.loc 1 4789 0 is_stmt 1
 8751 00ac 638D     		ldrh	r3, [r4, #42]
 8752 00ae 9BB2     		uxth	r3, r3
 8753 00b0 83B1     		cbz	r3, .L733
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8754              		.loc 1 4792 0
 8755 00b2 25F00405 		bic	r5, r5, #4
 8756              	.LVL736:
4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8757              		.loc 1 4795 0
 8758 00b6 636A     		ldr	r3, [r4, #36]
 8759 00b8 2168     		ldr	r1, [r4]
 8760              	.LVL737:
 8761 00ba 496A     		ldr	r1, [r1, #36]
 8762 00bc 1970     		strb	r1, [r3]
4798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8763              		.loc 1 4798 0
 8764 00be 636A     		ldr	r3, [r4, #36]
 8765 00c0 0133     		adds	r3, r3, #1
 8766 00c2 6362     		str	r3, [r4, #36]
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8767              		.loc 1 4800 0
 8768 00c4 238D     		ldrh	r3, [r4, #40]
 8769 00c6 013B     		subs	r3, r3, #1
 8770 00c8 2385     		strh	r3, [r4, #40]	@ movhi
4801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8771              		.loc 1 4801 0
 8772 00ca 638D     		ldrh	r3, [r4, #42]
 8773 00cc 9BB2     		uxth	r3, r3
 8774 00ce 013B     		subs	r3, r3, #1
 8775 00d0 9BB2     		uxth	r3, r3
 8776 00d2 6385     		strh	r3, [r4, #42]	@ movhi
 8777              	.LVL738:
 8778              	.L733:
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8779              		.loc 1 4804 0
ARM GAS  /tmp/cc1k1gAU.s 			page 294


 8780 00d4 638D     		ldrh	r3, [r4, #42]
 8781 00d6 9BB2     		uxth	r3, r3
 8782 00d8 002B     		cmp	r3, #0
 8783 00da B4D1     		bne	.L730
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8784              		.loc 1 4804 0 is_stmt 0 discriminator 1
 8785 00dc 12F5803F 		cmn	r2, #65536
 8786 00e0 B1D0     		beq	.L730
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8787              		.loc 1 4808 0 is_stmt 1
 8788 00e2 2046     		mov	r0, r4
 8789              	.LVL739:
 8790 00e4 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8791              	.LVL740:
 8792 00e8 ADE7     		b	.L730
 8793              	.LVL741:
 8794              	.L732:
4811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8795              		.loc 1 4811 0
 8796 00ea 15F0080F 		tst	r5, #8
 8797 00ee 02D0     		beq	.L734
4811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8798              		.loc 1 4811 0 is_stmt 0 discriminator 1
 8799 00f0 16F0080F 		tst	r6, #8
 8800 00f4 18D1     		bne	.L742
 8801              	.L734:
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8802              		.loc 1 4815 0 is_stmt 1
 8803 00f6 15F0020F 		tst	r5, #2
 8804 00fa A4D0     		beq	.L730
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8805              		.loc 1 4815 0 is_stmt 0 discriminator 1
 8806 00fc 16F0020F 		tst	r6, #2
 8807 0100 A1D0     		beq	.L730
4821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8808              		.loc 1 4821 0 is_stmt 1
 8809 0102 638D     		ldrh	r3, [r4, #42]
 8810 0104 9BB2     		uxth	r3, r3
 8811 0106 A3B1     		cbz	r3, .L735
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8812              		.loc 1 4824 0
 8813 0108 2368     		ldr	r3, [r4]
 8814 010a 626A     		ldr	r2, [r4, #36]
 8815              	.LVL742:
 8816 010c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8817 010e 9A62     		str	r2, [r3, #40]
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8818              		.loc 1 4827 0
 8819 0110 636A     		ldr	r3, [r4, #36]
 8820 0112 0133     		adds	r3, r3, #1
 8821 0114 6362     		str	r3, [r4, #36]
4829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 8822              		.loc 1 4829 0
 8823 0116 638D     		ldrh	r3, [r4, #42]
 8824 0118 9BB2     		uxth	r3, r3
 8825 011a 013B     		subs	r3, r3, #1
 8826 011c 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc1k1gAU.s 			page 295


 8827 011e 6385     		strh	r3, [r4, #42]	@ movhi
4830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8828              		.loc 1 4830 0
 8829 0120 238D     		ldrh	r3, [r4, #40]
 8830 0122 013B     		subs	r3, r3, #1
 8831 0124 2385     		strh	r3, [r4, #40]	@ movhi
 8832 0126 8EE7     		b	.L730
 8833              	.LVL743:
 8834              	.L742:
4813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8835              		.loc 1 4813 0
 8836 0128 2946     		mov	r1, r5
 8837              	.LVL744:
 8838 012a 2046     		mov	r0, r4
 8839              	.LVL745:
 8840 012c FFF7FEFF 		bl	I2C_ITAddrCplt
 8841              	.LVL746:
 8842 0130 89E7     		b	.L730
 8843              	.LVL747:
 8844              	.L735:
4834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8845              		.loc 1 4834 0
 8846 0132 002A     		cmp	r2, #0
 8847 0134 18BF     		it	ne
 8848 0136 B2F1807F 		cmpne	r2, #16777216
 8849 013a 84D1     		bne	.L730
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8850              		.loc 1 4838 0
 8851 013c 2046     		mov	r0, r4
 8852              	.LVL748:
 8853 013e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8854              	.LVL749:
 8855 0142 80E7     		b	.L730
 8856              	.LVL750:
 8857              	.L741:
4851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8858              		.loc 1 4851 0
 8859 0144 2946     		mov	r1, r5
 8860 0146 2046     		mov	r0, r4
 8861 0148 FFF7FEFF 		bl	I2C_ITSlaveCplt
 8862              	.LVL751:
 8863 014c 81E7     		b	.L736
 8864              	.LVL752:
 8865              	.L737:
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8866              		.loc 1 4738 0
 8867 014e 0220     		movs	r0, #2
 8868              	.LVL753:
4858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8869              		.loc 1 4858 0
 8870 0150 70BD     		pop	{r4, r5, r6, pc}
 8871              		.cfi_endproc
 8872              	.LFE191:
 8874              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 8875              		.align	1
 8876              		.syntax unified
 8877              		.thumb
ARM GAS  /tmp/cc1k1gAU.s 			page 296


 8878              		.thumb_func
 8879              		.fpu fpv5-sp-d16
 8881              	I2C_ITMasterCplt:
 8882              	.LFB199:
5428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 8883              		.loc 1 5428 0
 8884              		.cfi_startproc
 8885              		@ args = 0, pretend = 0, frame = 0
 8886              		@ frame_needed = 0, uses_anonymous_args = 0
 8887              	.LVL754:
 8888 0000 10B5     		push	{r4, lr}
 8889              	.LCFI122:
 8890              		.cfi_def_cfa_offset 8
 8891              		.cfi_offset 4, -8
 8892              		.cfi_offset 14, -4
 8893 0002 0446     		mov	r4, r0
5432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8894              		.loc 1 5432 0
 8895 0004 0368     		ldr	r3, [r0]
 8896 0006 2022     		movs	r2, #32
 8897 0008 DA61     		str	r2, [r3, #28]
5435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8898              		.loc 1 5435 0
 8899 000a 0268     		ldr	r2, [r0]
 8900 000c 5368     		ldr	r3, [r2, #4]
 8901 000e 23F0FF73 		bic	r3, r3, #33423360
 8902 0012 23F48B33 		bic	r3, r3, #71168
 8903 0016 23F4FF73 		bic	r3, r3, #510
 8904 001a 23F00103 		bic	r3, r3, #1
 8905 001e 5360     		str	r3, [r2, #4]
5438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
 8906              		.loc 1 5438 0
 8907 0020 0023     		movs	r3, #0
 8908 0022 0363     		str	r3, [r0, #48]
5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8909              		.loc 1 5439 0
 8910 0024 4363     		str	r3, [r0, #52]
5440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8911              		.loc 1 5440 0
 8912 0026 A3F58033 		sub	r3, r3, #65536
 8913 002a C362     		str	r3, [r0, #44]
5442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8914              		.loc 1 5442 0
 8915 002c 11F0100F 		tst	r1, #16
 8916 0030 06D0     		beq	.L744
5445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8917              		.loc 1 5445 0
 8918 0032 0368     		ldr	r3, [r0]
 8919 0034 1022     		movs	r2, #16
 8920 0036 DA61     		str	r2, [r3, #28]
5448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8921              		.loc 1 5448 0
 8922 0038 436C     		ldr	r3, [r0, #68]
 8923 003a 43F00403 		orr	r3, r3, #4
 8924 003e 4364     		str	r3, [r0, #68]
 8925              	.L744:
5452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 297


 8926              		.loc 1 5452 0
 8927 0040 2046     		mov	r0, r4
 8928              	.LVL755:
 8929 0042 FFF7FEFF 		bl	I2C_Flush_TXDR
 8930              	.LVL756:
5455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8931              		.loc 1 5455 0
 8932 0046 0321     		movs	r1, #3
 8933 0048 2046     		mov	r0, r4
 8934 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 8935              	.LVL757:
5458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8936              		.loc 1 5458 0
 8937 004e 626C     		ldr	r2, [r4, #68]
 8938              	.LVL758:
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8939              		.loc 1 5461 0
 8940 0050 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8941 0054 DBB2     		uxtb	r3, r3
 8942 0056 602B     		cmp	r3, #96
 8943 0058 0BD0     		beq	.L745
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8944              		.loc 1 5461 0 is_stmt 0 discriminator 1
 8945 005a 52B9     		cbnz	r2, .L745
5467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8946              		.loc 1 5467 0 is_stmt 1
 8947 005c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8948 0060 DBB2     		uxtb	r3, r3
 8949 0062 212B     		cmp	r3, #33
 8950 0064 0AD0     		beq	.L752
5501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8951              		.loc 1 5501 0
 8952 0066 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8953 006a DBB2     		uxtb	r3, r3
 8954 006c 222B     		cmp	r3, #34
 8955 006e 1FD0     		beq	.L753
 8956              	.LVL759:
 8957              	.L743:
 8958 0070 10BD     		pop	{r4, pc}
 8959              	.LVL760:
 8960              	.L745:
5464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8961              		.loc 1 5464 0
 8962 0072 616C     		ldr	r1, [r4, #68]
 8963 0074 2046     		mov	r0, r4
 8964 0076 FFF7FEFF 		bl	I2C_ITError
 8965              	.LVL761:
 8966 007a 10BD     		pop	{r4, pc}
 8967              	.LVL762:
 8968              	.L752:
5469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8969              		.loc 1 5469 0
 8970 007c 2023     		movs	r3, #32
 8971 007e 84F84130 		strb	r3, [r4, #65]
5471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8972              		.loc 1 5471 0
 8973 0082 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
ARM GAS  /tmp/cc1k1gAU.s 			page 298


 8974 0086 DBB2     		uxtb	r3, r3
 8975 0088 402B     		cmp	r3, #64
 8976 008a 08D0     		beq	.L754
5487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8977              		.loc 1 5487 0
 8978 008c 0023     		movs	r3, #0
 8979 008e 84F84230 		strb	r3, [r4, #66]
5490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8980              		.loc 1 5490 0
 8981 0092 84F84030 		strb	r3, [r4, #64]
5496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8982              		.loc 1 5496 0
 8983 0096 2046     		mov	r0, r4
 8984 0098 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 8985              	.LVL763:
 8986 009c 10BD     		pop	{r4, pc}
 8987              	.LVL764:
 8988              	.L754:
5473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8989              		.loc 1 5473 0
 8990 009e 0023     		movs	r3, #0
 8991 00a0 84F84230 		strb	r3, [r4, #66]
5476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8992              		.loc 1 5476 0
 8993 00a4 84F84030 		strb	r3, [r4, #64]
5482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8994              		.loc 1 5482 0
 8995 00a8 2046     		mov	r0, r4
 8996 00aa FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 8997              	.LVL765:
 8998 00ae 10BD     		pop	{r4, pc}
 8999              	.LVL766:
 9000              	.L753:
5503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9001              		.loc 1 5503 0
 9002 00b0 2023     		movs	r3, #32
 9003 00b2 84F84130 		strb	r3, [r4, #65]
5505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9004              		.loc 1 5505 0
 9005 00b6 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9006 00ba DBB2     		uxtb	r3, r3
 9007 00bc 402B     		cmp	r3, #64
 9008 00be 08D0     		beq	.L755
5521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9009              		.loc 1 5521 0
 9010 00c0 0023     		movs	r3, #0
 9011 00c2 84F84230 		strb	r3, [r4, #66]
5524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9012              		.loc 1 5524 0
 9013 00c6 84F84030 		strb	r3, [r4, #64]
5530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9014              		.loc 1 5530 0
 9015 00ca 2046     		mov	r0, r4
 9016 00cc FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9017              	.LVL767:
5538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9018              		.loc 1 5538 0
ARM GAS  /tmp/cc1k1gAU.s 			page 299


 9019 00d0 CEE7     		b	.L743
 9020              	.LVL768:
 9021              	.L755:
5507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9022              		.loc 1 5507 0
 9023 00d2 0023     		movs	r3, #0
 9024 00d4 84F84230 		strb	r3, [r4, #66]
5510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9025              		.loc 1 5510 0
 9026 00d8 84F84030 		strb	r3, [r4, #64]
5516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9027              		.loc 1 5516 0
 9028 00dc 2046     		mov	r0, r4
 9029 00de FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 9030              	.LVL769:
 9031 00e2 10BD     		pop	{r4, pc}
 9032              		.cfi_endproc
 9033              	.LFE199:
 9035              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 9036              		.align	1
 9037              		.syntax unified
 9038              		.thumb
 9039              		.thumb_func
 9040              		.fpu fpv5-sp-d16
 9042              	I2C_Master_ISR_IT:
 9043              	.LFB190:
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9044              		.loc 1 4596 0
 9045              		.cfi_startproc
 9046              		@ args = 0, pretend = 0, frame = 0
 9047              		@ frame_needed = 0, uses_anonymous_args = 0
 9048              	.LVL770:
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9049              		.loc 1 4601 0
 9050 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9051 0004 012B     		cmp	r3, #1
 9052 0006 00F0B980 		beq	.L770
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9053              		.loc 1 4596 0 discriminator 2
 9054 000a 70B5     		push	{r4, r5, r6, lr}
 9055              	.LCFI123:
 9056              		.cfi_def_cfa_offset 16
 9057              		.cfi_offset 4, -16
 9058              		.cfi_offset 5, -12
 9059              		.cfi_offset 6, -8
 9060              		.cfi_offset 14, -4
 9061 000c 82B0     		sub	sp, sp, #8
 9062              	.LCFI124:
 9063              		.cfi_def_cfa_offset 24
 9064 000e 0446     		mov	r4, r0
 9065 0010 0D46     		mov	r5, r1
 9066 0012 1646     		mov	r6, r2
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9067              		.loc 1 4601 0 discriminator 2
 9068 0014 0123     		movs	r3, #1
 9069 0016 80F84030 		strb	r3, [r0, #64]
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1k1gAU.s 			page 300


 9070              		.loc 1 4603 0 discriminator 2
 9071 001a 11F0100F 		tst	r1, #16
 9072 001e 02D0     		beq	.L758
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9073              		.loc 1 4603 0 is_stmt 0 discriminator 1
 9074 0020 12F0100F 		tst	r2, #16
 9075 0024 22D1     		bne	.L775
 9076              	.L758:
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9077              		.loc 1 4616 0 is_stmt 1
 9078 0026 15F0040F 		tst	r5, #4
 9079 002a 29D0     		beq	.L760
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9080              		.loc 1 4616 0 is_stmt 0 discriminator 1
 9081 002c 16F0040F 		tst	r6, #4
 9082 0030 26D0     		beq	.L760
4619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9083              		.loc 1 4619 0 is_stmt 1
 9084 0032 25F00405 		bic	r5, r5, #4
 9085              	.LVL771:
4622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9086              		.loc 1 4622 0
 9087 0036 636A     		ldr	r3, [r4, #36]
 9088 0038 2268     		ldr	r2, [r4]
 9089              	.LVL772:
 9090 003a 526A     		ldr	r2, [r2, #36]
 9091 003c 1A70     		strb	r2, [r3]
4625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9092              		.loc 1 4625 0
 9093 003e 636A     		ldr	r3, [r4, #36]
 9094 0040 0133     		adds	r3, r3, #1
 9095 0042 6362     		str	r3, [r4, #36]
4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9096              		.loc 1 4627 0
 9097 0044 238D     		ldrh	r3, [r4, #40]
 9098 0046 013B     		subs	r3, r3, #1
 9099 0048 2385     		strh	r3, [r4, #40]	@ movhi
4628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9100              		.loc 1 4628 0
 9101 004a 638D     		ldrh	r3, [r4, #42]
 9102 004c 9BB2     		uxth	r3, r3
 9103 004e 013B     		subs	r3, r3, #1
 9104 0050 9BB2     		uxth	r3, r3
 9105 0052 6385     		strh	r3, [r4, #42]	@ movhi
 9106              	.LVL773:
 9107              	.L759:
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9108              		.loc 1 4712 0
 9109 0054 15F0200F 		tst	r5, #32
 9110 0058 03D0     		beq	.L769
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9111              		.loc 1 4712 0 is_stmt 0 discriminator 1
 9112 005a 16F0200F 		tst	r6, #32
 9113 005e 40F08880 		bne	.L776
 9114              	.L769:
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9115              		.loc 1 4719 0 is_stmt 1
ARM GAS  /tmp/cc1k1gAU.s 			page 301


 9116 0062 0020     		movs	r0, #0
 9117 0064 84F84000 		strb	r0, [r4, #64]
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9118              		.loc 1 4722 0
 9119 0068 02B0     		add	sp, sp, #8
 9120              	.LCFI125:
 9121              		.cfi_remember_state
 9122              		.cfi_def_cfa_offset 16
 9123              		@ sp needed
 9124 006a 70BD     		pop	{r4, r5, r6, pc}
 9125              	.LVL774:
 9126              	.L775:
 9127              	.LCFI126:
 9128              		.cfi_restore_state
4606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9129              		.loc 1 4606 0
 9130 006c 0368     		ldr	r3, [r0]
 9131 006e 1022     		movs	r2, #16
 9132              	.LVL775:
 9133 0070 DA61     		str	r2, [r3, #28]
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9134              		.loc 1 4611 0
 9135 0072 436C     		ldr	r3, [r0, #68]
 9136 0074 43F00403 		orr	r3, r3, #4
 9137 0078 4364     		str	r3, [r0, #68]
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9138              		.loc 1 4614 0
 9139 007a FFF7FEFF 		bl	I2C_Flush_TXDR
 9140              	.LVL776:
 9141 007e E9E7     		b	.L759
 9142              	.LVL777:
 9143              	.L760:
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9144              		.loc 1 4630 0
 9145 0080 15F0020F 		tst	r5, #2
 9146 0084 12D0     		beq	.L761
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9147              		.loc 1 4630 0 is_stmt 0 discriminator 1
 9148 0086 16F0020F 		tst	r6, #2
 9149 008a 0FD0     		beq	.L761
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9150              		.loc 1 4633 0 is_stmt 1
 9151 008c 2368     		ldr	r3, [r4]
 9152 008e 626A     		ldr	r2, [r4, #36]
 9153              	.LVL778:
 9154 0090 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9155 0092 9A62     		str	r2, [r3, #40]
4636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9156              		.loc 1 4636 0
 9157 0094 636A     		ldr	r3, [r4, #36]
 9158 0096 0133     		adds	r3, r3, #1
 9159 0098 6362     		str	r3, [r4, #36]
4638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9160              		.loc 1 4638 0
 9161 009a 238D     		ldrh	r3, [r4, #40]
 9162 009c 013B     		subs	r3, r3, #1
 9163 009e 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/cc1k1gAU.s 			page 302


4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9164              		.loc 1 4639 0
 9165 00a0 638D     		ldrh	r3, [r4, #42]
 9166 00a2 9BB2     		uxth	r3, r3
 9167 00a4 013B     		subs	r3, r3, #1
 9168 00a6 9BB2     		uxth	r3, r3
 9169 00a8 6385     		strh	r3, [r4, #42]	@ movhi
 9170 00aa D3E7     		b	.L759
 9171              	.LVL779:
 9172              	.L761:
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9173              		.loc 1 4641 0
 9174 00ac 15F0800F 		tst	r5, #128
 9175 00b0 3FD0     		beq	.L762
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9176              		.loc 1 4641 0 is_stmt 0 discriminator 1
 9177 00b2 16F0400F 		tst	r6, #64
 9178 00b6 3CD0     		beq	.L762
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9179              		.loc 1 4643 0 is_stmt 1
 9180 00b8 638D     		ldrh	r3, [r4, #42]
 9181 00ba 9BB2     		uxth	r3, r3
 9182 00bc 5BB3     		cbz	r3, .L763
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9183              		.loc 1 4643 0 is_stmt 0 discriminator 1
 9184 00be 238D     		ldrh	r3, [r4, #40]
 9185 00c0 4BBB     		cbnz	r3, .L763
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9186              		.loc 1 4645 0 is_stmt 1
 9187 00c2 2368     		ldr	r3, [r4]
 9188 00c4 5968     		ldr	r1, [r3, #4]
 9189              	.LVL780:
 9190 00c6 C1F30901 		ubfx	r1, r1, #0, #10
 9191              	.LVL781:
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9192              		.loc 1 4647 0
 9193 00ca 638D     		ldrh	r3, [r4, #42]
 9194 00cc 9BB2     		uxth	r3, r3
 9195 00ce FF2B     		cmp	r3, #255
 9196 00d0 0ED8     		bhi	.L777
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9197              		.loc 1 4654 0
 9198 00d2 628D     		ldrh	r2, [r4, #42]
 9199              	.LVL782:
 9200 00d4 92B2     		uxth	r2, r2
 9201 00d6 2285     		strh	r2, [r4, #40]	@ movhi
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9202              		.loc 1 4655 0
 9203 00d8 E36A     		ldr	r3, [r4, #44]
 9204 00da 13F5803F 		cmn	r3, #65536
 9205 00de 11D0     		beq	.L765
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9206              		.loc 1 4657 0
 9207 00e0 E36A     		ldr	r3, [r4, #44]
 9208 00e2 0020     		movs	r0, #0
 9209              	.LVL783:
 9210 00e4 0090     		str	r0, [sp]
ARM GAS  /tmp/cc1k1gAU.s 			page 303


 9211 00e6 D2B2     		uxtb	r2, r2
 9212 00e8 2046     		mov	r0, r4
 9213 00ea FFF7FEFF 		bl	I2C_TransferConfig
 9214              	.LVL784:
 9215 00ee B1E7     		b	.L759
 9216              	.LVL785:
 9217              	.L777:
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
 9218              		.loc 1 4649 0
 9219 00f0 FF22     		movs	r2, #255
 9220              	.LVL786:
 9221 00f2 2285     		strh	r2, [r4, #40]	@ movhi
4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9222              		.loc 1 4650 0
 9223 00f4 0023     		movs	r3, #0
 9224 00f6 0093     		str	r3, [sp]
 9225 00f8 4FF08073 		mov	r3, #16777216
 9226 00fc 2046     		mov	r0, r4
 9227              	.LVL787:
 9228 00fe FFF7FEFF 		bl	I2C_TransferConfig
 9229              	.LVL788:
 9230 0102 A7E7     		b	.L759
 9231              	.LVL789:
 9232              	.L765:
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9233              		.loc 1 4661 0
 9234 0104 0023     		movs	r3, #0
 9235 0106 0093     		str	r3, [sp]
 9236 0108 4FF00073 		mov	r3, #33554432
 9237 010c D2B2     		uxtb	r2, r2
 9238 010e 2046     		mov	r0, r4
 9239              	.LVL790:
 9240 0110 FFF7FEFF 		bl	I2C_TransferConfig
 9241              	.LVL791:
 9242 0114 9EE7     		b	.L759
 9243              	.LVL792:
 9244              	.L763:
4668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9245              		.loc 1 4668 0
 9246 0116 2368     		ldr	r3, [r4]
 9247 0118 5B68     		ldr	r3, [r3, #4]
 9248 011a 13F0007F 		tst	r3, #33554432
 9249 011e 03D1     		bne	.L766
4671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9250              		.loc 1 4671 0
 9251 0120 2046     		mov	r0, r4
 9252              	.LVL793:
 9253 0122 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9254              	.LVL794:
 9255 0126 95E7     		b	.L759
 9256              	.LVL795:
 9257              	.L766:
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9258              		.loc 1 4677 0
 9259 0128 4021     		movs	r1, #64
 9260              	.LVL796:
 9261 012a 2046     		mov	r0, r4
ARM GAS  /tmp/cc1k1gAU.s 			page 304


 9262              	.LVL797:
 9263 012c FFF7FEFF 		bl	I2C_ITError
 9264              	.LVL798:
 9265 0130 90E7     		b	.L759
 9266              	.LVL799:
 9267              	.L762:
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9268              		.loc 1 4681 0
 9269 0132 15F0400F 		tst	r5, #64
 9270 0136 8DD0     		beq	.L759
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9271              		.loc 1 4681 0 is_stmt 0 discriminator 1
 9272 0138 16F0400F 		tst	r6, #64
 9273 013c 8AD0     		beq	.L759
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9274              		.loc 1 4683 0 is_stmt 1
 9275 013e 638D     		ldrh	r3, [r4, #42]
 9276 0140 9BB2     		uxth	r3, r3
 9277 0142 8BB9     		cbnz	r3, .L767
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9278              		.loc 1 4685 0
 9279 0144 2368     		ldr	r3, [r4]
 9280 0146 5A68     		ldr	r2, [r3, #4]
 9281              	.LVL800:
 9282 0148 12F0007F 		tst	r2, #33554432
 9283 014c 82D1     		bne	.L759
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9284              		.loc 1 4688 0
 9285 014e E26A     		ldr	r2, [r4, #44]
 9286 0150 12F5803F 		cmn	r2, #65536
 9287 0154 03D0     		beq	.L778
4696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9288              		.loc 1 4696 0
 9289 0156 2046     		mov	r0, r4
 9290              	.LVL801:
 9291 0158 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9292              	.LVL802:
 9293 015c 7AE7     		b	.L759
 9294              	.LVL803:
 9295              	.L778:
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9296              		.loc 1 4691 0
 9297 015e 5A68     		ldr	r2, [r3, #4]
 9298 0160 42F48042 		orr	r2, r2, #16384
 9299 0164 5A60     		str	r2, [r3, #4]
 9300 0166 75E7     		b	.L759
 9301              	.LVL804:
 9302              	.L767:
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9303              		.loc 1 4704 0
 9304 0168 4021     		movs	r1, #64
 9305              	.LVL805:
 9306 016a 2046     		mov	r0, r4
 9307              	.LVL806:
 9308 016c FFF7FEFF 		bl	I2C_ITError
 9309              	.LVL807:
 9310 0170 70E7     		b	.L759
ARM GAS  /tmp/cc1k1gAU.s 			page 305


 9311              	.LVL808:
 9312              	.L776:
4715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9313              		.loc 1 4715 0
 9314 0172 2946     		mov	r1, r5
 9315 0174 2046     		mov	r0, r4
 9316 0176 FFF7FEFF 		bl	I2C_ITMasterCplt
 9317              	.LVL809:
 9318 017a 72E7     		b	.L769
 9319              	.LVL810:
 9320              	.L770:
 9321              	.LCFI127:
 9322              		.cfi_def_cfa_offset 0
 9323              		.cfi_restore 4
 9324              		.cfi_restore 5
 9325              		.cfi_restore 6
 9326              		.cfi_restore 14
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9327              		.loc 1 4601 0
 9328 017c 0220     		movs	r0, #2
 9329              	.LVL811:
 9330 017e 7047     		bx	lr
 9331              		.cfi_endproc
 9332              	.LFE190:
 9334              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 9335              		.align	1
 9336              		.syntax unified
 9337              		.thumb
 9338              		.thumb_func
 9339              		.fpu fpv5-sp-d16
 9341              	I2C_Slave_ISR_DMA:
 9342              	.LFB193:
5004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9343              		.loc 1 5004 0
 9344              		.cfi_startproc
 9345              		@ args = 0, pretend = 0, frame = 0
 9346              		@ frame_needed = 0, uses_anonymous_args = 0
 9347              	.LVL812:
 9348 0000 38B5     		push	{r3, r4, r5, lr}
 9349              	.LCFI128:
 9350              		.cfi_def_cfa_offset 16
 9351              		.cfi_offset 3, -16
 9352              		.cfi_offset 4, -12
 9353              		.cfi_offset 5, -8
 9354              		.cfi_offset 14, -4
5005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
 9355              		.loc 1 5005 0
 9356 0002 C56A     		ldr	r5, [r0, #44]
 9357              	.LVL813:
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9358              		.loc 1 5009 0
 9359 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9360 0008 012B     		cmp	r3, #1
 9361 000a 74D0     		beq	.L790
 9362 000c 0446     		mov	r4, r0
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9363              		.loc 1 5009 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cc1k1gAU.s 			page 306


 9364 000e 0123     		movs	r3, #1
 9365 0010 80F84030 		strb	r3, [r0, #64]
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9366              		.loc 1 5011 0 is_stmt 1 discriminator 2
 9367 0014 11F0100F 		tst	r1, #16
 9368 0018 55D0     		beq	.L781
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9369              		.loc 1 5011 0 is_stmt 0 discriminator 1
 9370 001a 12F0100F 		tst	r2, #16
 9371 001e 52D0     		beq	.L781
5017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9372              		.loc 1 5017 0 is_stmt 1
 9373 0020 12F4404F 		tst	r2, #49152
 9374 0024 4BD0     		beq	.L782
5021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9375              		.loc 1 5021 0
 9376 0026 C36B     		ldr	r3, [r0, #60]
 9377 0028 3BB1     		cbz	r3, .L791
5023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9378              		.loc 1 5023 0
 9379 002a 12F4004F 		tst	r2, #32768
 9380 002e 06D0     		beq	.L792
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9381              		.loc 1 5025 0
 9382 0030 1B68     		ldr	r3, [r3]
 9383 0032 5B68     		ldr	r3, [r3, #4]
 9384 0034 FBB1     		cbz	r3, .L793
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9385              		.loc 1 5006 0
 9386 0036 0020     		movs	r0, #0
 9387              	.LVL814:
 9388 0038 02E0     		b	.L783
 9389              	.LVL815:
 9390              	.L791:
 9391 003a 0020     		movs	r0, #0
 9392              	.LVL816:
 9393 003c 00E0     		b	.L783
 9394              	.LVL817:
 9395              	.L792:
 9396 003e 0020     		movs	r0, #0
 9397              	.LVL818:
 9398              	.L783:
5033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9399              		.loc 1 5033 0
 9400 0040 A36B     		ldr	r3, [r4, #56]
 9401 0042 33B1     		cbz	r3, .L784
5035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9402              		.loc 1 5035 0
 9403 0044 12F4804F 		tst	r2, #16384
 9404 0048 03D0     		beq	.L784
5037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9405              		.loc 1 5037 0
 9406 004a 1B68     		ldr	r3, [r3]
 9407 004c 5B68     		ldr	r3, [r3, #4]
 9408 004e 03B9     		cbnz	r3, .L784
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9409              		.loc 1 5039 0
ARM GAS  /tmp/cc1k1gAU.s 			page 307


 9410 0050 0120     		movs	r0, #1
 9411              	.LVL819:
 9412              	.L784:
5044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9413              		.loc 1 5044 0
 9414 0052 90B9     		cbnz	r0, .L796
5073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9415              		.loc 1 5073 0
 9416 0054 2368     		ldr	r3, [r4]
 9417 0056 1022     		movs	r2, #16
 9418              	.LVL820:
 9419 0058 DA61     		str	r2, [r3, #28]
5076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9420              		.loc 1 5076 0
 9421 005a 636C     		ldr	r3, [r4, #68]
 9422 005c 43F00403 		orr	r3, r3, #4
 9423 0060 6364     		str	r3, [r4, #68]
5078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9424              		.loc 1 5078 0
 9425 0062 B5F1807F 		cmp	r5, #16777216
 9426 0066 18BF     		it	ne
 9427 0068 002D     		cmpne	r5, #0
 9428 006a 38D1     		bne	.L787
5081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9429              		.loc 1 5081 0
 9430 006c 616C     		ldr	r1, [r4, #68]
 9431              	.LVL821:
 9432 006e 2046     		mov	r0, r4
 9433              	.LVL822:
 9434 0070 FFF7FEFF 		bl	I2C_ITError
 9435              	.LVL823:
 9436 0074 33E0     		b	.L787
 9437              	.LVL824:
 9438              	.L793:
5027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9439              		.loc 1 5027 0
 9440 0076 0120     		movs	r0, #1
 9441              	.LVL825:
 9442 0078 E2E7     		b	.L783
 9443              	.LVL826:
 9444              	.L796:
5046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9445              		.loc 1 5046 0
 9446 007a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9447 007e DBB2     		uxtb	r3, r3
 9448 0080 282B     		cmp	r3, #40
 9449 0082 08D0     		beq	.L797
 9450              	.L786:
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9451              		.loc 1 5051 0
 9452 0084 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9453 0088 DBB2     		uxtb	r3, r3
 9454 008a 292B     		cmp	r3, #41
 9455 008c 0AD0     		beq	.L798
 9456              	.L788:
5066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9457              		.loc 1 5066 0
ARM GAS  /tmp/cc1k1gAU.s 			page 308


 9458 008e 2368     		ldr	r3, [r4]
 9459 0090 1022     		movs	r2, #16
 9460              	.LVL827:
 9461 0092 DA61     		str	r2, [r3, #28]
 9462 0094 23E0     		b	.L787
 9463              	.LVL828:
 9464              	.L797:
5046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9465              		.loc 1 5046 0 discriminator 1
 9466 0096 B5F1007F 		cmp	r5, #33554432
 9467 009a F3D1     		bne	.L786
5049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9468              		.loc 1 5049 0
 9469 009c 2046     		mov	r0, r4
 9470              	.LVL829:
 9471 009e FFF7FEFF 		bl	I2C_ITListenCplt
 9472              	.LVL830:
 9473 00a2 1CE0     		b	.L787
 9474              	.LVL831:
 9475              	.L798:
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9476              		.loc 1 5051 0 discriminator 1
 9477 00a4 15F5803F 		cmn	r5, #65536
 9478 00a8 F1D0     		beq	.L788
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9479              		.loc 1 5054 0
 9480 00aa 2368     		ldr	r3, [r4]
 9481 00ac 1022     		movs	r2, #16
 9482              	.LVL832:
 9483 00ae DA61     		str	r2, [r3, #28]
5057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9484              		.loc 1 5057 0
 9485 00b0 2046     		mov	r0, r4
 9486              	.LVL833:
 9487 00b2 FFF7FEFF 		bl	I2C_Flush_TXDR
 9488              	.LVL834:
5061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9489              		.loc 1 5061 0
 9490 00b6 2046     		mov	r0, r4
 9491 00b8 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9492              	.LVL835:
 9493 00bc 0FE0     		b	.L787
 9494              	.LVL836:
 9495              	.L782:
5088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9496              		.loc 1 5088 0
 9497 00be 0368     		ldr	r3, [r0]
 9498 00c0 1022     		movs	r2, #16
 9499              	.LVL837:
 9500 00c2 DA61     		str	r2, [r3, #28]
 9501 00c4 0BE0     		b	.L787
 9502              	.LVL838:
 9503              	.L781:
5091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9504              		.loc 1 5091 0
 9505 00c6 11F0080F 		tst	r1, #8
 9506 00ca 02D0     		beq	.L789
ARM GAS  /tmp/cc1k1gAU.s 			page 309


5091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9507              		.loc 1 5091 0 is_stmt 0 discriminator 1
 9508 00cc 12F0080F 		tst	r2, #8
 9509 00d0 09D1     		bne	.L799
 9510              	.L789:
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9511              		.loc 1 5095 0 is_stmt 1
 9512 00d2 11F0200F 		tst	r1, #32
 9513 00d6 02D0     		beq	.L787
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9514              		.loc 1 5095 0 is_stmt 0 discriminator 1
 9515 00d8 12F0200F 		tst	r2, #32
 9516 00dc 07D1     		bne	.L800
 9517              	.LVL839:
 9518              	.L787:
5106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9519              		.loc 1 5106 0 is_stmt 1
 9520 00de 0020     		movs	r0, #0
 9521 00e0 84F84000 		strb	r0, [r4, #64]
5108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 9522              		.loc 1 5108 0
 9523 00e4 38BD     		pop	{r3, r4, r5, pc}
 9524              	.LVL840:
 9525              	.L799:
5093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9526              		.loc 1 5093 0
 9527 00e6 2046     		mov	r0, r4
 9528              	.LVL841:
 9529 00e8 FFF7FEFF 		bl	I2C_ITAddrCplt
 9530              	.LVL842:
 9531 00ec F7E7     		b	.L787
 9532              	.LVL843:
 9533              	.L800:
5098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9534              		.loc 1 5098 0
 9535 00ee 2046     		mov	r0, r4
 9536              	.LVL844:
 9537 00f0 FFF7FEFF 		bl	I2C_ITSlaveCplt
 9538              	.LVL845:
 9539 00f4 F3E7     		b	.L787
 9540              	.LVL846:
 9541              	.L790:
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9542              		.loc 1 5009 0
 9543 00f6 0220     		movs	r0, #2
 9544              	.LVL847:
5109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9545              		.loc 1 5109 0
 9546 00f8 38BD     		pop	{r3, r4, r5, pc}
 9547              		.cfi_endproc
 9548              	.LFE193:
 9550              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 9551              		.align	1
 9552              		.syntax unified
 9553              		.thumb
 9554              		.thumb_func
 9555              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cc1k1gAU.s 			page 310


 9557              	I2C_Master_ISR_DMA:
 9558              	.LFB192:
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9559              		.loc 1 4869 0
 9560              		.cfi_startproc
 9561              		@ args = 0, pretend = 0, frame = 0
 9562              		@ frame_needed = 0, uses_anonymous_args = 0
 9563              	.LVL848:
4874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9564              		.loc 1 4874 0
 9565 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9566 0004 012B     		cmp	r3, #1
 9567 0006 00F09B80 		beq	.L814
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9568              		.loc 1 4869 0 discriminator 2
 9569 000a 10B5     		push	{r4, lr}
 9570              	.LCFI129:
 9571              		.cfi_def_cfa_offset 8
 9572              		.cfi_offset 4, -8
 9573              		.cfi_offset 14, -4
 9574 000c 82B0     		sub	sp, sp, #8
 9575              	.LCFI130:
 9576              		.cfi_def_cfa_offset 16
 9577 000e 0446     		mov	r4, r0
4874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9578              		.loc 1 4874 0 discriminator 2
 9579 0010 0123     		movs	r3, #1
 9580 0012 80F84030 		strb	r3, [r0, #64]
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9581              		.loc 1 4876 0 discriminator 2
 9582 0016 11F0100F 		tst	r1, #16
 9583 001a 02D0     		beq	.L803
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9584              		.loc 1 4876 0 is_stmt 0 discriminator 1
 9585 001c 12F0100F 		tst	r2, #16
 9586 0020 32D1     		bne	.L820
 9587              	.L803:
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9588              		.loc 1 4892 0 is_stmt 1
 9589 0022 11F0800F 		tst	r1, #128
 9590 0026 5CD0     		beq	.L805
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9591              		.loc 1 4892 0 is_stmt 0 discriminator 1
 9592 0028 12F0400F 		tst	r2, #64
 9593 002c 59D0     		beq	.L805
4895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9594              		.loc 1 4895 0 is_stmt 1
 9595 002e 2268     		ldr	r2, [r4]
 9596              	.LVL849:
 9597 0030 1368     		ldr	r3, [r2]
 9598 0032 23F04003 		bic	r3, r3, #64
 9599 0036 1360     		str	r3, [r2]
4897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9600              		.loc 1 4897 0
 9601 0038 638D     		ldrh	r3, [r4, #42]
 9602 003a 9BB2     		uxth	r3, r3
 9603 003c 002B     		cmp	r3, #0
ARM GAS  /tmp/cc1k1gAU.s 			page 311


 9604 003e 42D0     		beq	.L806
4900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9605              		.loc 1 4900 0
 9606 0040 2368     		ldr	r3, [r4]
 9607 0042 5968     		ldr	r1, [r3, #4]
 9608              	.LVL850:
 9609 0044 C1F30901 		ubfx	r1, r1, #0, #10
 9610              	.LVL851:
4903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9611              		.loc 1 4903 0
 9612 0048 638D     		ldrh	r3, [r4, #42]
 9613 004a 9BB2     		uxth	r3, r3
 9614 004c FF2B     		cmp	r3, #255
 9615 004e 29D9     		bls	.L807
4905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 9616              		.loc 1 4905 0
 9617 0050 FF23     		movs	r3, #255
 9618 0052 2385     		strh	r3, [r4, #40]	@ movhi
 9619              	.LVL852:
4906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9620              		.loc 1 4906 0
 9621 0054 4FF08073 		mov	r3, #16777216
 9622              	.LVL853:
 9623              	.L808:
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9624              		.loc 1 4922 0
 9625 0058 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 9626 005c 0020     		movs	r0, #0
 9627              	.LVL854:
 9628 005e 0090     		str	r0, [sp]
 9629 0060 2046     		mov	r0, r4
 9630 0062 FFF7FEFF 		bl	I2C_TransferConfig
 9631              	.LVL855:
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9632              		.loc 1 4925 0
 9633 0066 638D     		ldrh	r3, [r4, #42]
 9634 0068 9BB2     		uxth	r3, r3
 9635 006a 228D     		ldrh	r2, [r4, #40]
 9636 006c 9B1A     		subs	r3, r3, r2
 9637 006e 9BB2     		uxth	r3, r3
 9638 0070 6385     		strh	r3, [r4, #42]	@ movhi
4928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9639              		.loc 1 4928 0
 9640 0072 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9641 0076 DBB2     		uxtb	r3, r3
 9642 0078 222B     		cmp	r3, #34
 9643 007a 1ED0     		beq	.L821
4934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9644              		.loc 1 4934 0
 9645 007c 2268     		ldr	r2, [r4]
 9646 007e 1368     		ldr	r3, [r2]
 9647 0080 43F48043 		orr	r3, r3, #16384
 9648 0084 1360     		str	r3, [r2]
 9649 0086 52E0     		b	.L804
 9650              	.LVL856:
 9651              	.L820:
4879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1k1gAU.s 			page 312


 9652              		.loc 1 4879 0
 9653 0088 0368     		ldr	r3, [r0]
 9654 008a 1022     		movs	r2, #16
 9655              	.LVL857:
 9656 008c DA61     		str	r2, [r3, #28]
4882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9657              		.loc 1 4882 0
 9658 008e 436C     		ldr	r3, [r0, #68]
 9659 0090 43F00403 		orr	r3, r3, #4
 9660 0094 4364     		str	r3, [r0, #68]
4887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9661              		.loc 1 4887 0
 9662 0096 1221     		movs	r1, #18
 9663              	.LVL858:
 9664 0098 FFF7FEFF 		bl	I2C_Enable_IRQ
 9665              	.LVL859:
4890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9666              		.loc 1 4890 0
 9667 009c 2046     		mov	r0, r4
 9668 009e FFF7FEFF 		bl	I2C_Flush_TXDR
 9669              	.LVL860:
 9670 00a2 44E0     		b	.L804
 9671              	.LVL861:
 9672              	.L807:
4910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9673              		.loc 1 4910 0
 9674 00a4 638D     		ldrh	r3, [r4, #42]
 9675 00a6 2385     		strh	r3, [r4, #40]	@ movhi
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9676              		.loc 1 4911 0
 9677 00a8 E36A     		ldr	r3, [r4, #44]
 9678 00aa 13F5803F 		cmn	r3, #65536
 9679 00ae 01D0     		beq	.L815
4913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9680              		.loc 1 4913 0
 9681 00b0 E36A     		ldr	r3, [r4, #44]
 9682              	.LVL862:
 9683 00b2 D1E7     		b	.L808
 9684              	.LVL863:
 9685              	.L815:
4917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9686              		.loc 1 4917 0
 9687 00b4 4FF00073 		mov	r3, #33554432
 9688 00b8 CEE7     		b	.L808
 9689              	.LVL864:
 9690              	.L821:
4930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9691              		.loc 1 4930 0
 9692 00ba 2268     		ldr	r2, [r4]
 9693 00bc 1368     		ldr	r3, [r2]
 9694 00be 43F40043 		orr	r3, r3, #32768
 9695 00c2 1360     		str	r3, [r2]
 9696 00c4 33E0     		b	.L804
 9697              	.LVL865:
 9698              	.L806:
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9699              		.loc 1 4940 0
ARM GAS  /tmp/cc1k1gAU.s 			page 313


 9700 00c6 2368     		ldr	r3, [r4]
 9701 00c8 5B68     		ldr	r3, [r3, #4]
 9702 00ca 13F0007F 		tst	r3, #33554432
 9703 00ce 03D1     		bne	.L810
4943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9704              		.loc 1 4943 0
 9705 00d0 2046     		mov	r0, r4
 9706              	.LVL866:
 9707 00d2 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9708              	.LVL867:
 9709 00d6 2AE0     		b	.L804
 9710              	.LVL868:
 9711              	.L810:
4949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9712              		.loc 1 4949 0
 9713 00d8 4021     		movs	r1, #64
 9714              	.LVL869:
 9715 00da 2046     		mov	r0, r4
 9716              	.LVL870:
 9717 00dc FFF7FEFF 		bl	I2C_ITError
 9718              	.LVL871:
 9719 00e0 25E0     		b	.L804
 9720              	.LVL872:
 9721              	.L805:
4953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9722              		.loc 1 4953 0
 9723 00e2 11F0400F 		tst	r1, #64
 9724 00e6 1CD0     		beq	.L811
4953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9725              		.loc 1 4953 0 is_stmt 0 discriminator 1
 9726 00e8 12F0400F 		tst	r2, #64
 9727 00ec 19D0     		beq	.L811
4955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9728              		.loc 1 4955 0 is_stmt 1
 9729 00ee 638D     		ldrh	r3, [r4, #42]
 9730 00f0 9BB2     		uxth	r3, r3
 9731 00f2 8BB9     		cbnz	r3, .L812
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9732              		.loc 1 4957 0
 9733 00f4 2368     		ldr	r3, [r4]
 9734 00f6 5A68     		ldr	r2, [r3, #4]
 9735              	.LVL873:
 9736 00f8 12F0007F 		tst	r2, #33554432
 9737 00fc 17D1     		bne	.L804
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9738              		.loc 1 4960 0
 9739 00fe E26A     		ldr	r2, [r4, #44]
 9740 0100 12F5803F 		cmn	r2, #65536
 9741 0104 03D0     		beq	.L822
4968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9742              		.loc 1 4968 0
 9743 0106 2046     		mov	r0, r4
 9744              	.LVL874:
 9745 0108 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9746              	.LVL875:
 9747 010c 0FE0     		b	.L804
 9748              	.LVL876:
ARM GAS  /tmp/cc1k1gAU.s 			page 314


 9749              	.L822:
4963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9750              		.loc 1 4963 0
 9751 010e 5A68     		ldr	r2, [r3, #4]
 9752 0110 42F48042 		orr	r2, r2, #16384
 9753 0114 5A60     		str	r2, [r3, #4]
 9754 0116 0AE0     		b	.L804
 9755              	.LVL877:
 9756              	.L812:
4976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9757              		.loc 1 4976 0
 9758 0118 4021     		movs	r1, #64
 9759              	.LVL878:
 9760 011a 2046     		mov	r0, r4
 9761              	.LVL879:
 9762 011c FFF7FEFF 		bl	I2C_ITError
 9763              	.LVL880:
 9764 0120 05E0     		b	.L804
 9765              	.LVL881:
 9766              	.L811:
4979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9767              		.loc 1 4979 0
 9768 0122 11F0200F 		tst	r1, #32
 9769 0126 02D0     		beq	.L804
4979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9770              		.loc 1 4979 0 is_stmt 0 discriminator 1
 9771 0128 12F0200F 		tst	r2, #32
 9772 012c 04D1     		bne	.L823
 9773              	.LVL882:
 9774              	.L804:
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9775              		.loc 1 4990 0 is_stmt 1
 9776 012e 0020     		movs	r0, #0
 9777 0130 84F84000 		strb	r0, [r4, #64]
4993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9778              		.loc 1 4993 0
 9779 0134 02B0     		add	sp, sp, #8
 9780              	.LCFI131:
 9781              		.cfi_remember_state
 9782              		.cfi_def_cfa_offset 8
 9783              		@ sp needed
 9784 0136 10BD     		pop	{r4, pc}
 9785              	.LVL883:
 9786              	.L823:
 9787              	.LCFI132:
 9788              		.cfi_restore_state
4982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9789              		.loc 1 4982 0
 9790 0138 2046     		mov	r0, r4
 9791              	.LVL884:
 9792 013a FFF7FEFF 		bl	I2C_ITMasterCplt
 9793              	.LVL885:
 9794 013e F6E7     		b	.L804
 9795              	.LVL886:
 9796              	.L814:
 9797              	.LCFI133:
 9798              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc1k1gAU.s 			page 315


 9799              		.cfi_restore 4
 9800              		.cfi_restore 14
4874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9801              		.loc 1 4874 0
 9802 0140 0220     		movs	r0, #2
 9803              	.LVL887:
 9804 0142 7047     		bx	lr
 9805              		.cfi_endproc
 9806              	.LFE192:
 9808              		.section	.text.I2C_DMAError,"ax",%progbits
 9809              		.align	1
 9810              		.syntax unified
 9811              		.thumb
 9812              		.thumb_func
 9813              		.fpu fpv5-sp-d16
 9815              	I2C_DMAError:
 9816              	.LFB208:
6024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
 9817              		.loc 1 6024 0
 9818              		.cfi_startproc
 9819              		@ args = 0, pretend = 0, frame = 0
 9820              		@ frame_needed = 0, uses_anonymous_args = 0
 9821              	.LVL888:
 9822 0000 38B5     		push	{r3, r4, r5, lr}
 9823              	.LCFI134:
 9824              		.cfi_def_cfa_offset 16
 9825              		.cfi_offset 3, -16
 9826              		.cfi_offset 4, -12
 9827              		.cfi_offset 5, -8
 9828              		.cfi_offset 14, -4
 9829              	.LVL889:
6026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9830              		.loc 1 6026 0
 9831 0002 846B     		ldr	r4, [r0, #56]
 9832              	.LVL890:
6028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9833              		.loc 1 6028 0
 9834 0004 A36B     		ldr	r3, [r4, #56]
 9835 0006 7BB1     		cbz	r3, .L828
6030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9836              		.loc 1 6030 0
 9837 0008 1B68     		ldr	r3, [r3]
 9838 000a 5B68     		ldr	r3, [r3, #4]
 9839 000c 73B1     		cbz	r3, .L829
6025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9840              		.loc 1 6025 0
 9841 000e 0025     		movs	r5, #0
 9842              	.L825:
 9843              	.LVL891:
6036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9844              		.loc 1 6036 0
 9845 0010 E36B     		ldr	r3, [r4, #60]
 9846 0012 1BB1     		cbz	r3, .L826
6038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9847              		.loc 1 6038 0
 9848 0014 1B68     		ldr	r3, [r3]
 9849 0016 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cc1k1gAU.s 			page 316


 9850 0018 03B9     		cbnz	r3, .L826
6040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9851              		.loc 1 6040 0
 9852 001a 0125     		movs	r5, #1
 9853              	.LVL892:
 9854              	.L826:
6045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9855              		.loc 1 6045 0
 9856 001c FFF7FEFF 		bl	HAL_DMA_GetError
 9857              	.LVL893:
 9858 0020 0228     		cmp	r0, #2
 9859 0022 00D0     		beq	.L824
6045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9860              		.loc 1 6045 0 is_stmt 0 discriminator 1
 9861 0024 25B9     		cbnz	r5, .L832
 9862              	.L824:
 9863 0026 38BD     		pop	{r3, r4, r5, pc}
 9864              	.LVL894:
 9865              	.L828:
6025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9866              		.loc 1 6025 0 is_stmt 1
 9867 0028 0025     		movs	r5, #0
 9868 002a F1E7     		b	.L825
 9869              	.L829:
6032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9870              		.loc 1 6032 0
 9871 002c 0125     		movs	r5, #1
 9872 002e EFE7     		b	.L825
 9873              	.LVL895:
 9874              	.L832:
6048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9875              		.loc 1 6048 0
 9876 0030 2268     		ldr	r2, [r4]
 9877 0032 5368     		ldr	r3, [r2, #4]
 9878 0034 43F40043 		orr	r3, r3, #32768
 9879 0038 5360     		str	r3, [r2, #4]
6051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9880              		.loc 1 6051 0
 9881 003a 1021     		movs	r1, #16
 9882 003c 2046     		mov	r0, r4
 9883 003e FFF7FEFF 		bl	I2C_ITError
 9884              	.LVL896:
6053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9885              		.loc 1 6053 0
 9886 0042 F0E7     		b	.L824
 9887              		.cfi_endproc
 9888              	.LFE208:
 9890              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 9891              		.align	1
 9892              		.syntax unified
 9893              		.thumb
 9894              		.thumb_func
 9895              		.fpu fpv5-sp-d16
 9897              	I2C_DMAMasterTransmitCplt:
 9898              	.LFB204:
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9899              		.loc 1 5874 0
ARM GAS  /tmp/cc1k1gAU.s 			page 317


 9900              		.cfi_startproc
 9901              		@ args = 0, pretend = 0, frame = 0
 9902              		@ frame_needed = 0, uses_anonymous_args = 0
 9903              	.LVL897:
 9904 0000 10B5     		push	{r4, lr}
 9905              	.LCFI135:
 9906              		.cfi_def_cfa_offset 8
 9907              		.cfi_offset 4, -8
 9908              		.cfi_offset 14, -4
5875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9909              		.loc 1 5875 0
 9910 0002 846B     		ldr	r4, [r0, #56]
 9911              	.LVL898:
5878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9912              		.loc 1 5878 0
 9913 0004 2268     		ldr	r2, [r4]
 9914 0006 1368     		ldr	r3, [r2]
 9915 0008 23F48043 		bic	r3, r3, #16384
 9916 000c 1360     		str	r3, [r2]
5881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9917              		.loc 1 5881 0
 9918 000e 638D     		ldrh	r3, [r4, #42]
 9919 0010 9BB2     		uxth	r3, r3
 9920 0012 ABB1     		cbz	r3, .L840
5890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9921              		.loc 1 5890 0
 9922 0014 238D     		ldrh	r3, [r4, #40]
 9923 0016 616A     		ldr	r1, [r4, #36]
 9924 0018 1944     		add	r1, r1, r3
 9925 001a 6162     		str	r1, [r4, #36]
5893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9926              		.loc 1 5893 0
 9927 001c 638D     		ldrh	r3, [r4, #42]
 9928 001e 9BB2     		uxth	r3, r3
 9929 0020 FF2B     		cmp	r3, #255
 9930 0022 12D9     		bls	.L836
5895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9931              		.loc 1 5895 0
 9932 0024 FF23     		movs	r3, #255
 9933 0026 2385     		strh	r3, [r4, #40]	@ movhi
 9934              	.L837:
5903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9935              		.loc 1 5903 0
 9936 0028 2268     		ldr	r2, [r4]
 9937 002a 238D     		ldrh	r3, [r4, #40]
 9938 002c 2832     		adds	r2, r2, #40
 9939 002e A06B     		ldr	r0, [r4, #56]
 9940              	.LVL899:
 9941 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9942              	.LVL900:
 9943 0034 60B9     		cbnz	r0, .L841
5911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9944              		.loc 1 5911 0
 9945 0036 1221     		movs	r1, #18
 9946 0038 2046     		mov	r0, r4
 9947 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 9948              	.LVL901:
ARM GAS  /tmp/cc1k1gAU.s 			page 318


 9949 003e 10BD     		pop	{r4, pc}
 9950              	.LVL902:
 9951              	.L840:
5884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9952              		.loc 1 5884 0
 9953 0040 1221     		movs	r1, #18
 9954 0042 2046     		mov	r0, r4
 9955              	.LVL903:
 9956 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 9957              	.LVL904:
 9958 0048 10BD     		pop	{r4, pc}
 9959              	.LVL905:
 9960              	.L836:
5899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9961              		.loc 1 5899 0
 9962 004a 638D     		ldrh	r3, [r4, #42]
 9963 004c 2385     		strh	r3, [r4, #40]	@ movhi
 9964 004e EBE7     		b	.L837
 9965              	.LVL906:
 9966              	.L841:
5906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9967              		.loc 1 5906 0
 9968 0050 1021     		movs	r1, #16
 9969 0052 2046     		mov	r0, r4
 9970 0054 FFF7FEFF 		bl	I2C_ITError
 9971              	.LVL907:
 9972 0058 10BD     		pop	{r4, pc}
 9973              		.cfi_endproc
 9974              	.LFE204:
 9976              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 9977              		.align	1
 9978              		.syntax unified
 9979              		.thumb
 9980              		.thumb_func
 9981              		.fpu fpv5-sp-d16
 9983              	I2C_DMAMasterReceiveCplt:
 9984              	.LFB206:
5949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9985              		.loc 1 5949 0
 9986              		.cfi_startproc
 9987              		@ args = 0, pretend = 0, frame = 0
 9988              		@ frame_needed = 0, uses_anonymous_args = 0
 9989              	.LVL908:
 9990 0000 10B5     		push	{r4, lr}
 9991              	.LCFI136:
 9992              		.cfi_def_cfa_offset 8
 9993              		.cfi_offset 4, -8
 9994              		.cfi_offset 14, -4
5950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9995              		.loc 1 5950 0
 9996 0002 846B     		ldr	r4, [r0, #56]
 9997              	.LVL909:
5953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9998              		.loc 1 5953 0
 9999 0004 2268     		ldr	r2, [r4]
 10000 0006 1368     		ldr	r3, [r2]
 10001 0008 23F40043 		bic	r3, r3, #32768
ARM GAS  /tmp/cc1k1gAU.s 			page 319


 10002 000c 1360     		str	r3, [r2]
5956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10003              		.loc 1 5956 0
 10004 000e 638D     		ldrh	r3, [r4, #42]
 10005 0010 9BB2     		uxth	r3, r3
 10006 0012 ABB1     		cbz	r3, .L849
5965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10007              		.loc 1 5965 0
 10008 0014 238D     		ldrh	r3, [r4, #40]
 10009 0016 626A     		ldr	r2, [r4, #36]
 10010 0018 1A44     		add	r2, r2, r3
 10011 001a 6262     		str	r2, [r4, #36]
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10012              		.loc 1 5968 0
 10013 001c 638D     		ldrh	r3, [r4, #42]
 10014 001e 9BB2     		uxth	r3, r3
 10015 0020 FF2B     		cmp	r3, #255
 10016 0022 12D9     		bls	.L845
5970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10017              		.loc 1 5970 0
 10018 0024 FF23     		movs	r3, #255
 10019 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10020              	.L846:
5978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10021              		.loc 1 5978 0
 10022 0028 2168     		ldr	r1, [r4]
 10023 002a 238D     		ldrh	r3, [r4, #40]
 10024 002c 2431     		adds	r1, r1, #36
 10025 002e E06B     		ldr	r0, [r4, #60]
 10026              	.LVL910:
 10027 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10028              	.LVL911:
 10029 0034 60B9     		cbnz	r0, .L850
5986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10030              		.loc 1 5986 0
 10031 0036 1221     		movs	r1, #18
 10032 0038 2046     		mov	r0, r4
 10033 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10034              	.LVL912:
 10035 003e 10BD     		pop	{r4, pc}
 10036              	.LVL913:
 10037              	.L849:
5959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10038              		.loc 1 5959 0
 10039 0040 1221     		movs	r1, #18
 10040 0042 2046     		mov	r0, r4
 10041              	.LVL914:
 10042 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10043              	.LVL915:
 10044 0048 10BD     		pop	{r4, pc}
 10045              	.LVL916:
 10046              	.L845:
5974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10047              		.loc 1 5974 0
 10048 004a 638D     		ldrh	r3, [r4, #42]
 10049 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10050 004e EBE7     		b	.L846
ARM GAS  /tmp/cc1k1gAU.s 			page 320


 10051              	.LVL917:
 10052              	.L850:
5981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10053              		.loc 1 5981 0
 10054 0050 1021     		movs	r1, #16
 10055 0052 2046     		mov	r0, r4
 10056 0054 FFF7FEFF 		bl	I2C_ITError
 10057              	.LVL918:
 10058 0058 10BD     		pop	{r4, pc}
 10059              		.cfi_endproc
 10060              	.LFE206:
 10062              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 10063              		.align	1
 10064              		.global	HAL_I2C_ER_IRQHandler
 10065              		.syntax unified
 10066              		.thumb
 10067              		.thumb_func
 10068              		.fpu fpv5-sp-d16
 10070              	HAL_I2C_ER_IRQHandler:
 10071              	.LFB176:
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 10072              		.loc 1 4317 0
 10073              		.cfi_startproc
 10074              		@ args = 0, pretend = 0, frame = 0
 10075              		@ frame_needed = 0, uses_anonymous_args = 0
 10076              	.LVL919:
 10077 0000 10B5     		push	{r4, lr}
 10078              	.LCFI137:
 10079              		.cfi_def_cfa_offset 8
 10080              		.cfi_offset 4, -8
 10081              		.cfi_offset 14, -4
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 10082              		.loc 1 4318 0
 10083 0002 0268     		ldr	r2, [r0]
 10084 0004 9369     		ldr	r3, [r2, #24]
 10085              	.LVL920:
4319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 10086              		.loc 1 4319 0
 10087 0006 1168     		ldr	r1, [r2]
 10088              	.LVL921:
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10089              		.loc 1 4323 0
 10090 0008 13F4807F 		tst	r3, #256
 10091 000c 09D0     		beq	.L852
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10092              		.loc 1 4323 0 is_stmt 0 discriminator 1
 10093 000e 11F0800F 		tst	r1, #128
 10094 0012 06D0     		beq	.L852
4325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10095              		.loc 1 4325 0 is_stmt 1
 10096 0014 446C     		ldr	r4, [r0, #68]
 10097 0016 44F00104 		orr	r4, r4, #1
 10098 001a 4464     		str	r4, [r0, #68]
4328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10099              		.loc 1 4328 0
 10100 001c 4FF48074 		mov	r4, #256
 10101 0020 D461     		str	r4, [r2, #28]
ARM GAS  /tmp/cc1k1gAU.s 			page 321


 10102              	.L852:
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10103              		.loc 1 4332 0
 10104 0022 13F4806F 		tst	r3, #1024
 10105 0026 0AD0     		beq	.L853
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10106              		.loc 1 4332 0 is_stmt 0 discriminator 1
 10107 0028 11F0800F 		tst	r1, #128
 10108 002c 07D0     		beq	.L853
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10109              		.loc 1 4334 0 is_stmt 1
 10110 002e 426C     		ldr	r2, [r0, #68]
 10111 0030 42F00802 		orr	r2, r2, #8
 10112 0034 4264     		str	r2, [r0, #68]
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10113              		.loc 1 4337 0
 10114 0036 0268     		ldr	r2, [r0]
 10115 0038 4FF48064 		mov	r4, #1024
 10116 003c D461     		str	r4, [r2, #28]
 10117              	.L853:
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10118              		.loc 1 4341 0
 10119 003e 13F4007F 		tst	r3, #512
 10120 0042 0AD0     		beq	.L854
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10121              		.loc 1 4341 0 is_stmt 0 discriminator 1
 10122 0044 11F0800F 		tst	r1, #128
 10123 0048 07D0     		beq	.L854
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10124              		.loc 1 4343 0 is_stmt 1
 10125 004a 436C     		ldr	r3, [r0, #68]
 10126              	.LVL922:
 10127 004c 43F00203 		orr	r3, r3, #2
 10128 0050 4364     		str	r3, [r0, #68]
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10129              		.loc 1 4346 0
 10130 0052 0368     		ldr	r3, [r0]
 10131 0054 4FF40072 		mov	r2, #512
 10132 0058 DA61     		str	r2, [r3, #28]
 10133              	.L854:
4350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10134              		.loc 1 4350 0
 10135 005a 416C     		ldr	r1, [r0, #68]
 10136              	.LVL923:
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10137              		.loc 1 4353 0
 10138 005c 11F00B0F 		tst	r1, #11
 10139 0060 00D1     		bne	.L857
 10140              	.LVL924:
 10141              	.L851:
 10142 0062 10BD     		pop	{r4, pc}
 10143              	.LVL925:
 10144              	.L857:
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10145              		.loc 1 4355 0
 10146 0064 FFF7FEFF 		bl	I2C_ITError
 10147              	.LVL926:
ARM GAS  /tmp/cc1k1gAU.s 			page 322


4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10148              		.loc 1 4357 0
 10149 0068 FBE7     		b	.L851
 10150              		.cfi_endproc
 10151              	.LFE176:
 10153              		.section	.text.I2C_DMAAbort,"ax",%progbits
 10154              		.align	1
 10155              		.syntax unified
 10156              		.thumb
 10157              		.thumb_func
 10158              		.fpu fpv5-sp-d16
 10160              	I2C_DMAAbort:
 10161              	.LFB209:
6062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10162              		.loc 1 6062 0
 10163              		.cfi_startproc
 10164              		@ args = 0, pretend = 0, frame = 0
 10165              		@ frame_needed = 0, uses_anonymous_args = 0
 10166              	.LVL927:
 10167 0000 08B5     		push	{r3, lr}
 10168              	.LCFI138:
 10169              		.cfi_def_cfa_offset 8
 10170              		.cfi_offset 3, -8
 10171              		.cfi_offset 14, -4
6063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10172              		.loc 1 6063 0
 10173 0002 806B     		ldr	r0, [r0, #56]
 10174              	.LVL928:
6066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
 10175              		.loc 1 6066 0
 10176 0004 826B     		ldr	r2, [r0, #56]
 10177 0006 0023     		movs	r3, #0
 10178 0008 1365     		str	r3, [r2, #80]
6067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10179              		.loc 1 6067 0
 10180 000a C26B     		ldr	r2, [r0, #60]
 10181 000c 1365     		str	r3, [r2, #80]
6070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10182              		.loc 1 6070 0
 10183 000e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 10184 0012 DBB2     		uxtb	r3, r3
 10185 0014 602B     		cmp	r3, #96
 10186 0016 02D0     		beq	.L862
6087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 10187              		.loc 1 6087 0
 10188 0018 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 10189              	.LVL929:
 10190 001c 08BD     		pop	{r3, pc}
 10191              	.LVL930:
 10192              	.L862:
6072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10193              		.loc 1 6072 0
 10194 001e 2023     		movs	r3, #32
 10195 0020 80F84130 		strb	r3, [r0, #65]
6078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 10196              		.loc 1 6078 0
 10197 0024 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
ARM GAS  /tmp/cc1k1gAU.s 			page 323


 10198              	.LVL931:
 10199 0028 08BD     		pop	{r3, pc}
 10200              		.cfi_endproc
 10201              	.LFE209:
 10203              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 10204              		.align	1
 10205              		.global	HAL_I2C_GetState
 10206              		.syntax unified
 10207              		.thumb
 10208              		.thumb_func
 10209              		.fpu fpv5-sp-d16
 10211              	HAL_I2C_GetState:
 10212              	.LFB187:
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
 10213              		.loc 1 4548 0
 10214              		.cfi_startproc
 10215              		@ args = 0, pretend = 0, frame = 0
 10216              		@ frame_needed = 0, uses_anonymous_args = 0
 10217              		@ link register save eliminated.
 10218              	.LVL932:
4550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10219              		.loc 1 4550 0
 10220 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 10221              	.LVL933:
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10222              		.loc 1 4551 0
 10223 0004 7047     		bx	lr
 10224              		.cfi_endproc
 10225              	.LFE187:
 10227              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 10228              		.align	1
 10229              		.global	HAL_I2C_GetMode
 10230              		.syntax unified
 10231              		.thumb
 10232              		.thumb_func
 10233              		.fpu fpv5-sp-d16
 10235              	HAL_I2C_GetMode:
 10236              	.LFB188:
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
 10237              		.loc 1 4560 0
 10238              		.cfi_startproc
 10239              		@ args = 0, pretend = 0, frame = 0
 10240              		@ frame_needed = 0, uses_anonymous_args = 0
 10241              		@ link register save eliminated.
 10242              	.LVL934:
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10243              		.loc 1 4561 0
 10244 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 10245              	.LVL935:
4562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10246              		.loc 1 4562 0
 10247 0004 7047     		bx	lr
 10248              		.cfi_endproc
 10249              	.LFE188:
 10251              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 10252              		.align	1
 10253              		.global	HAL_I2C_GetError
ARM GAS  /tmp/cc1k1gAU.s 			page 324


 10254              		.syntax unified
 10255              		.thumb
 10256              		.thumb_func
 10257              		.fpu fpv5-sp-d16
 10259              	HAL_I2C_GetError:
 10260              	.LFB189:
4571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
 10261              		.loc 1 4571 0
 10262              		.cfi_startproc
 10263              		@ args = 0, pretend = 0, frame = 0
 10264              		@ frame_needed = 0, uses_anonymous_args = 0
 10265              		@ link register save eliminated.
 10266              	.LVL936:
4572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10267              		.loc 1 4572 0
 10268 0000 406C     		ldr	r0, [r0, #68]
 10269              	.LVL937:
4573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10270              		.loc 1 4573 0
 10271 0002 7047     		bx	lr
 10272              		.cfi_endproc
 10273              	.LFE189:
 10275              		.text
 10276              	.Letext0:
 10277              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 10278              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 10279              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 10280              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 10281              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 10282              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 10283              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 10284              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 10285              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 10286              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cc1k1gAU.s 			page 325


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_i2c.c
     /tmp/cc1k1gAU.s:18     .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/cc1k1gAU.s:24     .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/cc1k1gAU.s:57     .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/cc1k1gAU.s:63     .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/cc1k1gAU.s:109    .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/cc1k1gAU.s:115    .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/cc1k1gAU.s:224    .text.I2C_Enable_IRQ:0000000000000078 $d
     /tmp/cc1k1gAU.s:9557   .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/cc1k1gAU.s:9341   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
     /tmp/cc1k1gAU.s:230    .text.I2C_Disable_IRQ:0000000000000000 $t
     /tmp/cc1k1gAU.s:236    .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/cc1k1gAU.s:400    .text.I2C_ConvertOtherXferOptions:0000000000000000 $t
     /tmp/cc1k1gAU.s:406    .text.I2C_ConvertOtherXferOptions:0000000000000000 I2C_ConvertOtherXferOptions
     /tmp/cc1k1gAU.s:439    .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/cc1k1gAU.s:445    .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/cc1k1gAU.s:549    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1k1gAU.s:555    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/cc1k1gAU.s:629    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1k1gAU.s:635    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/cc1k1gAU.s:705    .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/cc1k1gAU.s:711    .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/cc1k1gAU.s:808    .text.I2C_RequestMemoryWrite:000000000000006c $d
     /tmp/cc1k1gAU.s:813    .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/cc1k1gAU.s:819    .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/cc1k1gAU.s:916    .text.I2C_RequestMemoryRead:000000000000006c $d
     /tmp/cc1k1gAU.s:921    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1k1gAU.s:927    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/cc1k1gAU.s:998    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1k1gAU.s:1004   .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/cc1k1gAU.s:1114   .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/cc1k1gAU.s:1121   .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/cc1k1gAU.s:1134   .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/cc1k1gAU.s:1141   .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/cc1k1gAU.s:1273   .text.HAL_I2C_Init:00000000000000b8 $d
     /tmp/cc1k1gAU.s:1278   .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/cc1k1gAU.s:1285   .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/cc1k1gAU.s:1298   .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/cc1k1gAU.s:1305   .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/cc1k1gAU.s:1359   .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/cc1k1gAU.s:1366   .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/cc1k1gAU.s:1617   .text.HAL_I2C_Master_Transmit:0000000000000174 $d
     /tmp/cc1k1gAU.s:1622   .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/cc1k1gAU.s:1629   .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/cc1k1gAU.s:1879   .text.HAL_I2C_Master_Receive:0000000000000174 $d
     /tmp/cc1k1gAU.s:1884   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/cc1k1gAU.s:1891   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/cc1k1gAU.s:2163   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/cc1k1gAU.s:2170   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/cc1k1gAU.s:2426   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:2433   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/cc1k1gAU.s:2562   .text.HAL_I2C_Master_Transmit_IT:000000000000008c $d
     /tmp/cc1k1gAU.s:9042   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/cc1k1gAU.s:2569   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:2576   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/cc1k1gAU.s:2705   .text.HAL_I2C_Master_Receive_IT:000000000000008c $d
ARM GAS  /tmp/cc1k1gAU.s 			page 326


     /tmp/cc1k1gAU.s:2712   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:2719   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/cc1k1gAU.s:2797   .text.HAL_I2C_Slave_Transmit_IT:000000000000005c $d
     /tmp/cc1k1gAU.s:8624   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/cc1k1gAU.s:2803   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:2810   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/cc1k1gAU.s:2888   .text.HAL_I2C_Slave_Receive_IT:000000000000005c $d
     /tmp/cc1k1gAU.s:2894   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:2901   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/cc1k1gAU.s:3136   .text.HAL_I2C_Master_Transmit_DMA:0000000000000138 $d
     /tmp/cc1k1gAU.s:9897   .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/cc1k1gAU.s:9815   .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/cc1k1gAU.s:3146   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:3153   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/cc1k1gAU.s:3384   .text.HAL_I2C_Master_Receive_DMA:0000000000000134 $d
     /tmp/cc1k1gAU.s:9983   .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/cc1k1gAU.s:3394   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:3401   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/cc1k1gAU.s:3564   .text.HAL_I2C_Slave_Transmit_DMA:00000000000000dc $d
     /tmp/cc1k1gAU.s:7799   .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/cc1k1gAU.s:3572   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:3579   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/cc1k1gAU.s:3745   .text.HAL_I2C_Slave_Receive_DMA:00000000000000e0 $d
     /tmp/cc1k1gAU.s:7848   .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/cc1k1gAU.s:3753   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/cc1k1gAU.s:3760   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/cc1k1gAU.s:4048   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/cc1k1gAU.s:4055   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/cc1k1gAU.s:4343   .text.HAL_I2C_Mem_Read:00000000000001a8 $d
     /tmp/cc1k1gAU.s:4348   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:4355   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/cc1k1gAU.s:4522   .text.HAL_I2C_Mem_Write_IT:00000000000000e8 $d
     /tmp/cc1k1gAU.s:4528   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:4535   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/cc1k1gAU.s:4703   .text.HAL_I2C_Mem_Read_IT:00000000000000ec $d
     /tmp/cc1k1gAU.s:4710   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:4717   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/cc1k1gAU.s:4957   .text.HAL_I2C_Mem_Write_DMA:000000000000017c $d
     /tmp/cc1k1gAU.s:4965   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:4972   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/cc1k1gAU.s:5213   .text.HAL_I2C_Mem_Read_DMA:0000000000000180 $d
     /tmp/cc1k1gAU.s:5222   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/cc1k1gAU.s:5229   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/cc1k1gAU.s:5497   .text.HAL_I2C_IsDeviceReady:0000000000000178 $d
     /tmp/cc1k1gAU.s:5502   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:5509   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 HAL_I2C_Master_Seq_Transmit_IT
     /tmp/cc1k1gAU.s:5666   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000000000ac $d
     /tmp/cc1k1gAU.s:5672   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:5679   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Master_Seq_Transmit_DMA
     /tmp/cc1k1gAU.s:5942   .text.HAL_I2C_Master_Seq_Transmit_DMA:000000000000015c $d
     /tmp/cc1k1gAU.s:5951   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:5958   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 HAL_I2C_Master_Seq_Receive_IT
     /tmp/cc1k1gAU.s:6115   .text.HAL_I2C_Master_Seq_Receive_IT:00000000000000ac $d
     /tmp/cc1k1gAU.s:6121   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:6128   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 HAL_I2C_Master_Seq_Receive_DMA
     /tmp/cc1k1gAU.s:6391   .text.HAL_I2C_Master_Seq_Receive_DMA:000000000000015c $d
     /tmp/cc1k1gAU.s:6400   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 $t
ARM GAS  /tmp/cc1k1gAU.s 			page 327


     /tmp/cc1k1gAU.s:6407   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 HAL_I2C_Slave_Seq_Transmit_IT
     /tmp/cc1k1gAU.s:6562   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000000000cc $d
     /tmp/cc1k1gAU.s:10160  .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/cc1k1gAU.s:6568   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:6575   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Seq_Transmit_DMA
     /tmp/cc1k1gAU.s:6846   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000188 $d
     /tmp/cc1k1gAU.s:6854   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:6861   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 HAL_I2C_Slave_Seq_Receive_IT
     /tmp/cc1k1gAU.s:7016   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000000000cc $d
     /tmp/cc1k1gAU.s:7022   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:7029   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 HAL_I2C_Slave_Seq_Receive_DMA
     /tmp/cc1k1gAU.s:7302   .text.HAL_I2C_Slave_Seq_Receive_DMA:000000000000018c $d
     /tmp/cc1k1gAU.s:7310   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:7317   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/cc1k1gAU.s:7357   .text.HAL_I2C_EnableListen_IT:0000000000000024 $d
     /tmp/cc1k1gAU.s:7362   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:7369   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/cc1k1gAU.s:7421   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:7428   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/cc1k1gAU.s:7513   .text.HAL_I2C_Master_Abort_IT:0000000000000064 $d
     /tmp/cc1k1gAU.s:7518   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/cc1k1gAU.s:7525   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/cc1k1gAU.s:7556   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:7563   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/cc1k1gAU.s:7576   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:7583   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/cc1k1gAU.s:7596   .text.I2C_ITMasterSeqCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:7602   .text.I2C_ITMasterSeqCplt:0000000000000000 I2C_ITMasterSeqCplt
     /tmp/cc1k1gAU.s:7672   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:7679   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/cc1k1gAU.s:7692   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:7699   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/cc1k1gAU.s:7712   .text.I2C_ITSlaveSeqCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:7718   .text.I2C_ITSlaveSeqCplt:0000000000000000 I2C_ITSlaveSeqCplt
     /tmp/cc1k1gAU.s:7793   .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:7842   .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:7889   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:7896   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/cc1k1gAU.s:7909   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:7915   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/cc1k1gAU.s:8038   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:8045   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/cc1k1gAU.s:8058   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:8064   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/cc1k1gAU.s:8143   .text.I2C_ITListenCplt:0000000000000064 $d
     /tmp/cc1k1gAU.s:8148   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:8155   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/cc1k1gAU.s:8168   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:8175   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/cc1k1gAU.s:8188   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:8195   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/cc1k1gAU.s:8208   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/cc1k1gAU.s:8215   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/cc1k1gAU.s:8228   .text.I2C_ITError:0000000000000000 $t
     /tmp/cc1k1gAU.s:8234   .text.I2C_ITError:0000000000000000 I2C_ITError
     /tmp/cc1k1gAU.s:8405   .text.I2C_ITError:00000000000000e8 $d
     /tmp/cc1k1gAU.s:8412   .text.I2C_ITSlaveCplt:0000000000000000 $t
ARM GAS  /tmp/cc1k1gAU.s 			page 328


     /tmp/cc1k1gAU.s:8418   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/cc1k1gAU.s:8613   .text.I2C_ITSlaveCplt:000000000000011c $d
     /tmp/cc1k1gAU.s:8618   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:8875   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:8881   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/cc1k1gAU.s:9036   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/cc1k1gAU.s:9335   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:9551   .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/cc1k1gAU.s:9809   .text.I2C_DMAError:0000000000000000 $t
     /tmp/cc1k1gAU.s:9891   .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:9977   .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/cc1k1gAU.s:10063  .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/cc1k1gAU.s:10070  .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/cc1k1gAU.s:10154  .text.I2C_DMAAbort:0000000000000000 $t
     /tmp/cc1k1gAU.s:10204  .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/cc1k1gAU.s:10211  .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/cc1k1gAU.s:10228  .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/cc1k1gAU.s:10235  .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/cc1k1gAU.s:10252  .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/cc1k1gAU.s:10259  .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_DMA_GetError
