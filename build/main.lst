ARM GAS  /tmp/ccT4Rpz9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB146:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccT4Rpz9.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "usb_device.h"
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  46:Src/main.c    **** /* USER CODE BEGIN Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  51:Src/main.c    **** /* USER CODE BEGIN PTD */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PTD */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  56:Src/main.c    **** /* USER CODE BEGIN PD */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PM */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PM */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** 
  67:Src/main.c    **** TIM_HandleTypeDef htim2;
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE BEGIN PV */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  74:Src/main.c    **** void SystemClock_Config(void);
  75:Src/main.c    **** static void MX_GPIO_Init(void);
  76:Src/main.c    **** static void MX_TIM2_Init(void);
  77:Src/main.c    **** /* USER CODE BEGIN PFP */
  78:Src/main.c    **** /* USER CODE END PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  81:Src/main.c    **** /* USER CODE BEGIN 0 */
  82:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
  83:Src/main.c    **** {
  84:Src/main.c    ****   uint8_t buffer[] = "Hello World!";
  85:Src/main.c    ****   if (htim->Instance==TIM2)
  86:Src/main.c    ****   {
  87:Src/main.c    ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
  88:Src/main.c    ****   }
  89:Src/main.c    **** }
ARM GAS  /tmp/ccT4Rpz9.s 			page 3


  90:Src/main.c    **** /* USER CODE END 0 */
  91:Src/main.c    **** 
  92:Src/main.c    **** /**
  93:Src/main.c    ****   * @brief  The application entry point.
  94:Src/main.c    ****   * @retval int
  95:Src/main.c    ****   */
  96:Src/main.c    **** int main(void)
  97:Src/main.c    **** {
  98:Src/main.c    ****   /* USER CODE BEGIN 1 */
  99:Src/main.c    ****   /* USER CODE END 1 */
 100:Src/main.c    ****   
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Src/main.c    ****   HAL_Init();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN Init */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END Init */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Configure the system clock */
 112:Src/main.c    ****   SystemClock_Config();
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE END SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Initialize all configured peripherals */
 119:Src/main.c    ****   MX_GPIO_Init();
 120:Src/main.c    ****   MX_TIM2_Init();
 121:Src/main.c    ****   MX_USB_DEVICE_Init();
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 123:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 124:Src/main.c    ****   /* USER CODE END 2 */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Infinite loop */
 127:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 128:Src/main.c    ****   while (1)
 129:Src/main.c    ****   {
 130:Src/main.c    ****     /* USER CODE END WHILE */
 131:Src/main.c    **** 
 132:Src/main.c    ****     /* USER CODE BEGIN 3 */
 133:Src/main.c    ****   }
 134:Src/main.c    ****   /* USER CODE END 3 */
 135:Src/main.c    **** }
 136:Src/main.c    **** 
 137:Src/main.c    **** /**
 138:Src/main.c    ****   * @brief System Clock Configuration
 139:Src/main.c    ****   * @retval None
 140:Src/main.c    ****   */
 141:Src/main.c    **** void SystemClock_Config(void)
 142:Src/main.c    **** {
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 145:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 146:Src/main.c    **** 
ARM GAS  /tmp/ccT4Rpz9.s 			page 4


 147:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 148:Src/main.c    ****   */
 149:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 150:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 152:Src/main.c    ****   */
 153:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 154:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 432;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 161:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     Error_Handler();
 164:Src/main.c    ****   }
 165:Src/main.c    ****   /** Activate the Over-Drive mode 
 166:Src/main.c    ****   */
 167:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     Error_Handler();
 170:Src/main.c    ****   }
 171:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 172:Src/main.c    ****   */
 173:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 179:Src/main.c    **** 
 180:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 181:Src/main.c    ****   {
 182:Src/main.c    ****     Error_Handler();
 183:Src/main.c    ****   }
 184:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_CLK48;
 185:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 186:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 187:Src/main.c    ****   {
 188:Src/main.c    ****     Error_Handler();
 189:Src/main.c    ****   }
 190:Src/main.c    **** }
 191:Src/main.c    **** 
 192:Src/main.c    **** /**
 193:Src/main.c    ****   * @brief TIM2 Initialization Function
 194:Src/main.c    ****   * @param None
 195:Src/main.c    ****   * @retval None
 196:Src/main.c    ****   */
 197:Src/main.c    **** static void MX_TIM2_Init(void)
 198:Src/main.c    **** {
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 201:Src/main.c    **** 
 202:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 203:Src/main.c    **** 
ARM GAS  /tmp/ccT4Rpz9.s 			page 5


 204:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 205:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 208:Src/main.c    **** 
 209:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 210:Src/main.c    ****   htim2.Instance = TIM2;
 211:Src/main.c    ****   htim2.Init.Prescaler = 53999;
 212:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 213:Src/main.c    ****   htim2.Init.Period = 1999;
 214:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 215:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 216:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     Error_Handler();
 219:Src/main.c    ****   }
 220:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 221:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 222:Src/main.c    ****   {
 223:Src/main.c    ****     Error_Handler();
 224:Src/main.c    ****   }
 225:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 226:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 227:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     Error_Handler();
 230:Src/main.c    ****   }
 231:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 232:Src/main.c    **** 
 233:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 234:Src/main.c    **** 
 235:Src/main.c    **** }
 236:Src/main.c    **** 
 237:Src/main.c    **** /**
 238:Src/main.c    ****   * @brief GPIO Initialization Function
 239:Src/main.c    ****   * @param None
 240:Src/main.c    ****   * @retval None
 241:Src/main.c    ****   */
 242:Src/main.c    **** static void MX_GPIO_Init(void)
 243:Src/main.c    **** {
  27              		.loc 1 243 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8AB0     		sub	sp, sp, #40
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 244:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/ccT4Rpz9.s 			page 6


  43              		.loc 1 244 0
  44 0006 0024     		movs	r4, #0
  45 0008 0594     		str	r4, [sp, #20]
  46 000a 0694     		str	r4, [sp, #24]
  47 000c 0794     		str	r4, [sp, #28]
  48 000e 0894     		str	r4, [sp, #32]
  49 0010 0994     		str	r4, [sp, #36]
  50              	.LBB2:
 245:Src/main.c    **** 
 246:Src/main.c    ****   /* GPIO Ports Clock Enable */
 247:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  51              		.loc 1 247 0
  52 0012 2F4B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00102 		orr	r2, r2, #1
  55 001a 1A63     		str	r2, [r3, #48]
  56 001c 1A6B     		ldr	r2, [r3, #48]
  57 001e 02F00102 		and	r2, r2, #1
  58 0022 0092     		str	r2, [sp]
  59 0024 009A     		ldr	r2, [sp]
  60              	.LBE2:
  61              	.LBB3:
 248:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
  62              		.loc 1 248 0
  63 0026 1A6B     		ldr	r2, [r3, #48]
  64 0028 42F48072 		orr	r2, r2, #256
  65 002c 1A63     		str	r2, [r3, #48]
  66 002e 1A6B     		ldr	r2, [r3, #48]
  67 0030 02F48072 		and	r2, r2, #256
  68 0034 0192     		str	r2, [sp, #4]
  69 0036 019A     		ldr	r2, [sp, #4]
  70              	.LBE3:
  71              	.LBB4:
 249:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  72              		.loc 1 249 0
  73 0038 1A6B     		ldr	r2, [r3, #48]
  74 003a 42F08002 		orr	r2, r2, #128
  75 003e 1A63     		str	r2, [r3, #48]
  76 0040 1A6B     		ldr	r2, [r3, #48]
  77 0042 02F08002 		and	r2, r2, #128
  78 0046 0292     		str	r2, [sp, #8]
  79 0048 029A     		ldr	r2, [sp, #8]
  80              	.LBE4:
  81              	.LBB5:
 250:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  82              		.loc 1 250 0
  83 004a 1A6B     		ldr	r2, [r3, #48]
  84 004c 42F00402 		orr	r2, r2, #4
  85 0050 1A63     		str	r2, [r3, #48]
  86 0052 1A6B     		ldr	r2, [r3, #48]
  87 0054 02F00402 		and	r2, r2, #4
  88 0058 0392     		str	r2, [sp, #12]
  89 005a 039A     		ldr	r2, [sp, #12]
  90              	.LBE5:
  91              	.LBB6:
 251:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  92              		.loc 1 251 0
ARM GAS  /tmp/ccT4Rpz9.s 			page 7


  93 005c 1A6B     		ldr	r2, [r3, #48]
  94 005e 42F04002 		orr	r2, r2, #64
  95 0062 1A63     		str	r2, [r3, #48]
  96 0064 1B6B     		ldr	r3, [r3, #48]
  97 0066 03F04003 		and	r3, r3, #64
  98 006a 0493     		str	r3, [sp, #16]
  99 006c 049B     		ldr	r3, [sp, #16]
 100              	.LBE6:
 252:Src/main.c    **** 
 253:Src/main.c    ****   /*Configure GPIO pin Output Level */
 254:Src/main.c    ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 101              		.loc 1 254 0
 102 006e 194F     		ldr	r7, .L3+4
 103 0070 2246     		mov	r2, r4
 104 0072 0221     		movs	r1, #2
 105 0074 3846     		mov	r0, r7
 106 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL0:
 255:Src/main.c    **** 
 256:Src/main.c    ****   /*Configure GPIO pin Output Level */
 257:Src/main.c    ****   HAL_GPIO_WritePin(ARD_D0_GPIO_Port, ARD_D0_Pin, GPIO_PIN_RESET);
 108              		.loc 1 257 0
 109 007a DFF86080 		ldr	r8, .L3+12
 110 007e 2246     		mov	r2, r4
 111 0080 8021     		movs	r1, #128
 112 0082 4046     		mov	r0, r8
 113 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL1:
 258:Src/main.c    **** 
 259:Src/main.c    ****   /*Configure GPIO pin Output Level */
 260:Src/main.c    ****   HAL_GPIO_WritePin(ARD_D4_GPIO_Port, ARD_D4_Pin, GPIO_PIN_RESET);
 115              		.loc 1 260 0
 116 0088 134E     		ldr	r6, .L3+8
 117 008a 2246     		mov	r2, r4
 118 008c 8021     		movs	r1, #128
 119 008e 3046     		mov	r0, r6
 120 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL2:
 261:Src/main.c    **** 
 262:Src/main.c    ****   /*Configure GPIO pin : LED_Pin */
 263:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Pin;
 122              		.loc 1 263 0
 123 0094 0223     		movs	r3, #2
 124 0096 0593     		str	r3, [sp, #20]
 264:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 125              		.loc 1 264 0
 126 0098 0125     		movs	r5, #1
 127 009a 0695     		str	r5, [sp, #24]
 265:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 265 0
 129 009c 0794     		str	r4, [sp, #28]
 266:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 130              		.loc 1 266 0
 131 009e 0894     		str	r4, [sp, #32]
 267:Src/main.c    ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 132              		.loc 1 267 0
 133 00a0 05A9     		add	r1, sp, #20
ARM GAS  /tmp/ccT4Rpz9.s 			page 8


 134 00a2 3846     		mov	r0, r7
 135 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL3:
 268:Src/main.c    **** 
 269:Src/main.c    ****   /*Configure GPIO pin : ARD_D0_Pin */
 270:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_D0_Pin;
 137              		.loc 1 270 0
 138 00a8 8027     		movs	r7, #128
 139 00aa 0597     		str	r7, [sp, #20]
 271:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 140              		.loc 1 271 0
 141 00ac 0695     		str	r5, [sp, #24]
 272:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 272 0
 143 00ae 0794     		str	r4, [sp, #28]
 273:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 144              		.loc 1 273 0
 145 00b0 0894     		str	r4, [sp, #32]
 274:Src/main.c    ****   HAL_GPIO_Init(ARD_D0_GPIO_Port, &GPIO_InitStruct);
 146              		.loc 1 274 0
 147 00b2 05A9     		add	r1, sp, #20
 148 00b4 4046     		mov	r0, r8
 149 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL4:
 275:Src/main.c    **** 
 276:Src/main.c    ****   /*Configure GPIO pin : ARD_D4_Pin */
 277:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_D4_Pin;
 151              		.loc 1 277 0
 152 00ba 0597     		str	r7, [sp, #20]
 278:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 153              		.loc 1 278 0
 154 00bc 0695     		str	r5, [sp, #24]
 279:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 279 0
 156 00be 0794     		str	r4, [sp, #28]
 280:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 157              		.loc 1 280 0
 158 00c0 0894     		str	r4, [sp, #32]
 281:Src/main.c    ****   HAL_GPIO_Init(ARD_D4_GPIO_Port, &GPIO_InitStruct);
 159              		.loc 1 281 0
 160 00c2 05A9     		add	r1, sp, #20
 161 00c4 3046     		mov	r0, r6
 162 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL5:
 282:Src/main.c    **** 
 283:Src/main.c    **** }
 164              		.loc 1 283 0
 165 00ca 0AB0     		add	sp, sp, #40
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 24
 168              		@ sp needed
 169 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 170              	.L4:
 171              		.align	2
 172              	.L3:
 173 00d0 00380240 		.word	1073887232
 174 00d4 00200240 		.word	1073881088
ARM GAS  /tmp/ccT4Rpz9.s 			page 9


 175 00d8 00180240 		.word	1073879040
 176 00dc 00080240 		.word	1073874944
 177              		.cfi_endproc
 178              	.LFE146:
 180              		.section	.text.MX_TIM2_Init,"ax",%progbits
 181              		.align	1
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv5-sp-d16
 187              	MX_TIM2_Init:
 188              	.LFB145:
 198:Src/main.c    **** 
 189              		.loc 1 198 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 32
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 30B5     		push	{r4, r5, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 12
 196              		.cfi_offset 4, -12
 197              		.cfi_offset 5, -8
 198              		.cfi_offset 14, -4
 199 0002 89B0     		sub	sp, sp, #36
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 48
 204:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 202              		.loc 1 204 0
 203 0004 0024     		movs	r4, #0
 204 0006 0494     		str	r4, [sp, #16]
 205 0008 0594     		str	r4, [sp, #20]
 206 000a 0694     		str	r4, [sp, #24]
 207 000c 0794     		str	r4, [sp, #28]
 205:Src/main.c    **** 
 208              		.loc 1 205 0
 209 000e 0194     		str	r4, [sp, #4]
 210 0010 0294     		str	r4, [sp, #8]
 211 0012 0394     		str	r4, [sp, #12]
 210:Src/main.c    ****   htim2.Init.Prescaler = 53999;
 212              		.loc 1 210 0
 213 0014 0F4D     		ldr	r5, .L7
 214 0016 4FF08043 		mov	r3, #1073741824
 215 001a 2B60     		str	r3, [r5]
 211:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 216              		.loc 1 211 0
 217 001c 4DF2EF23 		movw	r3, #53999
 218 0020 6B60     		str	r3, [r5, #4]
 212:Src/main.c    ****   htim2.Init.Period = 1999;
 219              		.loc 1 212 0
 220 0022 AC60     		str	r4, [r5, #8]
 213:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 221              		.loc 1 213 0
 222 0024 40F2CF73 		movw	r3, #1999
 223 0028 EB60     		str	r3, [r5, #12]
 214:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 224              		.loc 1 214 0
 225 002a 2C61     		str	r4, [r5, #16]
ARM GAS  /tmp/ccT4Rpz9.s 			page 10


 215:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 226              		.loc 1 215 0
 227 002c AC61     		str	r4, [r5, #24]
 216:Src/main.c    ****   {
 228              		.loc 1 216 0
 229 002e 2846     		mov	r0, r5
 230 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 231              	.LVL6:
 220:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 232              		.loc 1 220 0
 233 0034 4FF48053 		mov	r3, #4096
 234 0038 0493     		str	r3, [sp, #16]
 221:Src/main.c    ****   {
 235              		.loc 1 221 0
 236 003a 04A9     		add	r1, sp, #16
 237 003c 2846     		mov	r0, r5
 238 003e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 239              	.LVL7:
 225:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 240              		.loc 1 225 0
 241 0042 0194     		str	r4, [sp, #4]
 226:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 242              		.loc 1 226 0
 243 0044 0394     		str	r4, [sp, #12]
 227:Src/main.c    ****   {
 244              		.loc 1 227 0
 245 0046 01A9     		add	r1, sp, #4
 246 0048 2846     		mov	r0, r5
 247 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 248              	.LVL8:
 235:Src/main.c    **** 
 249              		.loc 1 235 0
 250 004e 09B0     		add	sp, sp, #36
 251              	.LCFI5:
 252              		.cfi_def_cfa_offset 12
 253              		@ sp needed
 254 0050 30BD     		pop	{r4, r5, pc}
 255              	.L8:
 256 0052 00BF     		.align	2
 257              	.L7:
 258 0054 00000000 		.word	htim2
 259              		.cfi_endproc
 260              	.LFE145:
 262              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 263              		.align	1
 264              		.global	HAL_TIM_PeriodElapsedCallback
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv5-sp-d16
 270              	HAL_TIM_PeriodElapsedCallback:
 271              	.LFB142:
  83:Src/main.c    ****   uint8_t buffer[] = "Hello World!";
 272              		.loc 1 83 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccT4Rpz9.s 			page 11


 276              	.LVL9:
 277 0000 08B5     		push	{r3, lr}
 278              	.LCFI6:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
  85:Src/main.c    ****   {
 282              		.loc 1 85 0
 283 0002 0368     		ldr	r3, [r0]
 284 0004 B3F1804F 		cmp	r3, #1073741824
 285 0008 00D0     		beq	.L12
 286              	.LVL10:
 287              	.L9:
 288 000a 08BD     		pop	{r3, pc}
 289              	.LVL11:
 290              	.L12:
  87:Src/main.c    ****   }
 291              		.loc 1 87 0
 292 000c 0221     		movs	r1, #2
 293 000e 0248     		ldr	r0, .L13
 294              	.LVL12:
 295 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 296              	.LVL13:
  89:Src/main.c    **** /* USER CODE END 0 */
 297              		.loc 1 89 0
 298 0014 F9E7     		b	.L9
 299              	.L14:
 300 0016 00BF     		.align	2
 301              	.L13:
 302 0018 00200240 		.word	1073881088
 303              		.cfi_endproc
 304              	.LFE142:
 306              		.section	.text.SystemClock_Config,"ax",%progbits
 307              		.align	1
 308              		.global	SystemClock_Config
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv5-sp-d16
 314              	SystemClock_Config:
 315              	.LFB144:
 142:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 316              		.loc 1 142 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 208
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 30B5     		push	{r4, r5, lr}
 321              	.LCFI7:
 322              		.cfi_def_cfa_offset 12
 323              		.cfi_offset 4, -12
 324              		.cfi_offset 5, -8
 325              		.cfi_offset 14, -4
 326 0002 B5B0     		sub	sp, sp, #212
 327              	.LCFI8:
 328              		.cfi_def_cfa_offset 224
 143:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 329              		.loc 1 143 0
ARM GAS  /tmp/ccT4Rpz9.s 			page 12


 330 0004 3022     		movs	r2, #48
 331 0006 0021     		movs	r1, #0
 332 0008 28A8     		add	r0, sp, #160
 333 000a FFF7FEFF 		bl	memset
 334              	.LVL14:
 144:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 335              		.loc 1 144 0
 336 000e 0024     		movs	r4, #0
 337 0010 2394     		str	r4, [sp, #140]
 338 0012 2494     		str	r4, [sp, #144]
 339 0014 2594     		str	r4, [sp, #148]
 340 0016 2694     		str	r4, [sp, #152]
 341 0018 2794     		str	r4, [sp, #156]
 145:Src/main.c    **** 
 342              		.loc 1 145 0
 343 001a 8422     		movs	r2, #132
 344 001c 2146     		mov	r1, r4
 345 001e 02A8     		add	r0, sp, #8
 346 0020 FFF7FEFF 		bl	memset
 347              	.LVL15:
 348              	.LBB7:
 149:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 349              		.loc 1 149 0
 350 0024 204B     		ldr	r3, .L17
 351 0026 1A6C     		ldr	r2, [r3, #64]
 352 0028 42F08052 		orr	r2, r2, #268435456
 353 002c 1A64     		str	r2, [r3, #64]
 354 002e 1B6C     		ldr	r3, [r3, #64]
 355 0030 03F08053 		and	r3, r3, #268435456
 356 0034 0093     		str	r3, [sp]
 357 0036 009B     		ldr	r3, [sp]
 358              	.LBE7:
 359              	.LBB8:
 150:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 360              		.loc 1 150 0
 361 0038 1C4B     		ldr	r3, .L17+4
 362 003a 1A68     		ldr	r2, [r3]
 363 003c 42F44042 		orr	r2, r2, #49152
 364 0040 1A60     		str	r2, [r3]
 365 0042 1B68     		ldr	r3, [r3]
 366 0044 03F44043 		and	r3, r3, #49152
 367 0048 0193     		str	r3, [sp, #4]
 368 004a 019B     		ldr	r3, [sp, #4]
 369              	.LBE8:
 153:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 370              		.loc 1 153 0
 371 004c 0123     		movs	r3, #1
 372 004e 2893     		str	r3, [sp, #160]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 373              		.loc 1 154 0
 374 0050 4FF48033 		mov	r3, #65536
 375 0054 2993     		str	r3, [sp, #164]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 376              		.loc 1 155 0
 377 0056 0225     		movs	r5, #2
 378 0058 2E95     		str	r5, [sp, #184]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
ARM GAS  /tmp/ccT4Rpz9.s 			page 13


 379              		.loc 1 156 0
 380 005a 4FF48003 		mov	r3, #4194304
 381 005e 2F93     		str	r3, [sp, #188]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 432;
 382              		.loc 1 157 0
 383 0060 1923     		movs	r3, #25
 384 0062 3093     		str	r3, [sp, #192]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 385              		.loc 1 158 0
 386 0064 4FF4D873 		mov	r3, #432
 387 0068 3193     		str	r3, [sp, #196]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 388              		.loc 1 159 0
 389 006a 3295     		str	r5, [sp, #200]
 160:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 390              		.loc 1 160 0
 391 006c 0923     		movs	r3, #9
 392 006e 3393     		str	r3, [sp, #204]
 161:Src/main.c    ****   {
 393              		.loc 1 161 0
 394 0070 28A8     		add	r0, sp, #160
 395 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 396              	.LVL16:
 167:Src/main.c    ****   {
 397              		.loc 1 167 0
 398 0076 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 399              	.LVL17:
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 400              		.loc 1 173 0
 401 007a 0F23     		movs	r3, #15
 402 007c 2393     		str	r3, [sp, #140]
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 403              		.loc 1 175 0
 404 007e 2495     		str	r5, [sp, #144]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 405              		.loc 1 176 0
 406 0080 2594     		str	r4, [sp, #148]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 407              		.loc 1 177 0
 408 0082 4FF4A053 		mov	r3, #5120
 409 0086 2693     		str	r3, [sp, #152]
 178:Src/main.c    **** 
 410              		.loc 1 178 0
 411 0088 4FF48053 		mov	r3, #4096
 412 008c 2793     		str	r3, [sp, #156]
 180:Src/main.c    ****   {
 413              		.loc 1 180 0
 414 008e 0721     		movs	r1, #7
 415 0090 23A8     		add	r0, sp, #140
 416 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 417              	.LVL18:
 184:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 418              		.loc 1 184 0
 419 0096 4FF40013 		mov	r3, #2097152
 420 009a 0293     		str	r3, [sp, #8]
 185:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 421              		.loc 1 185 0
ARM GAS  /tmp/ccT4Rpz9.s 			page 14


 422 009c 2194     		str	r4, [sp, #132]
 186:Src/main.c    ****   {
 423              		.loc 1 186 0
 424 009e 02A8     		add	r0, sp, #8
 425 00a0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 426              	.LVL19:
 190:Src/main.c    **** 
 427              		.loc 1 190 0
 428 00a4 35B0     		add	sp, sp, #212
 429              	.LCFI9:
 430              		.cfi_def_cfa_offset 12
 431              		@ sp needed
 432 00a6 30BD     		pop	{r4, r5, pc}
 433              	.L18:
 434              		.align	2
 435              	.L17:
 436 00a8 00380240 		.word	1073887232
 437 00ac 00700040 		.word	1073770496
 438              		.cfi_endproc
 439              	.LFE144:
 441              		.section	.text.main,"ax",%progbits
 442              		.align	1
 443              		.global	main
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu fpv5-sp-d16
 449              	main:
 450              	.LFB143:
  97:Src/main.c    ****   /* USER CODE BEGIN 1 */
 451              		.loc 1 97 0
 452              		.cfi_startproc
 453              		@ Volatile: function does not return.
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 08B5     		push	{r3, lr}
 457              	.LCFI10:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 3, -8
 460              		.cfi_offset 14, -4
 105:Src/main.c    **** 
 461              		.loc 1 105 0
 462 0002 FFF7FEFF 		bl	HAL_Init
 463              	.LVL20:
 112:Src/main.c    **** 
 464              		.loc 1 112 0
 465 0006 FFF7FEFF 		bl	SystemClock_Config
 466              	.LVL21:
 119:Src/main.c    ****   MX_TIM2_Init();
 467              		.loc 1 119 0
 468 000a FFF7FEFF 		bl	MX_GPIO_Init
 469              	.LVL22:
 120:Src/main.c    ****   MX_USB_DEVICE_Init();
 470              		.loc 1 120 0
 471 000e FFF7FEFF 		bl	MX_TIM2_Init
 472              	.LVL23:
 121:Src/main.c    ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccT4Rpz9.s 			page 15


 473              		.loc 1 121 0
 474 0012 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 475              	.LVL24:
 123:Src/main.c    ****   /* USER CODE END 2 */
 476              		.loc 1 123 0
 477 0016 0248     		ldr	r0, .L22
 478 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 479              	.LVL25:
 480              	.L20:
 481 001c FEE7     		b	.L20
 482              	.L23:
 483 001e 00BF     		.align	2
 484              	.L22:
 485 0020 00000000 		.word	htim2
 486              		.cfi_endproc
 487              	.LFE143:
 489              		.section	.text.Error_Handler,"ax",%progbits
 490              		.align	1
 491              		.global	Error_Handler
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv5-sp-d16
 497              	Error_Handler:
 498              	.LFB147:
 284:Src/main.c    **** 
 285:Src/main.c    **** /* USER CODE BEGIN 4 */
 286:Src/main.c    **** 
 287:Src/main.c    **** /* USER CODE END 4 */
 288:Src/main.c    **** 
 289:Src/main.c    **** /**
 290:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 291:Src/main.c    ****   * @retval None
 292:Src/main.c    ****   */
 293:Src/main.c    **** void Error_Handler(void)
 294:Src/main.c    **** {
 499              		.loc 1 294 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504 0000 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE147:
 508              		.comm	htim2,64,4
 509              		.text
 510              	.Letext0:
 511              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 512              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 513              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 514              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 515              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 516              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 517              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 518              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 519              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 520              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
ARM GAS  /tmp/ccT4Rpz9.s 			page 16


 521              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 522              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 523              		.file 14 "/usr/include/newlib/sys/lock.h"
 524              		.file 15 "/usr/include/newlib/sys/_types.h"
 525              		.file 16 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 526              		.file 17 "/usr/include/newlib/sys/reent.h"
 527              		.file 18 "/usr/include/newlib/stdlib.h"
 528              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 529              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 530              		.file 21 "Inc/usb_device.h"
ARM GAS  /tmp/ccT4Rpz9.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccT4Rpz9.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccT4Rpz9.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccT4Rpz9.s:173    .text.MX_GPIO_Init:00000000000000d0 $d
     /tmp/ccT4Rpz9.s:181    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccT4Rpz9.s:187    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccT4Rpz9.s:258    .text.MX_TIM2_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccT4Rpz9.s:263    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccT4Rpz9.s:270    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccT4Rpz9.s:302    .text.HAL_TIM_PeriodElapsedCallback:0000000000000018 $d
     /tmp/ccT4Rpz9.s:307    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccT4Rpz9.s:314    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccT4Rpz9.s:436    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccT4Rpz9.s:442    .text.main:0000000000000000 $t
     /tmp/ccT4Rpz9.s:449    .text.main:0000000000000000 main
     /tmp/ccT4Rpz9.s:485    .text.main:0000000000000020 $d
     /tmp/ccT4Rpz9.s:490    .text.Error_Handler:0000000000000000 $t
     /tmp/ccT4Rpz9.s:497    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_TIM_Base_Start_IT
